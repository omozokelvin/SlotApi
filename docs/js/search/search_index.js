var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessTokenPayload.html",[0,0.215,1,2.662]],["body/classes/AccessTokenPayload.html",[0,0.387,1,4.105,2,0.956,3,0.113,4,0.101,5,0.101,6,3.707,7,1.748,8,4.762,9,0.256,10,0.76,11,3.879,12,4.546,13,4.181,14,0.406,15,0.009,16,3.503,17,0.639,18,5.278,19,5.098,20,3.634,21,6.812,22,5.278,23,4.785,24,5.278,25,0.239,26,3.181,27,3.505,28,3.505,29,2.925,30,3.046,31,2.892,32,2.308,33,3.383,34,1.522,35,0.17,36,4.524,37,2.535,38,0.795,39,3.746,40,3.332,41,3.505,42,3.95,43,3.332,44,1.522,45,3.634,46,3.181,47,3.181,48,1.636,49,2.621,50,0.007,51,0.007]],["title/classes/AllExceptionsFilter.html",[0,0.215,52,3.306]],["body/classes/AllExceptionsFilter.html",[0,0.264,2,0.985,3,0.116,4,0.104,5,0.104,9,0.263,14,0.276,15,0.009,17,0.461,25,0.163,35,0.116,50,0.007,51,0.007,52,5.193,53,4.797,54,3.333,55,7.647,56,1.74,57,2.056,58,3.523,59,6.94,60,7.647,61,8.057,62,5.433,63,1.362,64,1.081,65,1.008,66,7.647,67,1.362,68,6.94,69,4.066,70,1.032,71,5.433,72,1.603,73,4.797,74,5.433,75,3.011,76,5.433,77,5.593,78,4.797,79,5.433,80,5.433,81,2.616,82,5.433,83,3.034,84,5.433,85,5.433,86,5.433,87,2.862,88,5.433,89,4.066,90,4.066,91,5.433,92,5.433]],["title/injectables/AnonymousStrategy.html",[93,0.693,94,3.103]],["body/injectables/AnonymousStrategy.html",[0,0.275,3,0.121,4,0.109,5,0.109,7,1.829,9,0.275,14,0.288,15,0.009,17,0.604,25,0.253,35,0.121,50,0.007,51,0.007,56,1.787,63,1.421,64,1.128,65,1.052,67,1.421,70,1.077,93,1.118,94,5.008,95,1.845,96,5.006,97,5.746,98,6.295,99,8.184,100,2.273,101,5.006,102,4.275,103,5.669,104,5.669,105,2.636,106,2.916,107,2.723,108,4.569,109,3.417,110,4.569,111,4.569,112,3.982,113,3.765,114,5.669,115,3.579,116,5.006,117,5.006,118,5.006,119,1.99,120,5.006,121,4.569,122,1.238,123,5.669]],["title/classes/ApiResponse.html",[0,0.215,124,2.662]],["body/classes/ApiResponse.html",[0,0.42,2,0.98,3,0.115,4,0.104,5,0.104,7,1.775,9,0.262,10,0.772,14,0.423,15,0.009,17,0.587,20,2.884,25,0.208,35,0.177,38,0.735,50,0.007,51,0.007,81,2.61,124,4.169,125,3.591,126,4.847,127,3.239,128,3.436,129,5.407,130,5.407,131,2.514,132,5.067,133,4.642,134,2.937,135,1.636,136,2.685,137,3.258,138,3.153,139,3.834,140,3.993,141,4.169,142,3.591,143,3.591,144,3.591,145,2.197,146,3.591,147,3.413,148,3.121]],["title/classes/ApiRoute.html",[0,0.215,149,2.55]],["body/classes/ApiRoute.html",[0,0.329,2,0.947,3,0.112,4,0.101,5,0.101,7,1.342,9,0.253,10,0.756,14,0.382,15,0.009,17,0.574,25,0.239,33,3.187,34,1.508,35,0.17,38,0.792,39,3.363,50,0.007,51,0.007,72,1.04,149,4.334,150,5.274,151,3.672,152,4.74,153,4.525,154,1.584,155,4.08,156,4.617,157,2.149,158,4.084,159,4.584,160,5.228,161,3.018,162,5.228,163,3.252,164,2.689,165,3.252,166,2.689,167,3.729,168,2.715,169,2.689,170,1.745,171,3.363,172,3.672,173,4.214,174,3.913,175,1.835,176,3.913]],["title/classes/ApiRouteDto.html",[0,0.215,177,2.934]],["body/classes/ApiRouteDto.html",[0,0.359,2,1.089,3,0.128,4,0.116,5,0.116,9,0.291,10,0.825,14,0.376,15,0.009,17,0.627,25,0.222,33,3.398,34,1.733,35,0.128,38,0.804,39,3.671,50,0.007,51,0.007,134,3.546,135,1.817,152,5.054,153,4.825,154,1.729,155,4.454,177,4.908,178,7.069,179,5.304,180,6.007,181,6.007,182,6.007]],["title/controllers/AppController.html",[183,2.054,184,3.306]],["body/controllers/AppController.html",[0,0.28,3,0.123,4,0.111,5,0.111,9,0.28,15,0.009,17,0.611,25,0.247,34,1.665,35,0.123,50,0.007,51,0.007,56,1.808,67,1.808,69,4.32,70,1.096,122,1.574,154,1.687,183,3.353,184,5.396,185,2.684,186,5.097,187,8.237,188,8.237,189,5.773,190,5.773,191,5.773,192,5.773,193,3.479,194,3.644,195,3.644,196,4.965,197,5.097,198,4.652,199,3.644,200,5.773,201,3.079,202,1.879,203,5.811,204,5.773,205,5.773,206,5.773,207,5.773]],["title/modules/AppModule.html",[208,1.633,209,3.306]],["body/modules/AppModule.html",[0,0.171,3,0.075,4,0.068,5,0.068,14,0.179,15,0.009,17,0.299,25,0.266,35,0.075,50,0.005,51,0.005,52,3.859,56,0.884,57,0.948,63,0.884,64,1.335,65,0.654,67,0.884,70,0.67,72,0.702,102,3.333,105,1.639,106,1.813,107,1.693,122,0.77,139,3.38,157,1.606,170,1.176,184,4.564,185,2.398,196,4.709,197,3.113,208,2.254,209,6.616,210,1.693,211,1.693,212,1.813,213,1.813,214,1.693,215,3.136,216,1.813,217,3.113,218,3.113,219,3.113,220,4.954,221,5.239,222,4.496,223,5.239,224,4.954,225,4.954,226,4.496,227,2.652,228,1.813,229,1.813,230,3.525,231,2.858,232,3.525,233,5.157,234,6.711,235,3.525,236,3.525,237,2.638,238,3.525,239,3.622,240,3.525,241,2.638,242,3.525,243,4.156,244,3.525,245,3.113,246,2.638,247,3.525,248,3.113,249,3.113,250,2.638,251,3.525,252,2.841,253,2.841,254,3.525,255,6.098,256,5.157,257,2.638,258,2.341,259,3.525,260,3.113,261,5.157,262,3.525,263,3.525,264,3.525,265,3.525,266,3.525,267,5.157,268,2.841,269,2.638,270,2.841,271,2.977,272,2.638,273,2.841,274,3.525,275,3.525,276,3.113,277,4.915,278,2.638,279,3.113,280,3.525,281,3.525,282,3.525,283,3.525,284,3.525,285,3.113,286,3.525,287,3.525,288,2.638,289,5.157,290,3.525,291,1.813,292,2.226,293,5.385,294,6.098,295,3.525]],["title/injectables/AppService.html",[93,0.693,196,2.789]],["body/injectables/AppService.html",[0,0.268,3,0.082,4,0.074,5,0.074,9,0.187,10,0.615,13,2.141,14,0.28,15,0.009,17,0.594,25,0.248,33,2.726,34,1.114,35,0.118,38,0.619,44,1.852,50,0.005,51,0.005,56,1.381,57,1.726,58,2.409,63,0.968,64,0.769,65,0.717,67,1.381,70,0.734,72,0.769,87,2.649,93,0.864,95,1.257,100,2.209,102,3.934,105,1.796,106,1.987,107,1.855,122,1.203,157,1.537,170,1.289,196,3.478,202,2.41,272,2.891,291,1.987,296,3.113,297,2.772,298,3.256,299,6.183,300,6.183,301,3.411,302,5.928,303,4.39,304,5.51,305,3.863,306,3.863,307,3.659,308,1.356,309,1.197,310,4.865,311,2.141,312,2.328,313,2.328,314,2.565,315,2.891,316,2.713,317,4.865,318,4.123,319,1.918,320,2.891,321,4.881,322,2.891,323,6.183,324,3.411,325,3.411,326,3.411,327,3.411,328,3.411,329,3.113,330,5.671,331,3.411,332,3.411,333,3.411,334,2.713,335,3.113,336,5.24,337,3.411,338,4.865,339,4.806,340,2.409,341,2.339,342,3.411,343,3.411,344,3.87,345,4.865,346,4.865,347,4.865,348,3.87,349,3.411,350,3.411,351,3.411,352,4.865,353,1.918,354,3.411,355,2.713,356,3.411,357,3.411,358,3.411,359,3.411,360,1.428]],["title/classes/AssignRoleDto.html",[0,0.215,361,3.103]],["body/classes/AssignRoleDto.html",[0,0.371,2,1.151,3,0.136,4,0.122,5,0.122,9,0.308,10,0.853,11,4.219,14,0.323,15,0.009,17,0.538,25,0.191,35,0.136,38,0.736,50,0.007,51,0.007,134,3.245,135,1.922,154,1.486,157,1.83,322,5.722,361,5.37,362,6.751,363,4.753,364,6.351,365,6.351,366,6.751,367,5.608]],["title/controllers/AuthController.html",[183,2.054,368,3.306]],["body/controllers/AuthController.html",[0,0.114,3,0.05,4,0.045,5,0.045,9,0.114,14,0.395,15,0.009,17,0.658,25,0.251,31,3.478,32,1.025,34,0.676,35,0.05,37,1.81,44,0.676,48,2.494,50,0.004,51,0.004,56,0.945,57,2.203,63,1.914,64,1.519,65,1.416,67,1.944,70,0.445,72,1.261,100,0.94,122,1.693,154,1.814,183,1.09,185,1.09,193,1.413,194,1.48,195,1.48,199,1.48,202,1.762,297,1.949,298,1.752,334,1.647,353,4.279,368,2.82,369,2.07,370,1.557,371,1.557,372,3.769,373,3.769,374,3.769,375,3.769,376,3.328,377,4.78,378,3.769,379,3.037,380,3.328,381,3.328,382,3.769,383,3.328,384,2.344,385,3.417,386,3.769,387,3.163,388,2.344,389,2.344,390,2.344,391,2.344,392,2.344,393,6.166,394,2.344,395,2.344,396,2.344,397,3.802,398,3.769,399,2.344,400,2.344,401,2.344,402,3.536,403,2.344,404,2.281,405,2.344,406,2.344,407,2.07,408,3.802,409,3.769,410,2.344,411,2.344,412,3.595,413,3.769,414,2.344,415,2.344,416,3.417,417,3.769,418,2.344,419,2.344,420,3.802,421,3.769,422,2.344,423,2.07,424,3.802,425,3.769,426,2.344,427,2.344,428,2.344,429,4.051,430,2.344,431,2.344,432,2.07,433,3.802,434,3.769,435,2.344,436,3.595,437,1.754,438,1.754,439,1.754,440,2.344,441,1.754,442,3.319,443,2.07,444,2.07,445,2.344,446,2.07,447,2.07,448,2.07,449,2.07,450,1.557,451,1.889,452,3.037,453,1.754,454,2.344,455,3.138,456,2.07,457,2.07,458,2.647,459,2.07,460,3.138,461,2.07,462,1.889,463,3.037,464,2.344,465,2.521,466,1.353,467,1.889,468,1.754,469,1.557,470,1.754,471,2.344,472,2.503,473,3.769,474,2.344,475,2.344,476,2.344,477,2.344,478,4.6,479,6.334,480,6.334,481,2.344,482,2.344,483,2.344,484,2.344,485,2.344,486,2.344,487,2.344,488,2.344,489,2.344,490,2.344,491,2.344,492,2.344,493,2.344,494,2.344,495,2.344,496,2.344,497,2.344,498,5.237,499,2.344,500,2.344,501,2.344,502,2.344,503,2.344,504,1.889,505,1.48,506,1.889,507,2.344,508,2.344,509,2.344,510,2.344,511,2.344,512,2.344,513,2.344,514,2.344]],["title/modules/AuthModule.html",[208,1.633,220,2.934]],["body/modules/AuthModule.html",[0,0.182,3,0.08,4,0.072,5,0.072,15,0.009,25,0.265,27,2.487,28,2.487,35,0.08,37,1.799,43,2.365,48,1.161,50,0.005,51,0.005,57,1.449,64,0.745,70,0.711,72,1.072,94,5.35,102,3.429,105,1.742,106,1.926,107,1.799,109,2.257,113,2.487,119,1.314,121,3.018,122,1.176,157,0.897,168,2.161,170,1.25,185,2.506,208,2.334,210,1.799,211,1.799,212,1.926,213,1.926,214,1.799,215,3.246,216,3.246,220,5.954,226,3.248,227,2.772,228,1.926,229,1.926,231,2.987,250,2.803,258,2.487,288,4.033,291,1.926,292,2.365,311,2.076,312,2.257,313,2.257,368,4.724,455,5.642,456,3.307,515,3.307,516,3.307,517,3.307,518,3.307,519,5.35,520,5.059,521,5.12,522,5.35,523,5.35,524,4.809,525,3.745,526,3.745,527,3.018,528,3.785,529,2.803,530,3.745,531,3.745,532,3.745,533,3.745,534,3.307,535,3.785,536,3.745,537,3.018,538,3.745,539,3.745,540,3.745,541,2.803,542,2.631,543,3.307,544,3.745,545,3.745,546,3.307,547,2.803,548,3.745,549,3.307,550,3.745,551,4.758,552,3.307,553,3.307]],["title/classes/AuthPayload.html",[0,0.215,36,2.934]],["body/classes/AuthPayload.html",[0,0.379,1,3.009,2,0.905,3,0.107,4,0.096,5,0.096,6,3.507,7,1.281,8,4.148,9,0.242,10,0.733,11,2.568,12,3.009,13,2.767,14,0.438,15,0.009,16,2.568,17,0.687,19,3.736,23,3.507,25,0.234,26,3.009,27,3.316,28,3.316,29,2.767,30,2.882,31,2.789,32,2.183,33,3.312,34,1.44,35,0.167,36,4.877,37,3.527,38,0.847,39,3.647,40,4.148,41,4.877,42,4.917,43,4.636,44,1.44,45,3.917,46,4.425,47,3.009,48,1.548,49,2.48,50,0.006,51,0.006,65,1.219,154,1.718,155,4.425,554,4.993,555,1.948,556,4.993,557,4.993,558,4.993,559,4.993]],["title/injectables/AuthService.html",[93,0.693,455,2.934]],["body/injectables/AuthService.html",[0,0.109,3,0.048,4,0.043,5,0.043,9,0.108,10,0.405,12,2.188,14,0.358,15,0.009,17,0.613,25,0.239,31,3.138,32,0.978,35,0.048,37,3.55,38,0.8,40,1.413,41,4.118,43,4.296,44,1.52,45,1.936,46,2.76,47,3.175,48,2.441,49,1.111,50,0.004,51,0.004,56,0.91,57,2.232,58,1.587,63,1.706,64,1.354,65,1.262,67,1.706,70,0.425,72,1.567,75,2.92,87,1.497,89,1.675,90,1.675,93,0.569,95,0.728,100,1.455,122,1.485,157,0.869,170,0.747,202,2.126,292,1.413,297,2.76,298,2.45,301,1.976,302,4.641,307,4.118,308,1.607,309,1.419,314,1.486,315,1.675,318,2.716,319,1.111,340,1.587,341,3.475,353,3.244,360,1.342,371,1.486,376,4.044,377,4.652,380,4.044,381,3.205,397,3.7,404,1.897,407,3.205,408,3.7,420,3.7,423,3.205,424,3.7,442,2.55,443,1.976,444,1.976,446,1.976,447,1.976,448,1.976,449,1.976,455,2.411,465,3.484,466,1.292,478,4.849,521,4.1,529,1.675,535,1.572,542,5.461,547,1.675,560,1.976,561,4.579,562,4.579,563,4.579,564,4.338,565,3.63,566,2.238,567,2.238,568,2.238,569,2.238,570,2.55,571,2.238,572,5.268,573,4.888,574,2.238,575,5.791,576,2.693,577,2.238,578,2.238,579,2.238,580,2.238,581,2.238,582,2.238,583,2.238,584,3.63,585,1.804,586,1.572,587,2.238,588,2.238,589,1.976,590,2.238,591,1.804,592,1.804,593,1.572,594,1.976,595,1.111,596,1.804,597,3.205,598,3.205,599,2.238,600,3.63,601,2.238,602,3.205,603,3.205,604,3.63,605,3.205,606,3.205,607,3.205,608,2.238,609,1.804,610,2.238,611,2.238,612,2.238,613,2.238,614,2.064,615,3.63,616,2.238,617,2.238,618,3.63,619,2.238,620,2.238,621,2.238,622,2.411,623,2.238,624,2.188,625,2.238,626,2.716,627,2.238,628,2.925,629,2.238,630,1.572,631,2.238,632,2.238,633,2.238,634,2.238,635,2.238,636,1.804,637,1.804,638,1.976,639,3.63,640,2.238,641,2.238,642,2.238]],["title/classes/AuthSuccessResponse.html",[0,0.215,47,2.662]],["body/classes/AuthSuccessResponse.html",[0,0.391,1,3.266,2,0.982,3,0.116,4,0.104,5,0.104,6,3.807,7,1.391,8,4.374,9,0.263,10,0.773,11,2.787,12,3.266,13,3.004,14,0.389,15,0.009,16,2.787,17,0.587,19,4.056,23,3.807,25,0.242,26,3.266,27,3.599,28,3.599,29,3.004,30,3.128,31,3.242,32,2.37,33,3.417,34,1.563,35,0.172,36,5.072,37,2.603,38,0.801,39,3.794,40,3.422,41,3.599,42,4.056,43,3.422,44,1.563,45,3.696,46,3.266,47,4.176,48,2.367,49,3.794,50,0.007,51,0.007,65,1.286,643,5.42,644,5.42]],["title/injectables/CacheService.html",[93,0.693,645,3.56]],["body/injectables/CacheService.html",[0,0.258,3,0.113,4,0.102,5,0.102,9,0.258,14,0.407,15,0.009,17,0.642,25,0.24,35,0.113,38,0.815,50,0.007,51,0.007,56,1.716,63,2.004,64,1.506,65,1.404,67,1.716,70,1.3,93,1.073,95,1.73,100,2.132,122,1.494,128,2.64,138,2.726,252,4.284,253,5.515,268,6.664,277,6.441,292,3.356,297,1.914,309,2.477,404,1.914,570,3.734,645,5.515,646,4.694,647,6.043,648,5.316,649,5.316,650,6.844,651,6.844,652,5.316,653,5.515,654,6.844,655,5.316,656,5.316,657,5.316,658,5.316,659,5.316]],["title/classes/ChangePasswordDto.html",[0,0.215,385,2.789]],["body/classes/ChangePasswordDto.html",[0,0.329,2,0.95,3,0.112,4,0.101,5,0.101,7,1.74,9,0.254,10,0.757,14,0.345,15,0.009,17,0.575,25,0.253,34,1.512,35,0.112,38,0.766,50,0.007,51,0.007,72,1.349,81,2.885,134,3.191,135,1.586,154,1.586,385,4.281,387,4.578,412,3.48,462,4.224,463,4.224,555,2.044,595,2.603,614,3.056,660,6.638,661,3.922,662,6.781,663,6.058,664,5.465,665,4.627,666,5.465,667,4.503,668,5.241,669,4.627,670,2.437,671,2.695,672,3.922,673,4.224,674,3.922,675,5.241,676,5.241,677,3.922,678,3.922,679,5.988,680,5.988,681,5.241]],["title/classes/CreateLoanDto.html",[0,0.215,682,2.934]],["body/classes/CreateLoanDto.html",[0,0.34,2,1.267,3,0.149,4,0.134,5,0.134,15,0.008,35,0.149,50,0.008,51,0.008,682,5.374,683,6.173,684,5.634]],["title/classes/CreateRoleDto.html",[0,0.215,685,2.934]],["body/classes/CreateRoleDto.html",[0,0.355,2,0.897,3,0.106,4,0.095,5,0.095,9,0.24,10,0.729,14,0.431,15,0.009,16,3.359,17,0.659,25,0.234,33,3.431,34,1.427,35,0.139,38,0.8,39,3.631,50,0.006,51,0.006,64,1.455,115,4.908,131,2.301,134,3.3,135,1.497,154,1.819,155,4.406,157,1.75,177,5.163,322,4.888,363,3.703,366,4.369,367,5.767,685,4.337,686,7.137,687,4.855,688,4.855,689,5.892,690,2.982,691,4.949,692,4.949,693,4.949,694,6.531,695,5.892,696,4.949,697,4.949,698,4.949,699,4.949,700,4.949,701,4.949,702,4.369,703,4.369,704,6.531,705,2.458,706,4.949]],["title/classes/CreateUserDto.html",[0,0.215,412,2.934]],["body/classes/CreateUserDto.html",[0,0.36,2,0.921,3,0.109,4,0.098,5,0.098,7,1.706,9,0.246,10,0.742,14,0.4,15,0.009,17,0.666,25,0.245,34,1.467,35,0.109,38,0.806,50,0.006,51,0.006,65,1.234,81,2.275,131,2.364,133,3.837,134,3.551,135,1.538,145,2.112,154,1.838,157,1.592,309,2.296,412,4.415,555,1.983,622,4.92,624,4.465,630,5.204,707,7.2,708,4.098,709,6.649,710,5.544,711,5.544,712,5.085,713,5.085,714,5.085,715,5.085,716,5.085,717,4.49,718,3.805,719,5.085,720,5.085,721,5.085,722,5.085,723,4.198,724,5.085,725,5.085,726,5.085,727,5.085]],["title/classes/DropDownOption.html",[0,0.215,728,3.306]],["body/classes/DropDownOption.html",[0,0.3,2,1.119,3,0.132,4,0.119,5,0.119,9,0.299,10,0.839,14,0.429,15,0.009,17,0.637,25,0.185,33,3.44,34,1.781,35,0.132,38,0.865,50,0.007,51,0.007,154,1.758,309,2.512,690,4.53,728,5.625,729,5.452,730,7.155,731,6.174,732,6.174]],["title/classes/EmailDto.html",[0,0.215,718,3.306]],["body/classes/EmailDto.html",[0,0.391,2,1.103,3,0.13,4,0.117,5,0.117,9,0.295,10,0.832,14,0.31,15,0.009,17,0.516,25,0.242,35,0.13,38,0.718,50,0.007,51,0.007,81,2.55,131,2.832,135,1.842,154,1.425,309,1.887,555,2.375,595,3.024,614,3.63,670,2.832,671,3.132,718,5.577,723,5.085,733,5.377,734,6.027,735,6.09,736,6.09,737,6.09]],["title/classes/EnvironmentVariables.html",[0,0.215,105,2.054]],["body/classes/EnvironmentVariables.html",[0,0.31,2,0.693,3,0.082,4,0.074,5,0.074,9,0.185,10,0.61,14,0.444,15,0.009,17,0.74,25,0.192,35,0.117,38,0.874,44,1.103,50,0.005,51,0.005,65,0.709,72,1.088,105,2.543,119,1.342,122,0.835,131,1.778,132,3.632,133,4.022,134,3.825,135,1.157,138,1.969,154,2.041,157,0.915,360,1.413,647,3.376,734,5.518,738,3.081,739,6.385,740,6.385,741,6.385,742,6.385,743,6.385,744,6.385,745,6.385,746,6.385,747,6.385,748,6.385,749,6.385,750,6.385,751,6.385,752,6.385,753,6.385,754,4.092,755,3.823,756,3.823,757,3.823,758,3.823,759,3.823,760,5.146,761,3.823,762,3.823,763,3.823,764,3.823,765,3.823,766,3.823,767,3.823,768,3.823,769,3.823,770,3.823,771,3.823,772,3.376,773,3.823,774,3.823,775,3.376,776,3.081,777,3.081,778,3.823,779,3.823,780,2.206,781,3.376,782,3.081,783,5.469,784,3.823,785,3.376,786,3.823,787,2.685,788,3.823,789,3.823,790,3.823,791,2.413,792,3.823]],["title/classes/ErrorMessages.html",[0,0.215,670,2.054]],["body/classes/ErrorMessages.html",[0,0.093,2,0.347,3,0.041,4,0.037,5,0.037,9,0.093,10,0.356,14,0.433,15,0.009,17,0.705,25,0.123,35,0.041,38,0.852,44,1.383,48,1.651,49,1.586,50,0.003,51,0.003,56,0.801,63,1.443,64,1.145,65,1.068,67,1.443,72,0.636,83,3.263,89,4.306,90,3.074,122,1.496,138,2.198,149,3.074,158,0.985,159,1.843,168,1.922,175,2.142,202,2.933,276,1.691,293,6.051,308,2.83,309,2.565,340,1.396,387,3.753,505,3.363,614,2.401,653,3.863,666,2.574,667,2.121,670,1.485,793,7.382,794,1.544,795,8.07,796,4.107,797,4.107,798,4.107,799,4.107,800,4.107,801,4.107,802,4.107,803,4.107,804,4.107,805,4.107,806,4.107,807,4.107,808,4.107,809,4.107,810,4.107,811,4.107,812,4.107,813,4.107,814,4.107,815,4.107,816,3.194,817,3.194,818,3.194,819,3.194,820,3.194,821,3.194,822,3.701,823,2.82,824,1.915,825,3.194,826,1.691,827,4.232,828,6.187,829,3.587,830,5.864,831,1.915,832,5.754,833,4.306,834,1.915,835,3.194,836,3.194,837,3.194,838,1.915,839,6.641,840,3.194,841,1.915,842,3.194,843,1.915,844,1.915,845,3.194,846,3.194,847,2.82,848,2.574,849,1.915,850,1.915,851,3.194,852,1.915,853,4.637,854,3.194,855,3.194,856,1.915,857,1.915,858,3.194,859,3.194,860,1.691,861,3.863,862,3.31,863,1.915,864,1.915,865,3.194,866,4.293,867,1.915,868,2.243,869,1.915,870,3.863,871,2.82,872,2.82,873,3.194,874,1.915,875,1.915,876,3.194,877,1.915,878,3.194,879,1.915,880,3.194,881,1.915,882,2.82,883,3.194,884,1.915,885,3.194,886,1.915,887,1.691,888,3.194,889,1.915,890,1.544,891,1.915,892,0.985,893,1.105,894,1.345,895,1.345,896,1.915,897,3.194,898,2.121,899,1.345,900,1.915,901,3.194,902,1.915,903,1.915,904,3.194,905,1.433,906,1.915,907,1.691]],["title/classes/FieldsMatchConstraint.html",[0,0.215,908,3.56]],["body/classes/FieldsMatchConstraint.html",[0,0.323,2,0.921,3,0.109,4,0.098,5,0.098,9,0.246,14,0.338,15,0.009,17,0.564,25,0.153,35,0.109,38,0.714,50,0.006,51,0.006,54,3.193,56,1.667,57,1.367,63,1.667,64,1.474,65,1.234,67,1.667,72,1.474,119,1.784,122,1.617,135,2.012,145,1.615,271,3.837,309,2.061,541,4.976,667,3.377,674,4.976,780,3.837,908,5.971,909,5.971,910,4.098,911,4.677,912,4.198,913,5.871,914,5.985,915,5.085,916,5.519,917,4.976,918,5.085,919,4.67,920,5.218,921,4.198,922,6.542,923,5.871,924,5.871,925,3.805,926,4.49,927,4.49,928,4.007,929,5.204,930,3.377,931,3.571,932,2.615,933,3.377]],["title/classes/GetUsersDto.html",[0,0.215,934,3.56]],["body/classes/GetUsersDto.html",[0,0.29,2,1.083,3,0.128,4,0.115,5,0.115,7,1.89,9,0.29,10,0.822,14,0.406,15,0.009,17,0.677,20,4.26,25,0.179,35,0.128,38,0.575,50,0.007,51,0.007,65,1.618,136,4.331,137,4.439,138,2.653,139,4.083,140,4.252,154,1.868,754,4.471,934,5.937,935,5.276,936,5.276,937,6.504,938,5.975,939,5.975,940,5.975,941,3.772]],["title/classes/GoogleLoginDto.html",[0,0.215,397,3.103]],["body/classes/GoogleLoginDto.html",[0,0.377,2,1.178,3,0.139,4,0.125,5,0.125,9,0.315,10,0.865,14,0.331,15,0.009,17,0.551,25,0.195,35,0.139,38,0.747,50,0.008,51,0.008,134,3.517,135,1.967,154,1.521,397,5.445,942,6.845,943,5.739,944,7.315,945,6.5]],["title/modules/GoogleModule.html",[208,1.633,519,3.103]],["body/modules/GoogleModule.html",[0,0.296,3,0.13,4,0.117,5,0.117,15,0.009,25,0.224,35,0.13,50,0.007,51,0.007,70,1.157,208,2.977,210,2.925,211,2.925,212,3.132,213,3.132,214,2.925,215,4.142,216,4.142,227,3.833,228,3.132,229,3.132,519,6.231,564,6.085,946,5.377,947,5.377,948,5.377,949,6.09,950,6.09]],["title/injectables/GoogleService.html",[93,0.693,564,2.934]],["body/injectables/GoogleService.html",[0,0.27,3,0.119,4,0.107,5,0.107,9,0.269,10,0.785,14,0.283,15,0.009,17,0.597,25,0.211,35,0.119,38,0.744,44,2.229,49,4.035,50,0.007,51,0.007,56,1.765,57,2.077,63,1.393,64,1.106,65,1.031,67,1.393,70,1.055,72,1.401,93,1.104,95,1.808,122,1.213,202,2.515,297,2.783,308,1.95,309,1.722,341,2.358,360,2.054,371,3.69,404,2.001,564,4.675,586,3.902,591,4.477,592,4.477,833,4.158,944,6.215,951,4.906,952,8.564,953,7.039,954,7.039,955,5.556,956,5.556,957,5.556,958,5.556,959,5.556,960,4.906]],["title/classes/IApiRoute.html",[0,0.215,174,3.306]],["body/classes/IApiRoute.html",[0,0.323,2,0.921,3,0.109,4,0.098,5,0.098,7,1.706,9,0.246,10,0.742,14,0.4,15,0.009,17,0.628,20,3.546,25,0.236,33,3.145,34,1.467,35,0.168,38,0.806,39,3.302,50,0.006,51,0.006,72,1.012,149,4.706,150,4.67,151,3.571,152,4.677,153,4.465,154,1.555,155,4.007,156,4.49,157,2.14,158,4.041,159,4.535,161,2.935,163,3.193,164,2.615,165,3.193,166,2.615,167,3.68,168,2.666,169,2.615,170,1.697,171,3.302,172,3.571,173,4.098,174,4.976,175,2.6,176,3.805,961,5.085,962,5.085,963,5.085]],["title/classes/ILoan.html",[0,0.215,964,2.934]],["body/classes/ILoan.html",[0,0.276,2,0.73,3,0.086,4,0.078,5,0.078,7,1.457,9,0.195,10,0.634,14,0.434,15,0.009,17,0.694,20,4.278,25,0.234,35,0.152,38,0.842,50,0.006,51,0.006,72,0.802,138,2.045,154,1.876,157,2.191,158,4.339,159,3.278,161,4.629,163,2.727,164,2.073,165,2.727,166,2.073,167,4.067,168,2.277,169,2.073,170,1.345,171,3.983,175,2.307,555,1.572,614,3.391,622,4.366,624,3.962,892,2.073,893,2.327,964,3.771,965,2.831,966,5.085,967,5.805,968,5.805,969,4.366,970,5.805,971,4.031,972,4.031,973,4.031,974,4.031,975,4.031,976,5.298,977,2.921,978,4.031,979,4.031,980,4.031,981,2.677,982,3.017,983,3.56,984,3.017,985,3.017,986,2.831,987,3.249]],["title/classes/IOtp.html",[0,0.215,988,3.103]],["body/classes/IOtp.html",[0,0.276,2,0.73,3,0.086,4,0.078,5,0.078,7,1.457,9,0.195,10,0.634,14,0.45,15,0.009,17,0.694,20,4.278,25,0.226,35,0.152,38,0.829,50,0.006,51,0.006,72,0.802,83,2.874,119,1.993,145,2.267,154,1.876,157,2.15,158,3.671,161,4.505,163,2.727,164,2.073,165,2.727,166,2.073,167,4.067,168,2.277,169,2.073,170,1.345,171,3.877,175,2.307,308,1.993,309,2.038,478,3.962,555,2.215,822,4.339,892,3.381,893,2.327,977,3.671,981,2.677,982,3.017,984,3.017,988,3.989,989,2.831,990,4.15,991,5.298,992,5.298,993,4.031,994,4.031,995,4.577,996,5.341,997,4.577,998,4.031,999,4.031,1000,4.031,1001,4.15,1002,4.031,1003,4.031,1004,3.017,1005,4.25,1006,4.031,1007,2.677,1008,3.56,1009,2.831,1010,3.249,1011,2.831]],["title/interfaces/IRefreshToken.html",[26,2.662,1012,1.591]],["body/interfaces/IRefreshToken.html",[0,0.266,3,0.117,4,0.105,5,0.105,7,1.789,9,0.265,10,0.778,14,0.39,15,0.009,25,0.251,26,4.202,32,2.393,35,0.172,37,3.685,38,0.804,45,2.919,46,3.299,48,2.378,50,0.007,51,0.007,72,1.089,119,1.921,145,1.738,157,1.669,163,3.349,164,2.815,165,3.349,166,2.815,167,4.144,168,3.077,169,2.815,170,1.826,171,3.463,175,2.836,308,1.921,319,2.718,478,3.299,528,3.844,1012,1.971,1013,2.919,1014,3.844,1015,3.844,1016,3.844,1017,3.844,1018,3.635,1019,3.635,1020,4.411,1021,4.411,1022,4.096]],["title/interfaces/IResponse.html",[1012,1.591,1023,3.306]],["body/interfaces/IResponse.html",[0,0.216,3,0.095,4,0.086,5,0.086,9,0.216,10,0.679,14,0.226,15,0.009,25,0.234,35,0.13,38,0.429,44,1.284,50,0.006,51,0.006,54,2.138,70,0.846,72,1.482,75,3.372,77,3.588,81,2.668,93,0.954,122,1.513,127,3.688,128,3.442,145,1.414,148,4.501,157,1.066,201,2.375,202,1.98,239,3.127,257,3.332,297,1.603,298,2.07,321,3.666,576,3.464,1012,1.603,1013,2.375,1023,4.553,1024,3.588,1025,4.553,1026,3.931,1027,3.931,1028,4.903,1029,4.04,1030,4.903,1031,6.119,1032,4.903,1033,2.957,1034,3.332,1035,3.931,1036,3.931,1037,3.588,1038,2.811,1039,3.127,1040,3.588,1041,3.588,1042,3.931,1043,5.372,1044,3.931,1045,3.931,1046,3.931,1047,3.588,1048,3.931,1049,3.931,1050,7.109,1051,4.702,1052,5.372,1053,3.931,1054,5.372,1055,5.372,1056,3.931]],["title/classes/IRole.html",[0,0.215,29,2.448]],["body/classes/IRole.html",[0,0.284,2,0.762,3,0.09,4,0.081,5,0.081,7,1.726,9,0.204,10,0.653,14,0.438,15,0.009,16,3.74,17,0.648,20,3.879,25,0.238,29,3.243,33,3.244,34,1.214,35,0.155,38,0.81,39,3.341,50,0.006,51,0.006,64,1.339,72,0.837,115,4.591,149,3.377,152,2.656,153,2.535,154,1.701,155,4.054,157,2.146,158,4.069,159,3.377,163,2.81,164,2.164,165,2.81,166,2.164,167,3.796,168,2.346,169,2.164,170,1.404,171,3.93,175,2.361,555,2.282,687,4.467,688,4.467,689,5.421,690,2.535,695,3.391,705,4.031,894,2.955,895,2.955,1007,3.886,1057,2.955,1058,4.207,1059,4.378,1060,4.207,1061,5.166,1062,3.715,1063,4.207,1064,3.715,1065,4.207,1066,4.207,1067,4.11,1068,3.715,1069,3.715,1070,3.715,1071,2.955,1072,3.391,1073,2.955]],["title/classes/IUser.html",[0,0.215,31,1.875]],["body/classes/IUser.html",[0,0.242,2,0.46,3,0.054,4,0.049,5,0.049,7,1.031,9,0.123,10,0.448,11,2.914,14,0.443,15,0.009,16,2.066,17,0.715,20,4.402,25,0.206,30,1.466,31,1.705,33,2.116,34,0.733,35,0.121,38,0.829,48,2.655,50,0.004,51,0.004,64,0.506,65,1.597,72,0.506,119,2.812,131,1.181,137,1.531,145,2.598,154,1.931,157,2.156,158,4.01,159,2.319,161,2.877,163,1.93,164,1.306,165,1.93,166,1.306,167,4.161,168,1.998,169,1.306,170,0.848,171,3.065,175,1.749,308,2.812,319,1.262,387,2.658,555,3.16,614,2.781,622,3.31,624,3.004,626,3.73,628,4.017,630,3.501,690,2.421,705,1.262,711,3.73,848,3.238,928,1.531,1004,3.007,1005,4.911,1007,4.733,1016,1.784,1017,2.822,1018,3.31,1019,1.687,1059,1.901,1074,1.784,1075,4.401,1076,4.401,1077,4.017,1078,3.501,1079,3.501,1080,4.401,1081,4.017,1082,4.401,1083,4.017,1084,4.401,1085,2.54,1086,2.54,1087,2.54,1088,2.54,1089,2.243,1090,2.54,1091,2.54,1092,4.974,1093,2.54,1094,2.54,1095,3.548,1096,2.54,1097,2.54,1098,2.54,1099,2.54,1100,2.54,1101,2.243,1102,2.54,1103,2.54,1104,2.54,1105,2.54,1106,2.54,1107,2.243,1108,2.54,1109,2.54,1110,3.548,1111,3.548,1112,2.243,1113,2.243,1114,2.243,1115,2.243,1116,2.047,1117,2.243,1118,2.243,1119,2.243,1120,2.047,1121,3.238,1122,1.901,1123,1.784,1124,2.047]],["title/classes/IdDto.html",[0,0.215,1125,2.934]],["body/classes/IdDto.html",[0,0.374,2,1.164,3,0.137,4,0.124,5,0.124,9,0.311,10,0.859,14,0.327,15,0.009,17,0.545,25,0.231,35,0.137,38,0.741,50,0.007,51,0.007,134,3.268,135,1.944,154,1.503,175,2.893,1125,5.113,1126,5.673,1127,6.425,1128,6.425,1129,6.204,1130,6.425]],["title/classes/IsChannelValueConstraint.html",[0,0.215,1131,3.306]],["body/classes/IsChannelValueConstraint.html",[0,0.352,2,0.757,3,0.089,4,0.08,5,0.08,9,0.202,10,0.649,14,0.341,15,0.009,17,0.568,25,0.218,35,0.143,38,0.698,44,1.679,50,0.006,51,0.006,54,2.795,56,1.459,57,1.122,58,1.826,63,1.047,64,0.831,65,0.775,67,1.459,72,0.831,87,2.4,119,2.043,122,1.582,131,1.942,135,1.761,138,1.504,145,1.326,157,1,271,3.359,297,2.413,308,1.465,309,2.51,340,1.826,360,2.152,404,1.504,416,2.636,505,2.636,614,1.882,723,4.576,734,3.125,780,3.359,861,4.691,862,3.365,892,2.993,893,2.41,898,2.773,899,4.088,911,4.23,912,4.576,914,5.091,916,4.706,917,4.356,919,4.088,920,4.449,921,3.674,925,3.125,928,4.038,929,4.706,930,2.773,931,2.933,932,2.147,933,2.773,990,2.636,1001,3.674,1131,5.014,1132,5.424,1133,2.773,1134,4.23,1135,4.175,1136,4.175,1137,4.175,1138,2.933,1139,3.125,1140,3.687,1141,3.365,1142,2.933,1143,3.687,1144,3.865,1145,3.687,1146,5.139,1147,4.088,1148,3.687,1149,3.687,1150,3.125,1151,3.687,1152,4.088,1153,3.125,1154,3.365,1155,5.139,1156,3.365,1157,3.365,1158,3.365,1159,3.687,1160,3.365,1161,2.933]],["title/injectables/JwtAuthGuard.html",[93,0.693,450,2.934]],["body/injectables/JwtAuthGuard.html",[0,0.3,3,0.132,4,0.119,5,0.119,7,1.929,9,0.299,14,0.314,15,0.009,17,0.523,25,0.226,35,0.132,50,0.007,51,0.007,56,1.884,63,1.548,64,1.229,65,1.146,67,1.548,70,1.173,93,1.179,95,2.01,109,3.721,122,1.348,450,4.991,1029,5.6,1038,3.898,1162,6.637,1163,4.976,1164,7.516,1165,6.637,1166,6.637,1167,6.174,1168,4.976,1169,5.452]],["title/injectables/JwtStrategy.html",[93,0.693,522,3.103]],["body/injectables/JwtStrategy.html",[0,0.232,1,4.617,3,0.102,4,0.092,5,0.092,7,1.635,9,0.231,12,2.873,13,2.642,14,0.324,15,0.009,17,0.54,25,0.256,35,0.102,44,1.375,48,1.975,49,3.165,50,0.006,51,0.006,56,1.598,57,1.929,63,1.598,64,1.268,65,1.182,67,1.195,70,0.906,72,1.428,93,0.999,95,1.552,97,5.135,100,2.555,101,4.21,102,4.08,105,2.217,106,2.452,107,2.29,108,3.842,109,2.873,110,3.842,111,3.842,112,3.349,113,3.166,115,3.01,116,4.21,117,4.21,118,4.21,119,1.673,120,4.21,121,3.842,122,1.041,157,1.141,202,2.336,271,3.678,291,2.452,297,2.295,341,2.705,360,1.762,404,1.717,465,4.474,466,2.752,521,5.055,522,4.475,529,3.568,585,3.842,1170,4.21,1171,4.768,1172,6.372,1173,4.768,1174,5.135,1175,4.21,1176,3.842,1177,6.372,1178,4.768,1179,4.768]],["title/classes/Loan.html",[0,0.215,966,2.662]],["body/classes/Loan.html",[0,0.284,2,0.762,3,0.09,4,0.081,5,0.081,7,1.079,9,0.204,10,0.653,14,0.433,15,0.009,17,0.688,25,0.238,35,0.155,38,0.842,50,0.006,51,0.006,72,0.837,138,2.107,154,1.899,157,2.198,158,4.377,159,3.377,161,4.684,163,2.81,164,2.164,165,2.81,166,2.164,167,4.111,168,2.346,169,2.164,170,1.404,171,4.031,175,1.477,555,1.641,614,3.444,622,4.467,624,4.054,892,2.164,893,2.428,964,2.794,965,2.955,966,4.054,967,5.94,968,5.94,969,4.467,970,5.94,976,5.421,977,3.009,981,2.794,982,3.148,983,3.715,984,3.148,985,3.148,986,2.955,987,3.391,1180,4.207,1181,4.207,1182,4.207,1183,4.207,1184,4.207,1185,4.207,1186,4.207]],["title/controllers/LoanController.html",[183,2.054,1187,3.306]],["body/controllers/LoanController.html",[0,0.181,3,0.08,4,0.072,5,0.072,9,0.181,14,0.371,15,0.009,17,0.619,25,0.257,31,3.711,32,1.629,34,1.075,35,0.08,38,0.606,48,2.759,50,0.005,51,0.005,56,1.346,57,1.692,63,1.83,64,1.453,65,1.355,67,1.83,70,0.708,122,1.594,136,3.421,154,1.708,175,2.417,183,1.733,185,1.733,193,2.246,194,2.353,195,2.353,199,2.353,201,1.988,202,1.213,353,2.667,370,2.475,404,1.342,436,5.05,437,2.789,438,2.789,450,2.475,451,3.003,452,3.003,467,3.003,468,2.789,469,4.18,470,2.789,472,3.566,498,3.29,682,5.05,941,2.353,964,2.475,966,2.246,1125,5.205,1187,4.018,1188,3.29,1189,4.327,1190,4.741,1191,4.741,1192,4.741,1193,5.073,1194,3.727,1195,3.727,1196,3.727,1197,5.37,1198,3.727,1199,3.29,1200,3.727,1201,3.727,1202,4.18,1203,3.29,1204,5.37,1205,3.727,1206,3.727,1207,5.634,1208,5.37,1209,3.727,1210,2.617,1211,3.003,1212,3.003,1213,3.727,1214,4.327,1215,3.727,1216,4.18,1217,3.29,1218,3.003,1219,4.327,1220,3.727,1221,3.727,1222,3.727,1223,3.727,1224,3.727,1225,3.727,1226,3.727,1227,3.727,1228,3.727,1229,3.727,1230,3.29,1231,3.727]],["title/modules/LoanModule.html",[208,1.633,221,3.103]],["body/modules/LoanModule.html",[0,0.28,3,0.123,4,0.111,5,0.111,15,0.009,25,0.255,35,0.123,50,0.007,51,0.007,64,1.149,70,1.096,168,2.315,170,1.926,185,3.353,208,2.907,210,2.772,211,2.772,212,2.969,213,2.969,214,2.772,215,4.044,216,2.969,221,6.073,227,3.708,228,2.969,229,2.969,231,3.199,258,3.834,966,3.479,986,5.065,1187,5.885,1216,5.742,1217,5.097,1218,4.652,1232,5.097,1233,5.097,1234,5.773,1235,5.773,1236,4.652,1237,5.773]],["title/injectables/LoanService.html",[93,0.693,1216,2.934]],["body/injectables/LoanService.html",[0,0.173,3,0.076,4,0.068,5,0.068,9,0.172,14,0.381,15,0.009,17,0.635,25,0.243,31,3.685,32,1.556,35,0.076,38,0.778,44,1.498,48,2.706,50,0.005,51,0.005,56,1.302,57,2.319,63,1.877,64,1.49,65,1.389,67,1.797,70,0.676,72,1.427,93,0.815,95,1.158,100,2.082,122,1.565,136,3.348,139,1.973,140,2.054,157,1.243,170,1.188,175,2.627,202,1.158,297,1.282,319,1.768,341,3.043,353,2.579,360,1.316,404,2.582,609,4.942,682,4.477,705,2.579,866,2.868,932,1.83,941,2.247,964,2.364,966,4.511,1189,4.185,1190,4.586,1192,4.586,1193,4.185,1202,2.364,1203,4.586,1207,5.428,1214,4.185,1216,3.449,1218,2.868,1238,3.143,1239,4.586,1240,2.663,1241,5.428,1242,3.559,1243,5.194,1244,3.559,1245,5.194,1246,3.559,1247,4.586,1248,3.559,1249,3.559,1250,4.586,1251,3.559,1252,3.559,1253,3.559,1254,3.559,1255,3.648,1256,3.143,1257,2.663,1258,5.194,1259,3.559,1260,2.663,1261,4.942,1262,4.185,1263,3.559,1264,3.559,1265,3.143,1266,3.143,1267,3.143,1268,3.143,1269,2.868,1270,2.663,1271,3.143,1272,3.559,1273,5.194,1274,3.559,1275,3.559,1276,3.559]],["title/injectables/LocalAuthGuard.html",[93,0.693,453,3.306]],["body/injectables/LocalAuthGuard.html",[0,0.324,3,0.143,4,0.128,5,0.128,7,2.021,15,0.009,25,0.237,35,0.143,50,0.008,51,0.008,70,1.268,93,1.235,95,2.173,109,4.023,453,5.894,1163,5.38,1168,5.38,1277,5.895,1278,7.876]],["title/injectables/LocalStrategy.html",[93,0.693,523,3.103]],["body/injectables/LocalStrategy.html",[0,0.263,3,0.116,4,0.104,5,0.104,7,1.778,9,0.263,14,0.353,15,0.009,17,0.587,25,0.242,35,0.116,38,0.819,48,1.68,50,0.007,51,0.007,56,1.737,57,2.053,63,1.737,64,1.379,65,1.286,67,1.359,70,1.029,72,1.379,93,1.087,95,1.764,97,5.584,100,2.173,108,4.368,109,3.266,111,4.368,112,3.807,115,3.422,122,1.183,201,2.891,202,1.764,271,3.999,341,2.301,387,4.294,404,1.952,465,4.539,466,3.128,523,4.867,614,3.123,1279,4.786,1280,5.42,1281,5.42,1282,6.929,1283,5.42,1284,4.786,1285,5.42,1286,5.42,1287,6.929,1288,5.42]],["title/classes/LoginDto.html",[0,0.215,402,3.306]],["body/classes/LoginDto.html",[0,0.316,2,1.178,3,0.139,4,0.125,5,0.125,7,1.989,15,0.009,25,0.233,34,1.875,35,0.139,50,0.008,51,0.008,72,1.543,385,4.103,387,4.135,402,5.801,441,4.864,442,4.565,614,3.494,677,4.864,1289,5.739,1290,6.845]],["title/injectables/LogoutInterceptor.html",[93,0.693,439,3.306]],["body/injectables/LogoutInterceptor.html",[0,0.24,3,0.105,4,0.095,5,0.095,9,0.239,12,2.976,14,0.332,15,0.009,17,0.553,25,0.243,35,0.105,37,3.132,50,0.006,51,0.006,54,2.371,56,1.635,57,1.963,63,1.635,64,1.298,65,1.21,67,1.238,70,0.938,72,1.651,93,1.023,95,1.607,100,1.98,110,3.979,112,3.468,113,3.279,122,1.696,201,2.634,202,1.607,307,4.331,341,2.768,439,4.88,521,5,529,3.695,829,5.465,833,4.88,1028,6.26,1029,5.159,1030,5.256,1032,3.979,1033,3.279,1037,5.885,1038,4.117,1039,5.129,1040,3.979,1041,3.979,1047,6.26,1176,3.979,1291,4.36,1292,4.938,1293,4.938,1294,4.36,1295,4.938,1296,3.979,1297,4.938,1298,4.938,1299,7.303,1300,4.938,1301,4.938,1302,4.938]],["title/modules/MailModule.html",[208,1.633,222,2.662]],["body/modules/MailModule.html",[0,0.218,3,0.096,4,0.086,5,0.086,15,0.009,25,0.252,35,0.096,44,2.005,50,0.006,51,0.006,57,1.204,58,1.958,70,0.851,72,1.384,87,3.08,102,3.709,105,2.083,106,2.303,107,2.151,119,1.572,122,0.978,157,1.462,208,2.57,210,2.151,211,2.151,212,2.303,213,2.303,214,2.151,215,3.575,216,3.575,222,4.974,227,3.142,228,2.303,229,2.303,231,2.482,288,3.352,291,2.303,292,2.828,298,2.841,303,4.859,316,3.146,336,5.202,340,1.958,360,1.656,776,4.923,932,3.575,1303,3.955,1304,3.955,1305,3.955,1306,4.479,1307,3.61,1308,4.479,1309,4.479,1310,6.109,1311,3.955,1312,6.109,1313,4.571,1314,3.352,1315,6.109,1316,4.479,1317,4.479,1318,4.479,1319,4.479,1320,6.109,1321,4.479,1322,4.479,1323,4.479,1324,3.61,1325,6.109,1326,6.109,1327,4.479,1328,4.479,1329,4.479,1330,4.479,1331,4.479,1332,4.479,1333,4.479,1334,4.479]],["title/classes/MailOtpDto.html",[0,0.215,1335,3.103]],["body/classes/MailOtpDto.html",[0,0.36,2,1.094,3,0.129,4,0.116,5,0.116,9,0.293,10,0.827,14,0.408,15,0.009,17,0.68,25,0.181,35,0.129,38,0.806,50,0.007,51,0.007,83,3.509,134,3.646,135,1.827,138,2.671,154,1.877,1133,4.011,1335,5.208,1336,7.39,1337,6.005,1338,6.04,1339,8.025,1340,6.04,1341,6.04]],["title/injectables/MailService.html",[93,0.693,303,2.448]],["body/injectables/MailService.html",[0,0.259,3,0.079,4,0.071,5,0.071,9,0.179,10,0.594,13,4.516,14,0.349,15,0.009,17,0.642,25,0.235,35,0.079,38,0.797,44,1.536,49,2.644,50,0.005,51,0.005,56,1.335,57,2.19,63,1.718,64,1.363,65,1.271,67,1.568,70,0.7,72,1.363,83,1.61,87,2.196,93,0.835,95,1.199,100,2.135,102,3.879,105,1.713,106,1.894,107,1.769,122,1.365,135,1.114,145,1.17,157,1.275,202,2.603,291,2.738,297,2.88,298,3.186,303,2.951,308,1.869,309,1.65,311,3.797,312,2.22,313,2.22,341,2.26,353,1.829,355,4.392,360,1.362,379,4.291,404,2.252,458,2.587,614,1.66,624,2.22,822,3.216,868,2.587,932,2.738,1012,1.326,1038,3.948,1078,4.812,1313,2.756,1314,2.756,1324,5.039,1335,4.812,1337,3.984,1342,2.968,1343,5.127,1344,5.324,1345,3.683,1346,6.688,1347,5.324,1348,4.701,1349,5.127,1350,3.683,1351,4.701,1352,3.683,1353,4.701,1354,3.683,1355,4.701,1356,4.701,1357,3.683,1358,3.252,1359,3.252,1360,4.291,1361,3.252,1362,4.701,1363,5.521,1364,4.701,1365,4.701,1366,3.252,1367,3.252,1368,2.968,1369,3.252,1370,3.252]],["title/classes/MessageDto.html",[0,0.215,126,2.662]],["body/classes/MessageDto.html",[0,0.423,2,1.007,3,0.119,4,0.107,5,0.107,7,1.425,9,0.269,10,0.785,14,0.413,15,0.009,17,0.471,25,0.211,35,0.179,38,0.744,50,0.007,51,0.007,81,2.644,124,3.348,125,3.69,126,4.657,127,2.358,128,2.759,131,2.583,132,5.131,133,4.689,134,2.988,135,1.681,136,2.759,137,3.348,138,3.17,139,3.901,140,4.063,141,4.242,142,3.69,143,3.69,144,3.69,145,2.236,146,3.69,147,3.507,148,3.207,1371,5.556]],["title/classes/MobileNumberDto.html",[0,0.215,710,3.306]],["body/classes/MobileNumberDto.html",[0,0.384,2,1.06,3,0.125,4,0.112,5,0.112,9,0.283,10,0.811,14,0.298,15,0.009,17,0.496,25,0.249,35,0.125,38,0.7,50,0.007,51,0.007,65,1.349,81,2.487,131,2.72,133,4.196,135,1.77,154,1.368,309,1.813,555,3.086,595,2.905,670,2.72,671,3.008,710,5.44,723,4.59,1079,5.556,1138,4.108,1139,4.377,1141,4.713,1150,5.44,1160,4.713,1372,6.419,1373,5.164,1374,5.849,1375,7.27,1376,5.849,1377,5.849]],["title/classes/NotEqualToConstraint.html",[0,0.215,1378,3.56]],["body/classes/NotEqualToConstraint.html",[0,0.322,2,0.915,3,0.108,4,0.097,5,0.097,9,0.245,14,0.337,15,0.009,17,0.561,25,0.152,35,0.108,38,0.804,50,0.006,51,0.006,54,3.179,56,1.659,57,1.357,63,1.659,64,1.469,65,1.228,67,1.659,72,1.469,119,1.772,122,1.612,135,2.003,145,1.604,271,3.82,309,2.052,541,4.953,780,3.82,911,4.662,912,4.179,913,5.845,914,5.975,916,5.504,917,4.953,919,4.649,920,5.204,921,4.179,922,6.52,923,5.845,924,5.845,925,3.779,926,4.459,927,4.459,928,3.989,929,5.186,930,3.354,931,3.547,932,2.597,933,3.354,1378,5.951,1379,5.951,1380,4.07,1381,5.05,1382,5.05,1383,5.334,1384,5.05]],["title/injectables/OptionalAuthGuard.html",[93,0.693,1385,3.56]],["body/injectables/OptionalAuthGuard.html",[0,0.301,3,0.132,4,0.119,5,0.119,7,1.932,15,0.009,25,0.226,35,0.132,50,0.007,51,0.007,70,1.176,93,1.181,95,2.015,98,6.648,109,3.731,113,5,371,4.112,1168,4.99,1385,6.068,1386,5.467,1387,5.467,1388,7.529,1389,6.192,1390,5.634,1391,6.192,1392,7.529,1393,6.192,1394,7.529,1395,6.192,1396,5.467,1397,7.529,1398,4.349,1399,6.192,1400,6.192,1401,6.192,1402,6.192,1403,6.192,1404,6.192]],["title/classes/Otp.html",[0,0.215,822,2.272]],["body/classes/Otp.html",[0,0.284,2,0.762,3,0.09,4,0.081,5,0.081,7,1.079,9,0.204,10,0.653,14,0.45,15,0.009,17,0.688,25,0.23,35,0.155,38,0.828,50,0.006,51,0.006,72,0.837,83,2.941,119,2.053,145,2.309,154,1.899,157,2.16,158,3.74,161,4.566,163,2.81,164,2.164,165,2.81,166,2.164,167,4.111,168,2.346,169,2.164,170,1.404,171,3.93,175,1.477,308,2.053,309,2.085,478,4.054,555,2.282,822,3.46,892,3.46,893,2.428,977,3.74,981,2.794,982,3.148,984,3.148,988,2.955,989,2.955,990,4.247,991,5.421,992,5.421,995,4.715,996,5.442,997,4.715,1001,4.247,1004,3.148,1005,4.378,1007,2.794,1008,3.715,1009,2.955,1010,3.391,1011,2.955,1405,4.207,1406,4.207,1407,4.207,1408,4.207,1409,4.207,1410,4.207,1411,4.207]],["title/modules/OtpModule.html",[208,1.633,520,2.934]],["body/modules/OtpModule.html",[0,0.252,3,0.111,4,0.1,5,0.1,15,0.009,25,0.257,35,0.111,50,0.007,51,0.007,64,1.033,70,0.986,168,2.082,170,1.732,208,2.766,210,2.493,211,2.493,212,2.67,213,2.67,214,2.493,215,3.849,216,3.849,222,5.069,226,5.069,227,3.466,228,2.67,229,2.67,231,3.735,246,3.885,250,3.885,258,3.448,460,5.956,461,4.584,520,5.986,822,2.67,1009,4.734,1236,4.184,1412,4.584,1413,4.584,1414,4.584,1415,4.584,1416,5.908,1417,5.192,1418,4.584,1419,5.192,1420,5.192]],["title/injectables/OtpService.html",[93,0.693,460,2.934]],["body/injectables/OtpService.html",[0,0.089,3,0.039,4,0.035,5,0.035,9,0.089,10,0.343,14,0.361,15,0.009,17,0.601,25,0.231,31,1.978,32,0.801,35,0.039,38,0.383,44,2.242,45,3.696,48,2.09,50,0.003,51,0.003,56,0.771,57,2.147,58,0.801,63,1.69,64,1.342,65,1.251,67,1.636,70,0.348,72,1.299,81,0.627,83,2.271,87,1.269,90,2.302,93,0.483,95,0.596,100,1.233,119,2.098,122,1.305,126,1.104,145,0.977,157,1.116,170,0.611,171,1.528,202,2.194,270,1.476,278,1.371,292,1.156,297,2.899,298,2.167,303,3.314,307,4.167,308,2.29,309,2.199,311,1.015,312,1.104,313,1.104,314,1.216,315,1.371,316,1.286,319,0.91,334,1.286,339,1.371,340,0.801,341,3.177,353,3.349,360,2.562,379,3.205,383,2.716,387,1.641,404,0.66,416,4.571,432,2.716,433,4.199,457,1.617,458,2.161,459,1.617,460,2.043,465,3.347,466,1.057,478,3.13,504,1.476,505,1.942,535,1.286,542,5.799,546,2.716,573,5.68,576,3.574,586,3.273,593,1.286,594,1.617,595,1.528,596,1.476,605,1.617,614,1.793,637,2.479,670,0.852,671,0.942,822,3.227,827,1.617,830,1.617,868,2.794,892,0.942,893,1.057,898,3.45,899,2.794,941,1.156,960,1.617,988,1.286,990,3.279,991,2.479,992,2.479,1001,1.156,1011,4.735,1079,1.286,1142,2.161,1144,3.095,1147,2.161,1240,1.371,1241,3.951,1257,1.371,1260,1.371,1269,2.479,1270,2.302,1337,4.209,1418,1.617,1421,1.617,1422,3.977,1423,3.076,1424,3.076,1425,3.076,1426,3.977,1427,3.977,1428,3.076,1429,3.971,1430,3.076,1431,1.831,1432,1.831,1433,3.076,1434,1.831,1435,3.076,1436,1.831,1437,3.076,1438,1.831,1439,1.831,1440,1.831,1441,1.831,1442,1.831,1443,1.831,1444,1.831,1445,3.076,1446,1.831,1447,1.831,1448,3.977,1449,3.076,1450,3.076,1451,1.831,1452,2.479,1453,1.476,1454,1.617,1455,1.831,1456,1.831,1457,1.831,1458,1.831,1459,1.831,1460,1.831,1461,1.831,1462,1.831,1463,1.831,1464,3.076,1465,5.195,1466,3.076,1467,3.977,1468,1.831,1469,3.076,1470,1.831,1471,4.66,1472,5.979,1473,5.195,1474,1.831,1475,1.831,1476,1.831,1477,3.076,1478,1.831,1479,1.831,1480,1.831,1481,1.831,1482,1.831,1483,3.076,1484,1.831,1485,1.831,1486,1.831,1487,1.831,1488,1.831,1489,1.831,1490,3.076,1491,1.831,1492,1.617,1493,1.831,1494,1.831,1495,1.831,1496,1.831,1497,1.831,1498,1.831,1499,1.831,1500,1.831,1501,1.831,1502,1.831,1503,1.831,1504,1.831,1505,3.076,1506,1.831,1507,1.617,1508,1.831,1509,1.831,1510,1.831,1511,1.831,1512,1.831,1513,1.831,1514,1.831,1515,3.076,1516,1.831]],["title/injectables/Owner.html",[93,0.693,1067,3.103]],["body/injectables/Owner.html",[0,0.25,3,0.11,4,0.099,5,0.099,9,0.25,10,0.749,14,0.427,15,0.009,17,0.569,25,0.246,32,2.254,33,3.166,34,1.487,35,0.11,38,0.823,48,2.716,50,0.007,51,0.007,65,1.466,70,0.979,93,1.052,95,1.678,154,1.57,167,3.704,168,2.067,170,1.72,319,2.561,555,2.617,678,3.858,690,4.043,777,4.155,828,4.155,1016,3.621,1017,4.712,1018,5.439,1019,4.456,1067,4.712,1261,6.011,1390,3.858,1517,4.552,1518,6.586,1519,6.709,1520,5.156,1521,5.156,1522,5.156,1523,5.156,1524,5.156,1525,5.924,1526,5.156,1527,5.156,1528,5.156,1529,5.156]],["title/classes/Pagination.html",[0,0.215,147,2.789]],["body/classes/Pagination.html",[0,0.423,2,1.007,3,0.119,4,0.107,5,0.107,7,1.425,9,0.269,10,0.785,14,0.413,15,0.009,17,0.471,25,0.211,35,0.179,38,0.678,50,0.007,51,0.007,81,1.901,124,3.348,125,3.69,126,4.242,127,2.358,128,2.759,131,2.583,132,5.131,133,4.689,134,2.988,135,1.681,136,2.759,137,3.348,138,3.17,139,3.901,140,4.063,141,4.657,142,3.69,143,3.69,144,3.69,145,2.236,146,3.69,147,4.444,148,4.46,1530,5.556]],["title/classes/PaginationDto.html",[0,0.215,136,2.194]],["body/classes/PaginationDto.html",[0,0.416,2,0.939,3,0.111,4,0.1,5,0.1,7,1.329,9,0.251,10,0.751,14,0.428,15,0.009,17,0.634,25,0.202,35,0.175,38,0.72,50,0.007,51,0.007,65,1.56,81,1.772,124,3.121,125,3.44,126,4.055,127,2.199,128,2.572,131,2.409,132,4.964,133,4.567,134,2.857,135,1.567,136,3.342,137,4.505,138,3.186,139,4.386,140,4.567,141,4.055,142,3.44,143,3.44,144,3.44,145,2.137,146,3.44,147,3.27,148,2.989,154,1.749,754,3.876,937,5.942,1531,5.18,1532,5.18,1533,5.18]],["title/classes/PaginationMeta.html",[0,0.215,141,2.662]],["body/classes/PaginationMeta.html",[0,0.414,2,0.926,3,0.109,4,0.098,5,0.098,7,1.311,9,0.248,10,0.744,14,0.445,15,0.009,17,0.71,25,0.2,35,0.174,38,0.642,50,0.006,51,0.006,81,1.748,124,3.078,125,3.392,126,4.019,127,2.168,128,2.537,131,2.375,132,4.931,133,4.543,134,2.831,135,1.545,136,2.537,137,3.078,138,3.222,139,4.363,140,4.543,141,4.475,142,4.931,143,4.931,144,4.931,145,2.5,146,4.931,147,3.225,148,2.948,1534,5.108,1535,5.108,1536,5.108,1537,5.108,1538,5.108,1539,5.108]],["title/classes/PayloadExistsPipe.html",[0,0.215,1540,3.56]],["body/classes/PayloadExistsPipe.html",[0,0.296,2,1.103,3,0.13,4,0.117,5,0.117,9,0.295,14,0.31,15,0.009,17,0.516,25,0.224,35,0.13,44,1.757,49,3.702,50,0.007,51,0.007,54,3.58,56,1.869,63,1.527,64,1.212,65,1.13,67,1.527,70,1.157,93,1.169,122,1.329,360,2.251,586,4.277,595,3.024,670,2.832,671,3.132,723,4.705,1540,6.006,1541,6.581,1542,5.377,1543,8.054,1544,7.453,1545,6.09,1546,6.09,1547,6.09]],["title/injectables/ProxyMiddleware.html",[93,0.693,241,3.306]],["body/injectables/ProxyMiddleware.html",[0,0.278,3,0.122,4,0.11,5,0.11,9,0.278,14,0.291,15,0.009,17,0.486,25,0.216,35,0.122,50,0.007,51,0.007,54,2.751,56,1.799,63,1.436,64,1.14,65,1.063,67,1.436,70,1.088,93,1.126,95,1.864,157,1.371,237,5.864,241,5.37,780,3.306,930,3.804,1039,5.941,1390,5.37,1548,5.058,1549,6.336,1550,7.253,1551,5.728,1552,6.336,1553,6.336,1554,7.176,1555,5.058,1556,5.058,1557,5.058,1558,5.728,1559,7.176,1560,5.728,1561,5.728,1562,5.728,1563,5.728]],["title/classes/ReadinessCheckResponseDto.html",[0,0.215,320,3.306]],["body/classes/ReadinessCheckResponseDto.html",[0,0.278,2,0.737,3,0.087,4,0.078,5,0.078,9,0.197,10,0.638,13,2.255,14,0.336,15,0.009,17,0.485,25,0.251,33,3.042,34,1.173,35,0.122,38,0.754,44,1.649,50,0.006,51,0.006,57,1.094,58,2.499,70,0.773,72,0.81,87,2.725,93,0.896,100,1.631,102,3.281,105,1.892,106,2.092,107,1.954,122,1.248,154,1.337,157,1.715,170,1.357,196,2.568,202,2.15,272,3.044,291,2.092,296,3.279,297,2.581,298,2.658,299,3.592,300,3.592,302,5.363,303,3.662,307,2.702,310,3.592,311,2.255,312,2.452,313,2.452,314,2.702,315,3.044,316,2.857,317,5.047,318,4.277,319,2.021,320,4.277,321,5.094,322,4.277,323,6.912,324,3.592,325,3.592,326,3.592,327,3.592,328,3.592,329,3.279,330,5.834,331,3.592,332,3.592,333,3.592,334,2.857,335,3.279,336,5.363,337,3.592,338,5.047,339,4.944,340,2.499,341,2.426,342,3.592,343,3.592,344,4.014,345,5.047,346,5.047,347,5.047,348,4.014,349,3.592,350,3.592,351,3.592,352,5.047,353,2.021,354,3.592,355,2.857,356,3.592,357,3.592,358,3.592,359,3.592,360,1.504,690,2.452,1564,4.068,1565,4.068]],["title/injectables/RedirectMiddleware.html",[93,0.693,1566,3.56]],["body/injectables/RedirectMiddleware.html",[0,0.28,3,0.123,4,0.111,5,0.111,9,0.28,14,0.294,15,0.009,17,0.489,25,0.236,35,0.123,50,0.007,51,0.007,54,2.772,56,1.808,63,1.447,64,1.149,65,1.071,67,1.447,70,1.096,75,4.565,93,1.131,95,1.879,153,3.479,237,4.32,829,6.164,1039,5.785,1296,4.652,1390,5.396,1549,6.367,1550,6.944,1552,5.097,1553,6.367,1566,5.811,1567,5.097,1568,8.237,1569,5.773,1570,4.652,1571,5.773,1572,6.367,1573,5.773,1574,5.773]],["title/classes/RefreshToken.html",[0,0.215,37,2.122]],["body/classes/RefreshToken.html",[0,0.239,2,0.891,3,0.105,4,0.095,5,0.095,7,1.261,9,0.238,10,0.726,14,0.43,15,0.009,17,0.657,25,0.242,26,2.962,32,2.149,35,0.166,37,3.5,38,0.777,45,3.468,46,4.391,48,2.568,50,0.006,51,0.006,65,1.206,72,0.978,119,2.282,145,2.065,154,1.814,157,1.856,161,3.753,163,3.123,164,2.528,165,3.123,166,2.528,167,4.115,168,2.922,169,2.528,170,1.64,171,3.23,175,1.725,308,1.725,319,2.441,478,4.391,528,3.453,555,2.536,1012,1.77,1014,5.665,1015,3.453,1016,3.453,1017,3.453,1018,4.318,1019,3.264,1020,5.873,1021,3.962,1022,3.678,1092,3.962,1575,4.916,1576,4.916,1577,4.916,1578,4.916]],["title/classes/RefreshTokenDto.html",[0,0.215,408,3.103]],["body/classes/RefreshTokenDto.html",[0,0.373,2,1.157,3,0.136,4,0.123,5,0.123,9,0.31,10,0.856,14,0.325,15,0.009,17,0.542,25,0.23,33,3.257,34,1.842,35,0.136,37,3.95,38,0.739,50,0.007,51,0.007,134,3.257,135,1.933,154,1.494,408,5.389,1579,6.774,1580,5.64,1581,6.388,1582,6.388]],["title/classes/RefreshTokenPayload.html",[0,0.215,8,2.789]],["body/classes/RefreshTokenPayload.html",[0,0.392,1,3.282,2,0.987,3,0.116,4,0.105,5,0.105,6,3.825,7,1.397,8,4.833,9,0.264,10,0.776,11,2.801,12,4.614,13,4.243,14,0.389,15,0.009,16,2.801,17,0.589,19,5.202,23,4.882,25,0.242,26,3.282,27,3.617,28,3.617,29,3.019,30,3.144,31,2.951,32,2.381,33,3.423,34,1.571,35,0.172,36,4.616,37,2.616,38,0.802,39,3.802,40,3.438,41,3.617,42,4.076,43,3.438,44,1.571,45,3.708,46,3.282,47,3.282,48,1.688,49,2.705,50,0.007,51,0.007,1583,5.447,1584,5.447]],["title/classes/Role.html",[0,0.215,705,2.194]],["body/classes/Role.html",[0,0.291,2,0.788,3,0.093,4,0.084,5,0.084,7,1.536,9,0.211,10,0.668,14,0.436,15,0.009,16,3.793,17,0.625,25,0.24,29,2.409,33,3.283,34,1.254,35,0.157,38,0.803,39,3.4,50,0.006,51,0.006,64,1.362,72,0.865,115,4.656,149,3.454,152,2.744,153,2.62,154,1.725,155,4.125,157,2.154,158,4.111,159,3.454,163,2.875,164,2.236,165,2.875,166,2.236,167,3.841,168,2.4,169,2.236,170,1.451,171,3.97,175,1.526,555,2.335,687,4.546,688,4.546,689,5.516,690,2.62,695,3.503,705,3.4,894,3.053,895,3.053,1007,3.975,1057,3.053,1059,4.479,1061,5.285,1062,3.839,1064,3.839,1067,4.204,1068,3.839,1069,3.839,1070,3.839,1071,3.053,1072,3.503,1073,3.053,1585,4.347,1586,4.347,1587,4.347,1588,4.347]],["title/controllers/RoleController.html",[183,2.054,1589,3.306]],["body/controllers/RoleController.html",[0,0.15,3,0.066,4,0.06,5,0.06,9,0.15,11,1.593,14,0.438,15,0.009,17,0.626,25,0.251,29,4.094,30,1.787,31,3.509,32,1.354,34,0.893,35,0.066,48,2.746,50,0.005,51,0.005,56,1.174,57,1.912,63,1.783,64,1.416,65,1.32,67,1.852,70,0.588,122,1.613,136,3.127,154,1.728,175,2.21,177,3.11,183,1.44,185,1.44,193,1.866,194,1.955,195,1.955,199,1.955,201,1.652,202,1.008,353,4.271,361,5.188,370,2.057,404,1.687,436,4.491,437,2.318,438,2.318,468,2.318,469,3.11,470,2.318,472,3.11,524,1.955,527,2.496,555,1.208,685,4.181,687,4.181,688,4.724,705,3.533,941,1.955,1125,5.49,1191,4.136,1199,2.735,1202,3.751,1210,2.175,1211,2.496,1212,2.496,1219,5.074,1230,2.735,1589,3.505,1590,2.735,1591,4.987,1592,4.136,1593,4.684,1594,4.987,1595,5.648,1596,3.097,1597,4.136,1598,3.097,1599,3.097,1600,3.097,1601,3.097,1602,2.735,1603,3.097,1604,3.097,1605,3.097,1606,3.097,1607,3.097,1608,3.097,1609,3.097,1610,3.097,1611,3.097,1612,3.097,1613,3.097,1614,4.422,1615,3.097,1616,3.097,1617,2.735,1618,4.552,1619,2.496,1620,2.735,1621,3.566,1622,2.496,1623,5.953,1624,3.097,1625,3.097,1626,2.735,1627,3.097,1628,3.097,1629,3.097,1630,3.097,1631,3.097,1632,3.097,1633,3.097,1634,3.097,1635,3.097,1636,3.097,1637,3.097,1638,3.097,1639,3.097,1640,3.097,1641,3.097]],["title/injectables/RoleGuard.html",[93,0.693,524,2.789]],["body/injectables/RoleGuard.html",[0,0.215,3,0.095,4,0.085,5,0.085,7,1.775,9,0.215,10,0.677,11,2.28,14,0.309,15,0.009,16,2.28,17,0.586,20,2.365,25,0.208,35,0.095,44,1.995,48,1.374,50,0.006,51,0.006,56,1.521,57,1.859,58,1.939,63,1.521,64,1.207,65,1.126,67,1.112,70,0.842,72,1.638,87,2.502,89,3.318,93,0.952,95,1.443,100,1.778,115,2.799,122,0.968,152,3.83,153,4.168,201,2.365,202,2.42,297,2.491,298,2.062,308,1.556,309,1.374,340,1.939,341,2.575,360,2.243,404,1.597,450,5.172,451,3.574,452,3.574,524,4.366,705,2.202,905,3.318,916,4.261,1029,4.938,1038,2.799,1165,5.357,1166,5.357,1169,3.915,1621,5.076,1622,3.574,1642,3.915,1643,6.916,1644,4.434,1645,6.067,1646,4.434,1647,6.067,1648,6.067,1649,4.434,1650,4.434,1651,4.434,1652,4.434,1653,4.434,1654,4.434,1655,4.434,1656,3.915,1657,4.434,1658,4.434,1659,7.436,1660,4.434,1661,4.434,1662,3.915,1663,3.915,1664,4.434,1665,4.434,1666,4.434,1667,4.434,1668,3.915]],["title/modules/RoleModule.html",[208,1.633,223,3.103]],["body/modules/RoleModule.html",[0,0.253,3,0.111,4,0.1,5,0.1,15,0.009,25,0.258,30,3.011,35,0.111,50,0.007,51,0.007,64,1.345,70,0.991,149,3.011,168,2.711,170,1.74,172,4.748,185,3.144,208,2.773,210,2.505,211,2.505,212,2.683,213,2.683,214,2.505,215,3.857,216,3.857,223,6.169,226,5.076,227,3.477,228,2.683,229,2.683,231,3.747,250,3.903,258,3.464,705,2.591,894,3.664,895,3.664,1071,4.748,1120,4.204,1236,5.448,1589,5.613,1621,5.666,1622,4.204,1669,4.606,1670,5.216,1671,4.606,1672,4.606,1673,5.216,1674,5.216,1675,6.76,1676,5.216]],["title/injectables/RoleService.html",[93,0.693,1621,2.789]],["body/injectables/RoleService.html",[0,0.09,3,0.039,4,0.036,5,0.036,9,0.194,10,0.346,11,2.684,14,0.369,15,0.009,16,3.239,17,0.636,25,0.222,29,1.023,30,1.066,31,3.081,32,0.807,35,0.039,38,0.764,44,1.816,48,2.29,50,0.003,51,0.003,56,0.777,57,2.312,58,0.807,63,1.783,64,1.533,65,1.32,67,1.82,70,0.351,72,1.593,87,0.762,93,0.486,95,0.601,100,1.242,119,1.087,122,1.661,127,1.315,136,2.327,139,1.023,140,1.066,148,1.788,149,2.309,152,2.526,153,2.411,157,0.442,170,0.616,175,1.832,177,3.111,202,1.954,297,2.832,298,2.178,302,4.491,308,1.087,309,1.24,318,2.318,319,0.917,340,0.807,341,3.397,348,1.297,353,3.778,360,1.732,361,4.216,404,2.435,465,3.201,466,1.066,542,4.599,547,1.382,573,3.505,576,2.427,586,3.29,595,0.917,597,1.631,598,1.631,602,1.631,603,1.631,606,1.631,607,1.631,609,1.488,667,1.226,670,0.859,671,0.95,685,3.111,687,4.491,702,1.631,703,1.631,705,3.452,791,1.166,866,2.496,894,1.297,895,1.297,905,2.994,907,3.533,932,0.95,941,1.166,1073,1.297,1144,1.226,1193,2.496,1202,1.226,1239,2.735,1240,1.382,1241,4.75,1247,2.735,1250,2.735,1255,2.176,1256,1.631,1257,1.382,1260,1.382,1261,1.488,1262,1.488,1265,1.631,1266,1.631,1267,1.631,1268,1.631,1269,3.225,1270,1.382,1518,1.631,1591,2.735,1592,2.735,1594,2.735,1597,2.735,1602,2.735,1614,4.216,1617,1.631,1618,3.225,1619,1.488,1620,1.631,1621,1.956,1662,3.533,1663,3.533,1677,1.631,1678,3.098,1679,3.098,1680,4.684,1681,3.098,1682,3.098,1683,3.098,1684,3.098,1685,4.001,1686,3.098,1687,1.847,1688,3.098,1689,1.847,1690,1.847,1691,3.098,1692,1.847,1693,3.098,1694,1.847,1695,1.847,1696,1.488,1697,1.847,1698,3.098,1699,1.847,1700,3.098,1701,1.847,1702,3.098,1703,3.098,1704,1.847,1705,1.847,1706,3.098,1707,1.847,1708,3.098,1709,1.847,1710,3.098,1711,1.847,1712,1.847,1713,1.847,1714,1.847,1715,1.847,1716,1.847,1717,1.847,1718,1.847,1719,1.847,1720,1.847,1721,1.847,1722,1.847,1723,1.847,1724,1.847,1725,1.847,1726,3.098,1727,1.847,1728,3.098,1729,4.001,1730,1.847,1731,1.847,1732,1.847,1733,1.847,1734,1.847,1735,1.847,1736,1.847,1737,1.847,1738,3.098,1739,1.847,1740,1.847,1741,1.847,1742,3.098,1743,3.098,1744,3.098,1745,3.098,1746,4.684,1747,1.847,1748,1.847,1749,1.847,1750,1.847,1751,1.847,1752,2.735,1753,3.098,1754,1.847,1755,1.847,1756,1.847,1757,1.847,1758,4.684,1759,3.098,1760,1.847,1761,1.847,1762,1.847,1763,1.847,1764,1.847,1765,1.847,1766,1.847,1767,1.847,1768,1.847,1769,1.847,1770,1.847,1771,1.847,1772,1.847]],["title/controllers/SendChampController.html",[183,2.054,1773,3.306]],["body/controllers/SendChampController.html",[0,0.265,3,0.116,4,0.105,5,0.105,9,0.264,14,0.277,15,0.009,17,0.462,25,0.25,34,1.571,35,0.116,50,0.007,51,0.007,56,1.743,57,2.058,63,1.366,64,1.084,65,1.011,67,1.366,69,4.076,70,1.035,122,1.189,154,1.274,183,2.533,185,2.533,193,3.282,194,3.438,195,3.438,198,4.389,199,3.438,201,2.905,202,1.773,203,4.389,353,4.005,370,3.617,393,6.158,404,1.961,469,3.617,472,4.616,576,2.533,1773,5.202,1774,4.809,1775,4.389,1776,7.656,1777,5.447,1778,4.86,1779,4.809,1780,5.447,1781,6.138,1782,4.833,1783,4.809,1784,4.809,1785,5.447,1786,5.447,1787,4.809,1788,4.809,1789,4.389,1790,5.447]],["title/interfaces/SendChampError.html",[1012,1.591,1791,2.934]],["body/interfaces/SendChampError.html",[3,0.107,4,0.096,5,0.096,9,0.243,10,0.735,14,0.413,15,0.009,25,0.151,35,0.178,38,0.886,50,0.006,51,0.006,81,2.851,83,2.193,127,2.129,128,2.491,138,2.815,145,2.337,175,1.76,321,5.119,576,2.332,787,5.702,969,4.376,977,2.579,1012,2.815,1013,2.675,1051,5.125,1398,3.523,1778,3.023,1791,4.376,1792,3.166,1793,4.931,1794,3.166,1795,3.166,1796,3.166,1797,4.931,1798,3.753,1799,3.753,1800,3.753,1801,3.753,1802,3.753,1803,3.331,1804,3.971,1805,4.628,1806,4.628,1807,3.166,1808,3.753,1809,3.753,1810,3.753]],["title/modules/SendChampModule.html",[208,1.633,224,2.934]],["body/modules/SendChampModule.html",[0,0.283,3,0.125,4,0.112,5,0.112,15,0.009,25,0.248,35,0.125,50,0.007,51,0.007,70,1.108,185,3.375,208,2.921,210,2.802,211,2.802,212,3,213,3,214,2.802,215,4.063,216,4.063,224,5.838,227,3.733,228,3,229,3,231,3.233,1773,5.913,1782,5.753,1811,5.151,1812,5.151,1813,5.151,1814,5.833,1815,5.833,1816,6.409,1817,4.097,1818,5.833]],["title/injectables/SendChampService.html",[93,0.693,1782,2.789]],["body/injectables/SendChampService.html",[0,0.154,3,0.068,4,0.061,5,0.061,9,0.154,10,0.533,14,0.365,15,0.009,17,0.65,25,0.23,35,0.068,38,0.781,40,2.006,44,1.84,50,0.005,51,0.005,56,1.197,57,2.108,58,1.389,63,1.599,64,1.269,65,1.183,67,1.714,70,0.603,72,0.95,75,1.761,81,2.182,87,1.31,93,0.749,95,1.034,100,1.914,102,3.7,105,1.477,106,1.634,107,1.526,119,1.115,122,1.712,127,2.707,157,1.143,202,2.495,291,1.634,297,3.022,298,2.966,308,2.013,309,1.48,340,1.389,341,2.435,360,1.765,393,2.231,404,2.066,469,3.171,570,2.231,576,1.477,791,3.014,905,2.377,1033,2.11,1034,4.292,1142,2.231,1144,2.11,1147,2.231,1174,2.56,1778,3.844,1782,3.014,1784,2.805,1794,2.006,1795,2.006,1796,2.006,1803,2.11,1807,2.006,1817,2.231,1819,2.805,1820,5.736,1821,5.632,1822,3.848,1823,4.216,1824,5.632,1825,4.216,1826,2.805,1827,6.342,1828,4.774,1829,3.177,1830,4.216,1831,3.177,1832,4.48,1833,4.216,1834,3.177,1835,5.065,1836,5.065,1837,3.177,1838,3.848,1839,3.177,1840,4.774,1841,3.177,1842,4.774,1843,2.377,1844,2.805,1845,2.805,1846,5.065,1847,4.216,1848,4.774,1849,3.177,1850,4.774,1851,4.216,1852,4.216,1853,3.177,1854,2.805,1855,3.177,1856,3.177,1857,3.177,1858,2.805,1859,2.805,1860,4.216,1861,2.805,1862,4.216,1863,5.065,1864,2.805,1865,2.231,1866,2.805,1867,2.805,1868,2.805,1869,2.805,1870,2.805,1871,2.805,1872,4.216,1873,2.805]],["title/interfaces/SendChampSmsWalletBalance.html",[1012,1.591,1807,2.789]],["body/interfaces/SendChampSmsWalletBalance.html",[3,0.111,4,0.1,5,0.1,9,0.251,10,0.751,14,0.38,15,0.009,25,0.156,35,0.179,38,0.889,50,0.007,51,0.007,81,2.558,83,2.265,127,2.199,128,2.572,138,2.423,145,1.645,175,1.818,321,4.769,576,2.409,787,4.727,969,4.469,977,2.664,1012,2.85,1013,2.763,1051,4.248,1398,3.638,1778,3.121,1791,3.44,1792,3.27,1793,5.036,1794,3.27,1795,3.27,1796,3.27,1797,5.036,1798,3.876,1799,3.876,1800,3.876,1801,3.876,1802,3.876,1803,3.44,1804,4.055,1805,4.727,1806,4.727,1807,4.248,1808,5.922,1809,5.922,1810,3.876]],["title/interfaces/SendChampSuccess.html",[1012,1.591,1795,2.789]],["body/interfaces/SendChampSuccess.html",[3,0.107,4,0.097,5,0.097,9,0.244,10,0.736,14,0.398,15,0.009,25,0.151,35,0.178,38,0.883,50,0.006,51,0.006,81,2.853,83,3.42,127,3.321,128,3.659,138,2.377,145,1.596,175,1.764,321,5.121,576,2.338,787,5.706,969,4.383,977,2.585,1012,2.817,1013,2.681,1051,4.166,1398,3.531,1778,3.029,1791,3.338,1792,3.174,1793,5.854,1794,3.174,1795,4.166,1796,3.174,1797,4.939,1798,3.762,1799,3.762,1800,3.762,1801,3.762,1802,3.762,1803,3.338,1804,3.977,1805,4.635,1806,4.635,1807,3.174,1808,3.762,1809,3.762,1810,3.762]],["title/interfaces/SendMailPayload.html",[1012,1.591,1349,3.306]],["body/interfaces/SendMailPayload.html",[0,0.281,3,0.088,4,0.08,5,0.08,9,0.2,10,0.645,13,4.794,14,0.386,15,0.009,25,0.243,35,0.088,38,0.845,44,1.193,49,2.054,50,0.006,51,0.006,57,1.792,65,1.339,70,0.786,72,1.437,83,1.809,87,2.385,93,0.907,100,1.659,102,3.311,105,1.924,106,2.127,107,1.987,122,1.455,135,1.252,145,2.117,157,0.99,202,2.349,291,2.127,297,2.6,298,2.689,303,2.293,311,4.001,312,2.493,313,2.493,341,2.454,353,3.585,355,5.528,360,1.529,458,2.905,614,1.864,624,4.35,822,3.429,868,2.905,932,2.127,1012,1.49,1013,2.206,1038,4.209,1078,4.061,1313,3.095,1314,3.095,1324,5.373,1335,4.061,1337,4.327,1342,3.334,1343,4.327,1346,5.886,1348,3.652,1349,4.989,1351,3.652,1353,3.652,1355,3.652,1356,3.652,1358,3.652,1359,3.652,1360,4.66,1361,3.652,1362,5.106,1363,5.886,1364,5.106,1365,5.106,1366,3.652,1367,3.652,1368,3.334,1369,3.652,1370,3.652]],["title/classes/SendOtpDto.html",[0,0.215,416,2.789]],["body/classes/SendOtpDto.html",[0,0.354,2,0.767,3,0.09,4,0.081,5,0.081,9,0.205,10,0.655,14,0.403,15,0.009,17,0.572,25,0.219,35,0.144,38,0.65,44,1.694,50,0.006,51,0.006,54,2.032,57,1.137,58,1.85,72,0.842,87,2.423,119,2.062,122,1.591,131,1.968,135,1.777,138,1.524,154,1.579,157,1.013,297,1.524,309,2.52,340,1.85,360,2.172,404,1.524,416,3.708,505,2.671,614,1.907,723,5.132,734,3.166,780,3.39,861,4.734,862,3.41,892,3.47,893,2.442,898,2.81,899,4.126,911,3.708,912,2.671,914,4.126,916,2.972,917,3.166,919,4.126,920,4.481,921,3.708,925,3.166,928,4.066,929,4.739,930,2.81,931,2.972,932,2.176,933,2.81,990,4.26,1001,4.26,1131,4.396,1132,5.455,1133,2.81,1134,2.671,1138,2.972,1139,3.166,1140,3.736,1141,3.41,1142,2.972,1143,3.736,1144,3.901,1145,3.736,1146,5.187,1147,4.126,1148,3.736,1149,3.736,1150,3.166,1151,3.736,1152,4.126,1153,3.166,1154,3.41,1155,5.187,1156,4.734,1157,4.734,1158,3.41,1159,3.736,1160,3.41,1161,4.126,1874,4.231,1875,4.231,1876,4.231]],["title/interfaces/SendchampWebhookEvent.html",[1012,1.591,1778,2.662]],["body/interfaces/SendchampWebhookEvent.html",[3,0.104,4,0.093,5,0.093,9,0.236,10,0.72,14,0.429,15,0.009,25,0.146,35,0.176,38,0.895,50,0.006,51,0.006,81,2.826,83,2.126,127,2.064,128,2.415,138,2.325,145,1.544,175,1.706,321,5.08,576,2.261,787,4.534,969,5.337,977,2.5,1012,2.78,1013,2.593,1051,4.075,1398,5.423,1778,3.89,1791,3.229,1792,3.069,1793,4.831,1794,3.069,1795,3.069,1796,3.069,1797,6.014,1798,3.638,1799,3.638,1800,3.638,1801,3.638,1802,3.638,1803,3.229,1804,3.89,1805,4.534,1806,4.534,1807,3.069,1808,3.638,1809,3.638,1810,5.778]],["title/classes/SetPasswordDto.html",[0,0.215,420,3.103]],["body/classes/SetPasswordDto.html",[0,0.297,2,1.106,3,0.13,4,0.117,5,0.117,7,1.916,9,0.296,10,0.833,14,0.38,15,0.009,17,0.633,20,3.982,25,0.183,35,0.13,38,0.719,50,0.007,51,0.007,81,2.759,154,1.746,385,5.44,387,4.481,420,5.244,441,4.569,442,4.289,555,2.382,661,4.569,663,6.017,664,6.017,665,5.392,666,4.921,667,4.055,1877,5.392,1878,6.106,1879,6.106]],["title/modules/SmsModule.html",[208,1.633,1416,3.103]],["body/modules/SmsModule.html",[0,0.265,3,0.117,4,0.105,5,0.105,15,0.009,25,0.25,35,0.117,50,0.007,51,0.007,70,1.037,208,2.833,210,2.622,211,2.622,212,2.808,213,2.808,214,2.622,215,3.942,216,3.942,222,5.138,224,5.661,225,5.661,227,3.58,228,2.808,229,2.808,231,3.858,246,4.086,248,4.821,249,4.821,1416,6.373,1429,5.998,1454,4.821,1880,4.821,1881,4.821,1882,4.821,1883,5.46,1884,5.46]],["title/injectables/SmsService.html",[93,0.693,1429,2.934]],["body/injectables/SmsService.html",[0,0.128,3,0.056,4,0.051,5,0.051,9,0.128,10,0.461,14,0.394,15,0.009,17,0.676,25,0.217,35,0.056,38,0.491,44,1.667,50,0.004,51,0.004,56,1.036,57,1.372,58,2.231,63,1.036,64,0.823,65,0.767,67,1.036,70,0.5,72,1.387,75,3.203,81,1.978,87,1.705,93,0.648,95,0.857,100,1.657,102,3.461,107,1.265,119,2.028,122,1.114,138,2.262,157,0.631,202,2.744,237,1.971,272,3.093,278,3.093,291,1.355,297,3.222,298,2.688,303,3.693,308,2.665,309,2.354,311,1.46,312,1.587,313,1.587,316,1.85,329,2.123,340,1.152,341,2.166,348,1.85,360,1.528,506,4.112,576,2.92,760,2.123,772,2.326,777,2.123,791,2.61,853,3.331,977,2.126,996,3.093,1134,2.61,1343,4.987,1368,2.123,1429,2.745,1656,2.326,1668,3.65,1696,3.331,1775,4.112,1782,4.4,1783,2.326,1838,3.331,1885,2.123,1886,5.103,1887,5.103,1888,5.103,1889,5.103,1890,5.103,1891,5.78,1892,5.78,1893,5.103,1894,5.78,1895,5.103,1896,2.634,1897,4.4,1898,4.134,1899,2.634,1900,2.634,1901,2.634,1902,2.634,1903,4.134,1904,2.634,1905,4.134,1906,2.634,1907,4.134,1908,2.634,1909,2.634,1910,4.505,1911,2.634,1912,2.634,1913,4.658,1914,4.134,1915,2.634,1916,2.634,1917,2.123,1918,2.634,1919,2.123,1920,3.65,1921,2.326,1922,3.65,1923,4.112,1924,2.634,1925,2.326,1926,2.634,1927,4.134,1928,2.634,1929,5.103,1930,4.134,1931,5.103,1932,5.103,1933,2.634,1934,2.634,1935,4.134,1936,2.634,1937,2.634,1938,2.634,1939,5.78,1940,2.634,1941,6.28,1942,6.28,1943,6.969,1944,5.78,1945,5.78,1946,2.634,1947,2.634,1948,2.634,1949,2.634,1950,2.634,1951,2.634,1952,4.134,1953,1.85,1954,2.634,1955,2.634]],["title/injectables/SortQueryConstraint.html",[93,0.693,1956,3.56]],["body/injectables/SortQueryConstraint.html",[0,0.312,3,0.103,4,0.093,5,0.093,9,0.234,10,0.717,14,0.327,15,0.009,17,0.612,25,0.217,35,0.103,38,0.772,44,1.854,50,0.006,51,0.006,54,2.32,56,1.611,57,1.298,58,2.112,63,1.211,64,1.279,65,0.896,67,1.611,70,0.917,72,1.279,87,2.651,93,1.008,95,1.572,119,2.256,122,1.577,135,1.461,145,1.534,157,1.156,271,3.71,297,2.601,308,1.695,309,1.497,340,2.112,360,2.376,404,1.739,595,2.399,670,2.246,671,2.484,870,5.18,887,4.265,911,4.058,912,4.862,914,6.003,921,4.058,933,3.208,1134,4.56,1152,4.514,1153,3.614,1956,5.18,1957,6.8,1958,4.265,1959,4.83,1960,6.427,1961,4.83,1962,4.83,1963,3.893,1964,4.83,1965,4.265,1966,4.265,1967,6.427,1968,4.83,1969,4.83,1970,4.83,1971,4.83,1972,4.83]],["title/classes/SuccessMessages.html",[0,0.215,593,3.103]],["body/classes/SuccessMessages.html",[0,0.227,2,0.846,3,0.1,4,0.09,5,0.09,9,0.226,10,0.701,14,0.449,15,0.009,17,0.644,25,0.189,35,0.1,38,0.844,50,0.006,51,0.006,56,1.575,63,1.575,64,1.25,65,1.165,67,1.575,83,2.746,122,1.371,202,2.657,308,2.205,309,1.947,387,3.351,593,4.412,794,3.761,795,7.793,823,5.547,826,4.121,853,5.062,860,4.121,868,4.412,882,6.999,892,4.291,893,2.694,898,4.172,1453,3.761,1973,6.999,1974,7.1,1975,7.1,1976,7.1,1977,6.282,1978,6.282,1979,4.667,1980,5.547,1981,6.282,1982,4.667,1983,4.667,1984,6.282,1985,5.062,1986,5.062,1987,6.707,1988,4.667,1989,4.667]],["title/interfaces/TermiiBalanceSuccess.html",[1012,1.591,1990,2.934]],["body/interfaces/TermiiBalanceSuccess.html",[3,0.119,4,0.107,5,0.107,9,0.27,10,0.787,14,0.394,15,0.009,35,0.179,38,0.856,48,2.6,50,0.007,51,0.007,81,1.906,83,2.435,127,2.364,138,2.928,269,6.085,344,3.912,977,3.626,1012,2.786,1013,2.971,1804,4.249,1832,3.912,1865,3.912,1953,5.892,1990,4.682,1991,3.912,1992,6.553,1993,4.682,1994,4.489,1995,4.489,1996,3.912,1997,5.276,1998,5.276,1999,3.912,2000,5.276,2001,3.516]],["title/controllers/TermiiController.html",[183,2.054,2002,3.306]],["body/controllers/TermiiController.html",[0,0.265,3,0.116,4,0.105,5,0.105,9,0.264,14,0.277,15,0.009,17,0.462,25,0.25,34,1.571,35,0.116,50,0.007,51,0.007,56,1.743,57,2.058,63,1.366,64,1.084,65,1.011,67,1.366,69,4.076,70,1.035,122,1.189,154,1.274,183,2.533,185,2.533,193,3.282,194,3.438,195,3.438,198,4.389,199,3.438,201,2.905,202,1.773,203,4.389,353,4.005,370,3.617,393,6.158,404,1.961,469,3.617,472,4.616,576,2.533,1779,4.809,1781,6.138,1787,4.809,1788,4.809,1789,4.389,1822,6.17,1897,4.833,1919,4.389,1923,4.389,2001,5.091,2002,5.202,2003,4.809,2004,5.447,2005,5.447,2006,4.809,2007,5.447,2008,5.447,2009,5.447]],["title/modules/TermiiModule.html",[208,1.633,225,2.934]],["body/modules/TermiiModule.html",[0,0.283,3,0.125,4,0.112,5,0.112,15,0.009,25,0.248,35,0.125,50,0.007,51,0.007,70,1.108,185,3.375,208,2.921,210,2.802,211,2.802,212,3,213,3,214,2.802,215,4.063,216,4.063,225,5.838,227,3.733,228,3,229,3,231,3.233,1816,6.409,1817,4.097,1897,5.753,1919,4.701,2002,5.913,2010,5.151,2011,5.151,2012,5.151,2013,5.833,2014,5.833]],["title/injectables/TermiiService.html",[93,0.693,1897,2.789]],["body/injectables/TermiiService.html",[0,0.149,3,0.066,4,0.059,5,0.059,9,0.149,10,0.52,14,0.375,15,0.009,17,0.659,25,0.228,35,0.066,38,0.775,40,1.942,44,1.81,50,0.005,51,0.005,56,1.168,57,2.089,58,1.345,63,1.573,64,1.249,65,1.164,67,1.779,70,0.584,72,0.927,75,1.705,87,1.268,93,0.731,95,1.001,100,1.868,102,3.66,105,1.43,106,1.582,107,1.477,119,1.079,122,1.729,127,2.862,157,1.346,202,2.47,291,2.396,297,3.075,298,2.918,308,1.974,309,1.444,340,1.345,341,2.387,348,2.16,360,1.722,393,2.16,404,2.025,506,2.479,570,2.16,791,2.941,990,1.942,1033,2.042,1034,4.209,1142,2.16,1144,2.042,1147,2.16,1174,2.479,1794,1.942,1817,2.16,1821,5.54,1822,3.755,1823,4.114,1824,5.54,1825,4.114,1826,2.716,1827,6.264,1830,4.114,1832,4.407,1833,4.114,1835,4.966,1836,4.966,1838,3.755,1843,2.302,1844,2.716,1845,2.716,1846,4.966,1847,4.114,1851,4.114,1852,4.114,1854,2.716,1858,2.716,1859,2.716,1860,4.114,1861,2.716,1862,4.114,1863,4.966,1864,2.716,1865,2.16,1866,2.716,1867,2.716,1868,2.716,1869,2.716,1870,2.716,1871,2.716,1872,4.114,1873,2.716,1897,2.941,1913,5.056,1953,2.16,1990,2.042,1993,2.042,1996,2.16,1999,2.16,2001,3.961,2006,2.716,2015,2.716,2016,5.624,2017,6.274,2018,4.659,2019,3.076,2020,3.076,2021,3.076,2022,3.076,2023,3.076,2024,3.076,2025,4.659,2026,3.076,2027,4.659,2028,3.076,2029,2.716,2030,4.659,2031,4.659,2032,3.076,2033,3.076,2034,3.076,2035,3.076,2036,3.076,2037,3.076,2038,3.076]],["title/interfaces/TermiiSmsSuccess.html",[1012,1.591,1993,2.934]],["body/interfaces/TermiiSmsSuccess.html",[3,0.117,4,0.105,5,0.105,9,0.265,10,0.778,14,0.411,15,0.009,35,0.178,38,0.866,48,2.586,50,0.007,51,0.007,81,2.764,83,3.532,127,2.323,138,2.91,269,4.096,344,3.844,977,3.586,1012,2.763,1013,2.919,1804,4.202,1832,3.844,1865,3.844,1953,5.861,1990,3.635,1991,3.844,1992,4.411,1993,5.096,1994,6.511,1995,4.411,1996,3.844,1997,5.218,1998,5.218,1999,3.844,2000,5.218,2001,3.455]],["title/interfaces/TermiiWebhookEvent.html",[1012,1.591,2001,2.789]],["body/interfaces/TermiiWebhookEvent.html",[3,0.123,4,0.111,5,0.111,9,0.28,10,0.805,14,0.294,15,0.009,35,0.181,38,0.817,48,2.235,50,0.007,51,0.007,81,1.975,83,2.524,127,3.496,138,2.597,269,4.32,344,4.054,977,3.708,1012,2.832,1013,3.079,1804,4.345,1832,5.785,1865,4.054,1953,5.065,1990,3.834,1991,4.054,1992,4.652,1993,5.47,1994,4.652,1995,4.652,1996,4.054,1997,5.396,1998,5.396,1999,4.054,2000,5.396,2001,4.552]],["title/injectables/TokenService.html",[93,0.693,521,2.662]],["body/injectables/TokenService.html",[0,0.095,1,1.178,3,0.042,4,0.038,5,0.038,8,3.888,9,0.095,10,0.362,11,1.005,12,1.957,13,1.8,14,0.382,15,0.009,17,0.646,23,1.372,25,0.222,27,1.298,28,1.298,31,2.467,32,0.854,35,0.042,37,2.001,38,0.818,41,3.577,43,3.4,44,1.86,45,1.732,46,1.957,47,1.178,48,2.195,49,2.886,50,0.003,51,0.003,56,0.814,57,2.283,58,1.42,63,1.85,64,1.469,65,1.369,67,1.85,70,0.371,72,1.57,78,1.725,93,0.509,95,0.636,100,1.302,102,3.059,105,0.909,106,1.005,107,0.939,119,0.686,122,1.663,157,0.777,170,0.652,175,0.686,202,2.005,277,2.617,278,2.43,291,1.67,292,1.234,297,2.779,307,4.282,308,1.462,309,1.291,311,1.083,312,1.178,313,1.178,319,0.97,334,1.372,339,1.462,340,1.42,341,3.074,360,2.148,404,2.093,465,3.439,466,1.128,478,3.246,504,1.575,505,1.234,521,1.957,535,1.372,537,1.575,542,4.847,549,2.867,551,2.867,552,4.286,553,1.725,573,4.609,576,2.702,585,1.575,595,0.97,596,1.575,636,1.575,637,4.341,638,2.867,670,0.909,671,1.005,833,4.825,932,2.496,1020,1.575,1175,5.438,1176,4.964,1240,1.462,1241,4.082,1257,1.462,1260,1.462,1270,2.43,1271,1.725,1360,2.617,1492,1.725,1752,1.725,1920,5.438,1987,5.132,2039,1.725,2040,4.167,2041,3.247,2042,3.247,2043,3.247,2044,3.247,2045,4.167,2046,3.247,2047,4.167,2048,4.854,2049,4.167,2050,4.167,2051,3.247,2052,3.247,2053,3.247,2054,6.159,2055,1.954,2056,3.247,2057,1.954,2058,3.247,2059,1.954,2060,3.247,2061,1.954,2062,3.247,2063,1.954,2064,1.954,2065,1.954,2066,3.247,2067,1.954,2068,1.954,2069,1.954,2070,1.954,2071,1.954,2072,1.954,2073,1.954,2074,1.954,2075,3.247,2076,1.954,2077,3.247,2078,1.954,2079,3.247,2080,1.954,2081,1.954,2082,3.247,2083,3.247,2084,3.247,2085,1.954,2086,3.247,2087,3.247,2088,3.247,2089,1.954,2090,1.954,2091,3.247,2092,1.954,2093,1.954,2094,3.247,2095,3.247,2096,1.954,2097,1.954,2098,4.167,2099,3.247,2100,3.247,2101,1.954,2102,1.954,2103,3.247,2104,3.247,2105,1.954,2106,1.954,2107,1.954,2108,1.954,2109,4.854,2110,1.954,2111,1.954,2112,1.954,2113,1.954,2114,4.167,2115,1.954,2116,1.954,2117,1.725,2118,1.954,2119,3.247,2120,1.954,2121,1.954,2122,3.247,2123,1.954,2124,1.954,2125,1.954,2126,1.954]],["title/injectables/TransformResponseInterceptor.html",[93,0.693,239,3.103]],["body/injectables/TransformResponseInterceptor.html",[0,0.206,3,0.091,4,0.082,5,0.082,9,0.205,14,0.299,15,0.009,17,0.499,25,0.23,35,0.126,38,0.408,44,1.223,50,0.006,51,0.006,54,2.036,56,1.475,63,1.475,64,1.171,65,1.091,67,1.063,70,0.805,72,1.452,75,3.26,77,3.416,81,2.622,93,0.923,95,1.38,100,1.7,122,1.475,127,3.52,128,2.105,145,1.346,148,4.423,157,1.015,201,2.261,202,1.914,239,4.131,257,3.172,297,1.527,298,1.971,321,3.545,576,3.392,1012,1.527,1023,3.172,1024,3.416,1025,4.402,1026,3.743,1027,3.743,1028,5.88,1029,4.845,1030,4.74,1031,7.003,1032,5.443,1033,2.815,1034,3.172,1035,3.743,1036,3.743,1037,5.443,1038,3.713,1039,4.744,1040,3.416,1041,3.416,1042,3.743,1043,5.194,1044,3.743,1045,3.743,1046,3.743,1047,3.416,1048,3.743,1049,3.743,1050,7.003,1051,4.606,1052,5.194,1053,3.743,1054,5.194,1055,5.194,1056,3.743,1294,3.743,2127,4.239,2128,4.239,2129,4.239]],["title/classes/UpdateLoanDto.html",[0,0.215,1207,3.103]],["body/classes/UpdateLoanDto.html",[0,0.324,2,1.21,3,0.143,4,0.128,5,0.128,7,2.021,15,0.009,25,0.237,34,1.926,35,0.143,50,0.008,51,0.008,682,4.433,684,5.38,1189,5.38,1207,5.532,1214,5.38,2130,5.895,2131,7.876,2132,5.38]],["title/classes/UpdatePasswordDto.html",[0,0.215,424,3.103]],["body/classes/UpdatePasswordDto.html",[0,0.35,2,1.043,3,0.123,4,0.111,5,0.111,7,1.847,9,0.279,10,0.803,14,0.293,15,0.009,17,0.488,25,0.254,34,1.661,35,0.123,38,0.693,50,0.007,51,0.007,72,1.433,81,2.463,134,3.056,135,1.742,154,1.347,385,3.635,387,3.84,424,5.056,441,4.309,442,4.044,555,2.246,595,2.86,661,4.309,663,5.802,664,4.64,669,5.084,670,2.677,671,2.961,672,4.309,673,4.64,677,4.309,678,4.309,679,5.084,680,5.084,1290,6.357,2133,6.357,2134,7.855]],["title/classes/UpdateRoleDto.html",[0,0.215,1614,3.103]],["body/classes/UpdateRoleDto.html",[0,0.324,2,1.21,3,0.143,4,0.128,5,0.128,7,2.021,15,0.009,25,0.237,34,1.926,35,0.143,50,0.008,51,0.008,363,4.996,685,4.433,1614,5.532,1618,5.38,1619,5.38,2132,5.38,2135,5.895,2136,7.876]],["title/classes/UpdateUserDto.html",[0,0.215,429,3.306]],["body/classes/UpdateUserDto.html",[0,0.329,2,0.947,3,0.112,4,0.101,5,0.101,7,1.737,9,0.253,10,0.756,14,0.404,15,0.009,17,0.673,25,0.226,34,1.508,35,0.112,38,0.812,50,0.007,51,0.007,65,1.613,72,1.347,133,4.748,134,3.187,135,1.582,145,2.15,154,1.858,412,3.472,429,5.067,462,4.214,463,4.214,626,5.619,630,4.755,708,4.214,711,5.067,717,4.617,754,5.067,1081,6.052,1083,6.052,2132,6.052,2137,7.264,2138,6.771,2139,7.509,2140,5.228,2141,5.228,2142,5.228,2143,5.228,2144,5.228,2145,5.228,2146,6.771,2147,6.771]],["title/classes/User.html",[0,0.215,48,1.369]],["body/classes/User.html",[0,0.254,2,0.495,3,0.058,4,0.053,5,0.053,7,0.701,9,0.132,10,0.475,11,3.032,14,0.442,15,0.009,16,2.187,17,0.709,25,0.212,30,1.576,31,1.159,33,2.217,34,0.788,35,0.126,38,0.834,48,2.097,50,0.004,51,0.004,64,0.544,65,1.583,72,0.544,119,2.857,131,1.27,137,1.646,145,2.585,154,1.957,157,2.169,158,4.083,159,2.454,161,3.014,163,2.043,164,1.405,165,2.043,166,1.405,167,4.212,168,2.094,169,1.405,170,0.911,171,3.173,175,0.958,308,2.857,319,1.356,387,2.786,555,3.208,614,2.879,622,3.468,624,3.147,626,3.908,628,4.209,630,3.668,690,2.563,705,1.356,711,3.908,848,3.427,928,1.646,1004,3.182,1005,5.063,1007,4.852,1016,1.918,1017,2.987,1018,3.468,1019,1.814,1059,2.044,1074,1.918,1075,2.411,1076,2.411,1077,4.209,1078,3.668,1079,3.668,1080,4.612,1081,4.209,1082,4.612,1083,4.209,1084,4.612,1089,2.411,1092,5.148,1095,3.755,1101,2.411,1107,2.411,1110,3.755,1111,3.755,1112,2.411,1113,2.411,1114,2.411,1115,2.411,1116,2.201,1117,2.411,1118,2.411,1119,2.411,1120,2.201,1121,3.427,1122,2.044,1123,1.918,1124,2.201,2148,2.731,2149,2.731,2150,2.731,2151,2.731,2152,2.731,2153,2.731,2154,2.731,2155,2.731,2156,2.731,2157,2.731,2158,2.731,2159,2.731,2160,2.731,2161,2.731,2162,2.731,2163,2.731,2164,2.731]],["title/controllers/UserController.html",[183,2.054,2165,3.306]],["body/controllers/UserController.html",[0,0.208,3,0.091,4,0.082,5,0.082,9,0.207,14,0.391,15,0.009,17,0.575,25,0.256,31,3.624,32,1.868,34,1.232,35,0.091,48,2.733,50,0.006,51,0.006,56,1.483,57,2.267,63,1.7,64,1.35,65,1.258,67,1.7,70,0.811,122,1.481,136,3.635,154,1.587,175,2.075,183,1.986,185,1.986,193,2.574,194,2.697,195,2.697,199,2.697,201,2.279,202,1.39,370,2.837,404,2.442,436,4.861,437,3.197,438,3.197,465,3.617,466,2.466,468,3.197,470,3.197,472,3.927,524,2.697,527,3.443,555,2.307,677,3.197,941,2.697,1077,4.766,1125,5.413,1202,4.504,1210,3,1211,3.443,1212,3.443,1219,3.443,1623,5.466,1626,3.772,2165,4.425,2166,3.772,2167,5.913,2168,5.913,2169,5.913,2170,4.272,2171,4.272,2172,4.272,2173,4.272,2174,4.272,2175,4.272,2176,4.272,2177,4.272,2178,4.272,2179,4.272,2180,4.272,2181,4.272,2182,4.272,2183,4.272,2184,4.272,2185,5.913,2186,4.272,2187,4.272,2188,4.272,2189,4.272,2190,4.272]],["title/modules/UserModule.html",[208,1.633,226,2.662]],["body/modules/UserModule.html",[0,0.218,3,0.096,4,0.086,5,0.086,15,0.009,25,0.259,32,1.962,35,0.096,48,1.391,50,0.006,51,0.006,57,1.644,64,0.893,70,0.852,72,1.487,122,0.98,158,2.308,168,2.453,170,1.497,185,2.845,208,2.573,210,2.156,211,2.156,212,2.308,213,2.308,214,2.156,215,3.579,216,3.579,220,4.062,222,4.863,226,5.137,227,3.146,228,2.308,229,2.308,231,3.39,245,3.963,246,3.359,258,2.98,288,3.359,341,2.597,465,4.678,466,2.59,520,4.062,534,3.963,535,4.888,543,3.963,780,2.59,1019,2.98,1078,3.152,1123,4.296,1453,3.617,2165,5.208,2191,3.963,2192,4.488,2193,3.963,2194,3.963,2195,4.488,2196,3.617,2197,4.488,2198,4.488,2199,4.488,2200,3.963,2201,4.488,2202,4.488,2203,4.488,2204,6.117,2205,4.488,2206,4.488,2207,4.488,2208,4.488,2209,4.488,2210,4.488,2211,4.488,2212,6.117,2213,4.488,2214,5.401,2215,4.488,2216,6.117,2217,4.488]],["title/injectables/ValidIdConstraint.html",[93,0.693,2218,3.56]],["body/injectables/ValidIdConstraint.html",[0,0.315,3,0.105,4,0.094,5,0.094,9,0.238,10,0.725,14,0.33,15,0.009,17,0.617,25,0.219,35,0.105,38,0.798,44,1.415,50,0.006,51,0.006,54,2.356,56,1.628,57,1.318,58,2.144,63,1.23,64,1.292,65,0.91,67,1.628,70,0.932,87,2.678,93,1.019,95,1.596,119,2.279,122,1.691,135,1.965,145,1.558,157,1.174,175,2.555,271,3.748,297,2.621,308,1.721,309,1.52,340,2.144,360,1.813,404,1.766,595,2.436,670,2.281,671,2.522,780,3.748,911,4.099,912,4.891,919,4.561,920,4.834,921,4.099,928,3.913,929,5.112,930,3.257,931,3.445,932,2.522,933,3.257,1134,4.595,1152,4.561,1153,3.67,1963,3.953,2218,5.866,2219,3.953,2220,4.905,2221,6.493,2222,4.905,2223,4.905,2224,4.905,2225,4.905,2226,4.905,2227,4.331]],["title/injectables/ValidMobileNumber.html",[93,0.693,2228,3.306]],["body/injectables/ValidMobileNumber.html",[0,0.325,3,0.11,4,0.099,5,0.099,9,0.249,10,0.748,14,0.341,15,0.009,17,0.632,25,0.237,35,0.11,38,0.788,44,1.484,50,0.007,51,0.007,54,2.47,56,1.68,57,1.383,58,2.249,63,1.29,64,1.333,65,0.954,67,1.68,70,0.977,87,2.121,93,1.051,95,1.674,119,2.351,122,1.626,135,1.556,138,1.852,145,1.633,157,1.231,271,3.866,297,2.683,308,1.805,309,1.594,340,2.249,360,1.901,505,3.247,595,2.555,670,2.392,671,2.645,911,4.229,912,4.983,921,4.229,1079,4.705,1134,4.703,1139,3.849,1152,4.705,1963,4.145,2228,5.575,2229,4.542,2230,5.144,2231,6.699,2232,5.144,2233,5.144,2234,5.144,2235,5.144,2236,5.144,2237,5.144,2238,5.144]],["title/classes/VerifyOtpDto.html",[0,0.215,433,3.103]],["body/classes/VerifyOtpDto.html",[0,0.33,2,0.952,3,0.112,4,0.101,5,0.101,7,1.743,9,0.255,10,0.758,14,0.429,15,0.009,17,0.675,20,4.014,25,0.247,33,2.883,34,1.515,35,0.112,38,0.725,39,2.609,50,0.007,51,0.007,81,2.324,83,3.29,135,1.589,154,1.861,155,3.166,309,2.105,416,5.327,433,4.77,458,3.69,555,2.049,595,2.609,670,2.443,671,2.702,673,4.234,678,3.931,723,4.751,892,2.702,990,4.287,1001,3.316,1133,3.489,1156,4.234,1157,4.234,1161,3.69,1343,3.931,2239,5.473,2240,5.253,2241,5.253,2242,5.253,2243,5.253,2244,5.253,2245,4.234,2246,5.253,2247,5.253,2248,5.253]],["title/classes/VerifyOtpQueryDto.html",[0,0.215,2249,3.56]],["body/classes/VerifyOtpQueryDto.html",[0,0.375,2,1.171,3,0.138,4,0.124,5,0.124,9,0.313,10,0.862,14,0.329,15,0.009,17,0.548,25,0.194,35,0.138,38,0.744,50,0.008,51,0.008,134,3.508,135,1.955,154,1.512,822,3.973,2214,7.297,2239,6.226,2249,6.226,2250,5.706,2251,6.462]],["title/coverage.html",[2252,4.877]],["body/coverage.html",[0,0.424,1,0.927,5,0.03,6,2.919,8,0.971,14,0.331,15,0.009,26,0.927,29,0.852,31,0.653,36,1.021,37,0.739,44,0.444,47,0.927,48,0.477,50,0.003,51,0.003,52,1.151,53,1.358,75,0.852,93,1.269,94,1.08,96,1.358,105,0.715,124,0.927,125,3.113,126,0.927,136,0.764,141,0.927,147,0.971,149,0.888,150,2.919,151,2.919,163,0.739,165,0.739,172,1.08,174,1.151,176,1.151,177,1.021,178,1.358,179,1.358,183,2.553,184,1.151,186,1.358,196,0.971,214,0.739,239,1.08,241,1.151,243,1.24,296,2.137,303,0.852,311,0.852,314,1.021,320,1.151,361,1.08,362,1.358,363,2.615,368,1.151,369,1.358,371,1.021,385,0.971,397,1.08,402,1.151,408,1.08,412,1.021,416,0.971,420,1.08,424,1.08,429,1.151,433,1.08,436,1.021,439,1.151,450,1.021,453,1.151,455,1.021,460,1.021,465,0.82,521,0.927,522,1.08,523,1.08,524,0.971,528,1.08,560,1.358,564,1.021,593,1.08,645,1.24,646,1.358,660,1.358,661,2.615,670,0.715,672,1.151,674,1.151,682,1.021,683,1.358,684,2.137,685,1.021,686,1.358,705,0.764,707,1.358,708,2.137,710,1.151,718,1.151,728,1.151,729,1.358,733,1.358,738,2.137,780,4.391,791,5.889,793,1.358,794,2.137,822,1.364,890,1.24,908,1.24,909,2.137,910,2.137,934,1.24,935,1.358,936,1.358,942,1.358,943,1.358,951,1.358,964,1.021,965,2.919,966,0.927,981,1.021,985,1.151,986,1.08,988,1.08,989,2.919,1009,1.08,1011,1.08,1012,2.269,1014,2.919,1015,2.919,1022,1.151,1023,1.151,1024,2.137,1025,1.151,1057,2.919,1067,1.08,1071,1.08,1073,1.08,1074,2.919,1122,1.151,1123,1.08,1125,1.021,1126,1.358,1129,1.24,1131,1.151,1132,2.615,1133,3.113,1138,1.08,1161,1.08,1162,1.358,1163,2.137,1170,1.358,1187,1.151,1188,1.358,1207,1.08,1210,1.08,1216,1.021,1238,1.358,1255,1.862,1277,1.358,1279,1.358,1289,1.358,1291,1.358,1307,1.24,1335,1.08,1336,1.358,1342,2.137,1349,1.151,1372,1.358,1373,1.358,1378,1.24,1379,2.137,1380,2.137,1383,1.24,1385,1.24,1386,1.358,1387,1.358,1421,1.358,1429,1.021,1452,1.24,1517,1.358,1540,1.24,1541,1.358,1542,1.358,1548,1.358,1566,1.24,1567,1.358,1572,1.358,1579,1.358,1580,1.358,1589,1.151,1590,1.358,1614,1.08,1621,0.971,1642,1.358,1677,1.358,1773,1.151,1774,1.358,1778,0.927,1782,0.971,1791,1.021,1792,2.959,1795,0.971,1796,0.971,1807,0.971,1819,1.358,1843,1.151,1877,1.358,1885,1.24,1897,0.971,1917,1.24,1956,1.24,1957,1.358,1958,1.358,1973,1.358,1985,1.24,1986,1.24,1990,1.021,1991,2.455,1993,1.021,2001,0.971,2002,1.151,2003,1.358,2015,1.358,2039,1.358,2130,1.358,2133,1.358,2135,1.358,2137,1.358,2165,1.151,2166,1.358,2196,1.24,2218,1.24,2219,2.137,2228,1.984,2229,1.358,2239,2.137,2245,1.24,2249,1.24,2250,1.358,2252,1.24,2253,1.538,2254,1.538,2255,1.358,2256,1.358,2257,9.058,2258,2.341,2259,1.358,2260,1.358,2261,4.139,2262,1.358,2263,1.358,2264,1.358,2265,1.358,2266,1.358,2267,1.358,2268,1.358,2269,1.358,2270,1.358,2271,1.358,2272,1.358,2273,1.358,2274,1.358,2275,8.708,2276,1.358,2277,3.086,2278,3.086,2279,1.358,2280,1.358,2281,2.652,2282,3.669,2283,1.358,2284,1.358,2285,1.358,2286,6.3,2287,1.358,2288,1.358,2289,1.358,2290,1.358,2291,1.358,2292,1.358,2293,7.526,2294,7.685,2295,6.843,2296,4.156,2297,1.358,2298,2.341,2299,1.358,2300,1.358,2301,3.669,2302,1.358,2303,1.358,2304,1.358,2305,1.358,2306,3.086,2307,1.358,2308,1.358,2309,5.515,2310,2.137,2311,1.358,2312,1.358,2313,1.358,2314,1.358,2315,1.358,2316,1.358,2317,1.358,2318,1.358,2319,1.358,2320,6.3,2321,1.358,2322,2.341,2323,1.358,2324,1.358,2325,4.848,2326,1.358,2327,1.358,2328,1.358,2329,1.358,2330,1.358,2331,1.358,2332,1.358,2333,1.358,2334,3.495,2335,2.652,2336,5.125,2337,1.538,2338,3.495,2339,3.495,2340,1.358,2341,1.538,2342,1.538,2343,1.538,2344,1.538,2345,1.538,2346,1.538,2347,1.538]],["title/dependencies.html",[211,2.555,2348,3.248]],["body/dependencies.html",[0,0.329,15,0.009,34,1.512,45,2.795,50,0.007,51,0.007,70,0.995,107,2.517,109,3.158,112,5.28,113,3.48,131,2.437,135,1.586,170,1.749,211,2.517,252,4.224,253,5.465,257,3.922,260,4.627,268,4.224,319,2.603,336,3.922,371,3.48,537,4.224,589,4.627,591,4.224,592,4.224,776,4.224,1033,3.48,1284,4.627,1296,4.224,1311,4.627,1313,3.922,1314,3.922,1555,4.627,1556,4.627,1557,4.627,1794,3.309,1817,3.681,2200,4.627,2349,5.241,2350,5.241,2351,6.781,2352,5.241,2353,5.241,2354,5.241,2355,5.241,2356,5.241,2357,5.241,2358,5.241,2359,5.241,2360,5.241,2361,5.241,2362,5.241,2363,5.241,2364,5.241,2365,5.241,2366,6.781,2367,5.241,2368,5.241,2369,5.241,2370,5.241,2371,5.241,2372,5.241,2373,5.241,2374,5.241,2375,5.241,2376,5.241,2377,5.241,2378,5.241,2379,5.241,2380,5.241,2381,5.241,2382,5.241,2383,5.241,2384,5.241,2385,4.627,2386,5.241,2387,5.241,2388,5.241,2389,5.241]],["title/miscellaneous/enumerations.html",[2390,2.217,2391,4.697]],["body/miscellaneous/enumerations.html",[9,0.217,15,0.009,48,1.891,50,0.006,51,0.006,193,3.676,308,2.141,309,2.884,614,2.749,705,3.03,760,4.916,822,3.137,892,3.137,966,3.676,976,4.916,1001,3.851,1507,5.387,1775,6.013,1792,2.822,1803,4.051,1804,4.496,1805,4.285,1806,4.285,1885,3.602,1910,5.387,1913,4.916,1921,5.387,1922,5.387,1923,6.013,1991,3.139,1996,4.285,1997,4.565,1998,4.565,1999,4.285,2000,4.565,2390,2.694,2391,3.947,2392,3.602,2393,6.1,2394,4.47,2395,6.1,2396,6.1,2397,4.47,2398,4.47,2399,6.1,2400,3.947,2401,6.1,2402,4.47,2403,6.1,2404,4.47,2405,6.1,2406,6.1,2407,6.1,2408,4.47,2409,6.1,2410,6.1,2411,4.47,2412,6.1,2413,6.1,2414,6.1,2415,6.1,2416,6.1,2417,6.1,2418,4.47,2419,6.1,2420,6.1,2421,6.1,2422,6.1]],["title/miscellaneous/functions.html",[2390,2.217,2423,4.697]],["body/miscellaneous/functions.html",[9,0.222,14,0.401,15,0.008,38,0.726,50,0.006,51,0.006,63,2.146,64,1.704,65,1.588,163,3.378,214,3.378,243,4.999,311,3.898,541,4.642,570,5.294,674,4.642,738,3.692,781,4.045,782,4.999,785,4.045,909,3.692,910,4.999,920,5.914,1129,4.999,1132,3.428,1133,4.119,1154,3.692,1161,4.357,1307,5.668,1379,3.692,1380,4.999,1383,4.999,2219,3.692,2227,4.045,2255,4.045,2256,5.477,2258,4.045,2259,6.21,2260,5.477,2261,4.045,2262,6.21,2263,6.21,2264,6.21,2265,6.21,2266,4.045,2267,5.477,2268,4.045,2269,6.21,2270,4.045,2271,5.477,2272,4.045,2273,5.477,2285,4.045,2331,4.045,2332,6.21,2340,4.045,2390,2.76,2423,4.045,2424,4.581,2425,7.876,2426,4.581,2427,4.581,2428,6.203,2429,4.581,2430,4.581,2431,4.581,2432,4.581,2433,4.581,2434,4.581,2435,4.581,2436,4.581,2437,4.581,2438,4.581,2439,4.581,2440,4.581,2441,6.655,2442,4.581,2443,4.581,2444,4.581,2445,4.581]],["title/index.html",[9,0.178,2446,3.678,2447,3.678]],["body/index.html",[4,0.106,15,0.009,39,3.829,50,0.007,51,0.007,270,4.455,335,5.655,688,3.671,775,4.881,828,4.455,1525,4.881,1570,4.455,1925,4.881,1980,4.881,2252,4.455,2441,4.881,2448,5.528,2449,5.528,2450,7.017,2451,5.528,2452,5.528,2453,5.528,2454,5.528,2455,5.528,2456,5.528,2457,7.709,2458,5.528,2459,5.528,2460,5.528,2461,5.528,2462,8.688,2463,5.528,2464,8.553,2465,5.528,2466,7.017,2467,5.528,2468,5.528,2469,5.528,2470,5.528,2471,7.017,2472,5.528,2473,5.528,2474,5.528,2475,7.017,2476,7.017,2477,5.528,2478,5.528,2479,5.528,2480,5.528,2481,4.881,2482,5.528,2483,5.528,2484,5.528,2485,5.528,2486,5.528,2487,5.528,2488,4.881,2489,5.528,2490,5.528,2491,5.528,2492,5.528,2493,5.528,2494,5.528,2495,4.881]],["title/modules.html",[210,2.906]],["body/modules.html",[15,0.007,50,0.007,51,0.007,209,4.582,210,2.941,220,4.066,221,4.301,222,3.69,223,4.301,224,4.066,225,4.066,226,3.69,519,4.301,520,4.066,1416,4.301,2481,8.063,2496,9.132,2497,9.132,2498,9.132]],["title/overview.html",[2499,5.343]],["body/overview.html",[2,0.661,15,0.009,50,0.005,51,0.005,94,4.367,95,1.187,185,1.696,196,3.926,208,1.348,209,6.589,210,1.752,211,1.752,212,1.876,213,1.876,214,1.752,215,1.876,216,1.876,217,3.22,218,3.22,219,3.22,220,5.917,221,5.084,222,4.898,223,5.601,224,5.171,225,5.171,226,4.975,227,2.719,228,1.876,229,1.876,303,4.316,455,5.171,460,5.171,465,4.153,515,3.22,516,3.22,517,3.22,518,3.22,519,5.302,520,5.613,521,4.692,522,4.367,523,4.367,524,3.926,564,5.171,946,3.22,947,3.22,948,3.22,1013,1.945,1216,4.129,1232,3.22,1233,3.22,1303,3.22,1304,3.22,1305,3.22,1412,3.22,1413,3.22,1414,3.22,1415,3.22,1416,5.937,1429,5.171,1621,4.916,1669,3.22,1671,3.22,1672,3.22,1782,4.916,1811,3.22,1812,3.22,1813,3.22,1880,3.22,1881,3.22,1882,3.22,1897,4.916,2010,3.22,2011,3.22,2012,3.22,2191,3.22,2193,3.22,2194,3.22,2499,3.22,2500,3.647,2501,3.647,2502,3.647,2503,3.647,2504,3.22]],["title/properties.html",[10,0.594,2348,3.248]],["body/properties.html",[10,0.78,15,0.009,50,0.008,51,0.008,688,4.643,2385,6.173,2488,6.173,2495,6.173,2505,6.992,2506,6.992]],["title/miscellaneous/typealiases.html",[2390,2.217,2507,5.319]],["body/miscellaneous/typealiases.html",[9,0.294,14,0.426,15,0.008,50,0.007,51,0.007,150,4.254,151,5.217,165,4.298,176,5.559,965,4.254,985,5.559,989,4.254,1011,5.217,1014,4.254,1015,5.217,1022,5.559,1057,4.254,1073,5.217,1074,4.254,1122,5.559,1255,5.217,1696,6.475,1792,3.823,1796,4.689,2309,4.881,2310,5.986,2333,5.348,2390,3.65,2392,4.881,2400,5.348,2508,6.056,2509,6.559,2510,6.056,2511,5.348,2512,5.348,2513,5.348,2514,5.348,2515,5.348]],["title/miscellaneous/variables.html",[273,4.287,2390,2.217]],["body/miscellaneous/variables.html",[9,0.057,10,0.234,11,0.605,14,0.331,15,0.009,16,0.605,31,0.89,38,0.768,39,2.174,44,1.138,45,3.207,49,0.584,50,0.002,51,0.002,57,0.563,72,1.633,73,1.038,75,1.161,81,0.717,87,0.864,119,0.995,122,1.862,124,0.709,127,2.15,128,2.986,138,1.021,139,3.333,140,3.086,141,1.263,142,3.364,143,2.621,144,2.621,145,0.665,146,1.882,148,2.278,150,0.826,151,1.472,157,0.824,168,0.472,172,1.472,173,0.948,273,0.948,279,2.502,285,1.038,308,2.955,309,2.639,314,1.392,355,0.826,404,0.755,436,1.392,467,1.689,528,1.472,547,5.056,555,0.817,576,2.796,636,1.689,653,5.698,667,0.781,672,1.568,687,1.392,728,0.88,730,1.85,782,1.689,791,2.763,822,0.605,829,0.88,847,1.038,870,3.181,871,3.038,872,1.038,890,1.689,892,0.605,898,0.781,899,0.826,928,2.379,932,1.078,965,0.826,981,1.392,986,1.472,987,0.948,989,0.826,995,3.824,996,2.121,997,3.824,1009,1.472,1010,0.948,1014,0.826,1015,1.472,1018,0.781,1021,0.948,1025,1.568,1029,0.781,1051,0.742,1057,0.826,1071,1.472,1072,0.948,1074,0.826,1116,0.948,1121,0.948,1123,1.472,1124,0.948,1134,1.323,1138,1.472,1150,1.568,1158,0.948,1202,1.392,1210,1.472,1241,1.991,1255,1.991,1262,2.284,1396,1.85,1452,1.689,1570,0.948,1623,0.948,1789,0.948,1843,1.568,1917,1.689,1965,1.038,1966,1.85,1985,1.689,1986,1.689,2029,3.038,2117,4.721,2196,1.689,2228,1.568,2245,1.689,2274,1.038,2276,1.85,2277,1.038,2278,3.038,2279,1.85,2280,1.85,2282,1.038,2283,1.85,2284,1.85,2287,1.038,2288,1.85,2289,2.502,2290,1.038,2291,1.85,2292,1.038,2297,1.038,2298,1.038,2299,1.85,2300,1.85,2301,1.038,2302,1.85,2303,1.85,2304,1.85,2305,1.85,2306,1.038,2307,1.85,2308,1.85,2309,0.948,2310,2.284,2311,1.85,2312,1.85,2313,1.85,2314,1.85,2315,1.85,2316,1.85,2317,1.85,2318,1.85,2319,1.85,2321,1.038,2322,1.038,2323,1.038,2324,1.038,2325,1.038,2326,1.85,2327,1.85,2328,1.85,2329,1.038,2330,1.85,2390,0.709,2392,0.948,2504,1.038,2509,5.135,2511,1.038,2512,1.038,2513,1.038,2514,1.038,2515,1.038,2516,3.44,2517,2.834,2518,1.176,2519,1.176,2520,4.746,2521,2.096,2522,2.834,2523,3.44,2524,2.096,2525,1.176,2526,1.176,2527,1.176,2528,1.176,2529,1.176,2530,1.176,2531,1.176,2532,2.834,2533,1.176,2534,3.44,2535,3.44,2536,1.176,2537,2.096,2538,1.176,2539,1.176,2540,1.176,2541,1.176,2542,1.176,2543,2.096,2544,1.176,2545,2.096,2546,1.176,2547,2.096,2548,1.176,2549,2.096,2550,2.096,2551,2.096,2552,2.096,2553,1.176,2554,1.176,2555,1.176,2556,1.176,2557,5.347,2558,5.066,2559,2.096,2560,5.066,2561,2.096,2562,1.176,2563,1.176,2564,1.176,2565,2.096,2566,2.096,2567,2.096,2568,1.176,2569,1.176,2570,1.176,2571,1.176,2572,1.176,2573,1.176,2574,1.176,2575,1.176,2576,2.834,2577,3.44,2578,2.096,2579,3.44,2580,2.096,2581,2.096,2582,2.096,2583,2.096,2584,1.176,2585,1.176,2586,5.347,2587,1.176,2588,1.176,2589,1.176,2590,1.176,2591,1.176,2592,1.176,2593,2.096,2594,1.176,2595,1.176,2596,2.096,2597,1.176,2598,1.176,2599,1.176,2600,2.096,2601,1.176,2602,1.176,2603,1.176,2604,1.176,2605,1.176,2606,1.176,2607,2.096,2608,1.176,2609,1.176,2610,1.176,2611,1.176,2612,1.176,2613,1.176,2614,2.096,2615,1.176,2616,1.176,2617,1.176,2618,1.176,2619,1.176,2620,1.176,2621,1.176,2622,1.176,2623,1.176,2624,1.176,2625,1.176,2626,1.176,2627,2.096,2628,1.176,2629,1.176,2630,1.176,2631,1.176,2632,2.096,2633,1.176,2634,2.096,2635,1.176,2636,3.947,2637,2.834,2638,2.096,2639,1.176,2640,2.096,2641,1.176,2642,1.176,2643,1.176,2644,3.44,2645,1.176,2646,2.834,2647,1.176,2648,2.834,2649,1.176,2650,1.176,2651,1.176,2652,1.176,2653,2.834,2654,1.176,2655,1.176,2656,1.176,2657,1.176,2658,1.176,2659,1.176,2660,1.176,2661,1.176,2662,1.176,2663,1.176,2664,1.176,2665,2.096,2666,1.176,2667,1.176,2668,1.176,2669,1.176,2670,2.096,2671,2.096,2672,2.096,2673,2.096,2674,1.176,2675,1.176,2676,1.176,2677,1.176,2678,2.834,2679,1.176,2680,1.176,2681,2.834,2682,1.176,2683,1.176,2684,2.096,2685,1.176,2686,1.176,2687,2.096,2688,2.096,2689,2.096,2690,1.176,2691,4.746,2692,1.176,2693,1.176,2694,1.176,2695,1.176,2696,1.176,2697,1.176,2698,2.096,2699,2.096,2700,2.096,2701,1.176,2702,1.176,2703,1.176,2704,1.176,2705,1.176,2706,1.176,2707,1.176,2708,1.176,2709,1.176,2710,1.176,2711,1.176,2712,3.44,2713,1.176,2714,1.176,2715,1.176,2716,1.176,2717,1.176]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":791,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.14.1",{"_index":2373,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2372,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2257,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2342,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2281,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2294,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2286,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["0123456789",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":547,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":2385,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["1.7.4",{"_index":2369,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2504,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.10",{"_index":2357,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2358,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2356,"title":{},"body":{"dependencies.html":{}}}],["10.4.1",{"_index":2353,"title":{},"body":{"dependencies.html":{}}}],["10.4.4",{"_index":2355,"title":{},"body":{"dependencies.html":{}}}],["10.4.6",{"_index":2360,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/OtpService.html":{},"injectables/SmsService.html":{},"injectables/TokenService.html":{}}}],["10000",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["10000ms",{"_index":42,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{}}}],["11",{"_index":2500,"title":{},"body":{"overview.html":{}}}],["11000",{"_index":85,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["123456",{"_index":2246,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["123456'})@matches(otp_regex",{"_index":2240,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["160",{"_index":1905,"title":{},"body":{"injectables/SmsService.html":{}}}],["2",{"_index":1789,"title":{},"body":{"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"miscellaneous/variables.html":{}}}],["2.0.2",{"_index":2350,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":2352,"title":{},"body":{"dependencies.html":{}}}],["2.39.1",{"_index":2364,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":2370,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["28",{"_index":2502,"title":{},"body":{"overview.html":{}}}],["3",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["3.0.3",{"_index":2351,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":2354,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":2374,"title":{},"body":{"dependencies.html":{}}}],["3.714.0",{"_index":2349,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1903,"title":{},"body":{"injectables/SmsService.html":{}}}],["4.0.1",{"_index":2384,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":2377,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":2371,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52",{"_index":2503,"title":{},"body":{"overview.html":{}}}],["6",{"_index":996,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"injectables/SmsService.html":{},"miscellaneous/variables.html":{}}}],["6.2.1",{"_index":2362,"title":{},"body":{"dependencies.html":{}}}],["6.9.13",{"_index":2382,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1449,"title":{},"body":{"injectables/OtpService.html":{}}}],["60000",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":2501,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["7.4.2",{"_index":2361,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["8.47.0",{"_index":2366,"title":{},"body":{"dependencies.html":{}}}],["8.8.3",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.15.0",{"_index":2375,"title":{},"body":{"dependencies.html":{}}}],["9]{6",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__+\"'?~]{8",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_common/config/app",{"_index":312,"title":{},"body":{"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TokenService.html":{}}}],["_common/config/environment.config",{"_index":1308,"title":{},"body":{"modules/MailModule.html":{}}}],["_common/constants/decorator",{"_index":1026,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["_common/constants/error",{"_index":671,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/EmailDto.html":{},"classes/MobileNumberDto.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/RoleService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TokenService.html":{},"classes/UpdatePasswordDto.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{}}}],["_common/constants/regex.constant",{"_index":673,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/VerifyOtpDto.html":{}}}],["_common/constants/schema.constant",{"_index":164,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["_common/constants/success",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{}}}],["_common/decorators/get",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["_common/decorators/pagination.decorator",{"_index":1211,"title":{},"body":{"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["_common/dtos/email.dto",{"_index":719,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_common/dtos/id.dto",{"_index":1212,"title":{},"body":{"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["_common/dtos/mobile",{"_index":720,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_common/dtos/response.dto",{"_index":941,"title":{},"body":{"classes/GetUsersDto.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/OtpService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["_common/enums/api",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{}}}],["_common/enums/environment.enum",{"_index":772,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/SmsService.html":{}}}],["_common/filters/all.exception.filter",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/helpers/auth.helper",{"_index":891,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["_common/helpers/enum.helper",{"_index":982,"title":{},"body":{"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/Loan.html":{},"classes/Otp.html":{}}}],["_common/helpers/filter.helper",{"_index":1256,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["_common/helpers/http.helper",{"_index":1844,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["_common/helpers/mobile.helper",{"_index":1139,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/MobileNumberDto.html":{},"classes/SendOtpDto.html":{},"injectables/ValidMobileNumber.html":{}}}],["_common/helpers/promises.helper",{"_index":1918,"title":{},"body":{"injectables/SmsService.html":{}}}],["_common/helpers/responder.helper",{"_index":315,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["_common/helpers/string.helper",{"_index":1453,"title":{},"body":{"injectables/OtpService.html":{},"classes/SuccessMessages.html":{},"modules/UserModule.html":{}}}],["_common/interceptors/logout.interceptor",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/interceptors/transform.interceptor",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/interfaces/document.interface",{"_index":166,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["_common/middleware/proxy.middleware",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/schemas/owner.schema",{"_index":1068,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{}}}],["_common/validations/environment.validation",{"_index":106,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{}}}],["_common/validations/fields",{"_index":675,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["_common/validations/id.validation",{"_index":1130,"title":{},"body":{"classes/IdDto.html":{}}}],["_id",{"_index":1271,"title":{},"body":{"injectables/LoanService.html":{},"injectables/TokenService.html":{}}}],["abcdefghijklmnopqrstuvwxyz123456789",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":1871,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["acceptterms",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["access",{"_index":1404,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["access_key_aws",{"_index":739,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["access_token_secret",{"_index":740,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["accesstoken",{"_index":41,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{}}}],["accesstokenpayload",{"_index":1,"title":{"classes/AccessTokenPayload.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"injectables/JwtStrategy.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["accesstokenttl",{"_index":2104,"title":{},"body":{"injectables/TokenService.html":{}}}],["activecar",{"_index":2139,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["adapter",{"_index":1328,"title":{},"body":{"modules/MailModule.html":{}}}],["addempty",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addhours",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["addhours(new",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["addmilliseconds",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["addmilliseconds(expiresat",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":862,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["admin",{"_index":695,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/IRole.html":{},"classes/Role.html":{}}}],["admin'})@isstring",{"_index":698,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["admin'})@prop({required",{"_index":1064,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{}}}],["admin_email",{"_index":741,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["administrator",{"_index":1061,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{}}}],["again",{"_index":854,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["agent",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{}}}],["aggregatepaginateandsort",{"_index":2310,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2508,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":52,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["allow",{"_index":1393,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["allowed",{"_index":1659,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["already",{"_index":89,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ErrorMessages.html":{},"injectables/RoleGuard.html":{}}}],["already_verified_otp",{"_index":796,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["alreadyexist",{"_index":816,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["alreadyexist(schema",{"_index":876,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["amazing",{"_index":2482,"title":{},"body":{"index.html":{}}}],["ambiguous_characters_regex",{"_index":2283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["anonymous",{"_index":98,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/OptionalAuthGuard.html":{}}}],["anonymousstrategy",{"_index":94,"title":{"injectables/AnonymousStrategy.html":{}},"body":{"injectables/AnonymousStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["any)._id",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any).id",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any).isdeleted",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any)?._id",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any)?._id?.tostring",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any)?.isdeleted",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any)?.message",{"_index":1949,"title":{},"body":{"injectables/SmsService.html":{}}}],["api",{"_index":1724,"title":{},"body":{"injectables/RoleService.html":{}}}],["api_key",{"_index":2030,"title":{},"body":{"injectables/TermiiService.html":{}}}],["apibearerauth",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{}}}],["apibody",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexcludeendpoint",{"_index":1781,"title":{},"body":{"controllers/SendChampController.html":{},"controllers/TermiiController.html":{}}}],["apihideproperty",{"_index":1110,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["apiokresponse",{"_index":1623,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":33,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"injectables/AppService.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/CreateRoleDto.html":{},"classes/DropDownOption.html":{},"classes/IApiRoute.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"injectables/Owner.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/VerifyOtpDto.html":{}}}],["apiproperty()@isstring",{"_index":1581,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["apiproperty({example",{"_index":155,"title":{},"body":{"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"classes/AuthPayload.html":{},"classes/CreateRoleDto.html":{},"classes/IApiRoute.html":{},"classes/IRole.html":{},"classes/Role.html":{},"classes/VerifyOtpDto.html":{}}}],["apiproperty({type",{"_index":690,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/DropDownOption.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"injectables/Owner.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["apiresponse",{"_index":124,"title":{"classes/ApiResponse.html":{}},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiroute",{"_index":149,"title":{"classes/ApiRoute.html":{}},"body":{"classes/ApiRoute.html":{},"classes/ErrorMessages.html":{},"classes/IApiRoute.html":{},"classes/IRole.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["apiroute.method",{"_index":1729,"title":{},"body":{"injectables/RoleService.html":{}}}],["apiroute.method.touppercase",{"_index":906,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["apiroute.name",{"_index":1676,"title":{},"body":{"modules/RoleModule.html":{}}}],["apiroute.path",{"_index":907,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/RoleService.html":{}}}],["apiroute:14",{"_index":963,"title":{},"body":{"classes/IApiRoute.html":{}}}],["apiroute:24",{"_index":962,"title":{},"body":{"classes/IApiRoute.html":{}}}],["apiroutedocument",{"_index":176,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apiroutedto",{"_index":177,"title":{"classes/ApiRouteDto.html":{}},"body":{"classes/ApiRouteDto.html":{},"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["apiroutemodel",{"_index":1685,"title":{},"body":{"injectables/RoleService.html":{}}}],["apiroutes",{"_index":687,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/IRole.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["apiroutes.length",{"_index":1721,"title":{},"body":{"injectables/RoleService.html":{}}}],["apiroutes.some",{"_index":1728,"title":{},"body":{"injectables/RoleService.html":{}}}],["apirouteschema",{"_index":172,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"modules/RoleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{}}}],["apitags(apitagsenum.authentication",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(apitagsenum.default",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(apitagsenum.loan",{"_index":1221,"title":{},"body":{"controllers/LoanController.html":{}}}],["apitags(apitagsenum.role",{"_index":1625,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags(apitagsenum.sendchamp",{"_index":1786,"title":{},"body":{"controllers/SendChampController.html":{}}}],["apitags(apitagsenum.termii",{"_index":2008,"title":{},"body":{"controllers/TermiiController.html":{}}}],["apitags(apitagsenum.user",{"_index":2180,"title":{},"body":{"controllers/UserController.html":{}}}],["apitagsenum",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["app",{"_index":2441,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":184,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["application/json",{"_index":1872,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["applications",{"_index":2456,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":209,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appprops",{"_index":311,"title":{},"body":{"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appprops().accesstokentll",{"_index":553,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TokenService.html":{}}}],["appprops().adminemail",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["appprops().baseurl",{"_index":2083,"title":{},"body":{"injectables/TokenService.html":{}}}],["appprops().name",{"_index":1360,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"injectables/TokenService.html":{}}}],["appprops().otpexpirationseconds",{"_index":1448,"title":{},"body":{"injectables/OtpService.html":{}}}],["appprops().refreshtokentll",{"_index":549,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TokenService.html":{}}}],["approved",{"_index":2413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["appservice",{"_index":196,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":916,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"injectables/RoleGuard.html":{},"classes/SendOtpDto.html":{}}}],["args.constraints",{"_index":923,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/NotEqualToConstraint.html":{}}}],["args.object",{"_index":925,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{}}}],["args.property",{"_index":927,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/NotEqualToConstraint.html":{}}}],["args?.route?.path",{"_index":1650,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["args?.route?.stack[0]?.method",{"_index":1651,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["argumentshost",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arr1",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr1.filter((item",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr1.length",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr2",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr2.includes(item",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr2.length",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":16,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/CreateRoleDto.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["arraydifference",{"_index":2311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arraylike",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arraynotempty",{"_index":366,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateRoleDto.html":{}}}],["arraysequal",{"_index":2312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["asc",{"_index":872,"title":{},"body":{"classes/ErrorMessages.html":{},"miscellaneous/variables.html":{}}}],["assignroledto",{"_index":361,"title":{"classes/AssignRoleDto.html":{}},"body":{"classes/AssignRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["assignroles",{"_index":1591,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["assignroles(id",{"_index":1688,"title":{},"body":{"injectables/RoleService.html":{}}}],["assignroles(undefined",{"_index":1599,"title":{},"body":{"controllers/RoleController.html":{}}}],["asterisks",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":1886,"title":{},"body":{"injectables/SmsService.html":{}}}],["audience",{"_index":2084,"title":{},"body":{"injectables/TokenService.html":{}}}],["auth",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"injectables/OptionalAuthGuard.html":{},"coverage.html":{},"dependencies.html":{}}}],["auth.guard",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"injectables/RoleGuard.html":{}}}],["auth.guard.ts",{"_index":1163,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":1167,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth/auth.controller",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/dtos/auth.dto",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TokenService.html":{}}}],["auth/dtos/change",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/SetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["auth/dtos/google",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth/dtos/login.dto",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/dtos/refresh",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth/dtos/set",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth/dtos/update",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth/guards/jwt",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"injectables/RoleGuard.html":{}}}],["auth/guards/local",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/guards/role.guard",{"_index":527,"title":{},"body":{"modules/AuthModule.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["auth/schemas/refresh",{"_index":27,"title":{},"body":{"classes/AccessTokenPayload.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{}}}],["auth/services/auth.service",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/services/token.service",{"_index":529,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogoutInterceptor.html":{}}}],["auth/strategies/anonymous.strategy",{"_index":530,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/strategies/jwt.strategy",{"_index":531,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/strategies/local.strategy",{"_index":532,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":368,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":99,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["authenticated",{"_index":1394,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["authenticatewithgoogle",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticatewithgoogle(body",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":2403,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":1168,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/OptionalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1164,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1278,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authguard(['jwt",{"_index":1388,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["authmodule",{"_index":220,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2488,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1835,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["authpayload",{"_index":36,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"coverage.html":{}}}],["authservice",{"_index":455,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsuccessresponse",{"_index":47,"title":{"classes/AuthSuccessResponse.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["available",{"_index":1392,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["availableroutes",{"_index":1702,"title":{},"body":{"injectables/RoleService.html":{}}}],["availableroutes.findindex",{"_index":1768,"title":{},"body":{"injectables/RoleService.html":{}}}],["avoid",{"_index":1526,"title":{},"body":{"injectables/Owner.html":{}}}],["await",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"modules/UserModule.html":{}}}],["aws",{"_index":776,"title":{},"body":{"classes/EnvironmentVariables.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["awsconfig",{"_index":1307,"title":{},"body":{"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["axios",{"_index":1794,"title":{},"body":{"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/TermiiService.html":{},"dependencies.html":{}}}],["axiosrequestconfig",{"_index":1836,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["backers",{"_index":2483,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/RoleService.html":{}}}],["badrequestexception('invalid",{"_index":960,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/OtpService.html":{}}}],["badrequestexception('please",{"_index":1506,"title":{},"body":{"injectables/OtpService.html":{}}}],["badrequestexception('role",{"_index":1763,"title":{},"body":{"injectables/RoleService.html":{}}}],["badrequestexception('unhandled",{"_index":1868,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["badrequestexception((error",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(errormessages.already_verified_otp",{"_index":1502,"title":{},"body":{"injectables/OtpService.html":{}}}],["badrequestexception(errormessages.empty_payload",{"_index":1547,"title":{},"body":{"classes/PayloadExistsPipe.html":{}}}],["badrequestexception(errormessages.expired_otp_code",{"_index":1499,"title":{},"body":{"injectables/OtpService.html":{}}}],["badrequestexception(errormessages.otp_not_sent",{"_index":1503,"title":{},"body":{"injectables/OtpService.html":{}}}],["badrequestexception(errormessages.otpcodemismatch(body.value",{"_index":1501,"title":{},"body":{"injectables/OtpService.html":{}}}],["badrequestexception(errormessages.request_otp_code",{"_index":1498,"title":{},"body":{"injectables/OtpService.html":{}}}],["badrequestexception(errormessages.user_not_found",{"_index":1510,"title":{},"body":{"injectables/OtpService.html":{}}}],["balance",{"_index":1953,"title":{},"body":{"injectables/SmsService.html":{},"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["base64",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64').tostring('ascii",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseoptions",{"_index":2040,"title":{},"body":{"injectables/TokenService.html":{}}}],["bcryptjs",{"_index":2200,"title":{},"body":{"modules/UserModule.html":{},"dependencies.html":{}}}],["bearer",{"_index":40,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["before",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blocked",{"_index":1077,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["blockuser",{"_index":2167,"title":{},"body":{"controllers/UserController.html":{}}}],["blockuser(@param",{"_index":2186,"title":{},"body":{"controllers/UserController.html":{}}}],["blockuser(undefined",{"_index":2170,"title":{},"body":{"controllers/UserController.html":{}}}],["body",{"_index":353,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendMailPayload.html":{},"controllers/TermiiController.html":{}}}],["body.channel",{"_index":1472,"title":{},"body":{"injectables/OtpService.html":{}}}],["body.code",{"_index":1500,"title":{},"body":{"injectables/OtpService.html":{}}}],["body.name",{"_index":1745,"title":{},"body":{"injectables/RoleService.html":{}}}],["body.roles",{"_index":1758,"title":{},"body":{"injectables/RoleService.html":{}}}],["body.type",{"_index":1473,"title":{},"body":{"injectables/OtpService.html":{}}}],["body.value",{"_index":1471,"title":{},"body":{"injectables/OtpService.html":{}}}],["body?.apiroutes?.length",{"_index":1762,"title":{},"body":{"injectables/RoleService.html":{}}}],["body?.name",{"_index":1764,"title":{},"body":{"injectables/RoleService.html":{}}}],["body?.name?.tolowercase",{"_index":1765,"title":{},"body":{"injectables/RoleService.html":{}}}],["boolean",{"_index":145,"title":{},"body":{"classes/ApiResponse.html":{},"classes/CreateUserDto.html":{},"classes/FieldsMatchConstraint.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/RefreshToken.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":1400,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["break",{"_index":1147,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"injectables/OtpService.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/TermiiService.html":{}}}],["browse",{"_index":2498,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2496,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(base64",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(json.stringify(payload)).tostring('base64",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":2451,"title":{},"body":{"index.html":{}}}],["buildresponsepayload",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["buildresponsepayload(accesstoken",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["business_id",{"_index":1799,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["business_name",{"_index":1808,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["bypass",{"_index":1043,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["bypass_response_transform",{"_index":1025,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bypassresponsetransform",{"_index":2289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":656,"title":{},"body":{"injectables/CacheService.html":{}}}],["cachekeys",{"_index":2276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cachemanager",{"_index":650,"title":{},"body":{"injectables/CacheService.html":{}}}],["cachemodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["cacheservice",{"_index":645,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["callhandler",{"_index":1028,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["camelcasetoreadable",{"_index":2326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["can_set_role",{"_index":1070,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{}}}],["canactivate",{"_index":1165,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RoleGuard.html":{}}}],["canactivate(context",{"_index":1166,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RoleGuard.html":{}}}],["cancelled",{"_index":2415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["capital",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1144,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/TermiiService.html":{}}}],["catch",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/IsChannelValueConstraint.html":{},"modules/MailModule.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["catch((error",{"_index":1369,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["catch(exception",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catcherror",{"_index":1845,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["catcherror(handleaxioserror",{"_index":1852,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["change_password",{"_index":2419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changed",{"_index":1978,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["changeorigin",{"_index":1561,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["changepassword",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(@body",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(body",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":385,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/LoginDto.html":{},"classes/SetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["changepassworddto:15",{"_index":1879,"title":{},"body":{"classes/SetPasswordDto.html":{}}}],["changepassworddto:22",{"_index":1878,"title":{},"body":{"classes/SetPasswordDto.html":{}}}],["channel",{"_index":990,"title":{},"body":{"classes/IOtp.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"injectables/TermiiService.html":{},"classes/VerifyOtpDto.html":{}}}],["characters",{"_index":847,"title":{},"body":{"classes/ErrorMessages.html":{},"miscellaneous/variables.html":{}}}],["charge.completed",{"_index":1865,"title":{},"body":{"injectables/SendChampService.html":{},"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["check",{"_index":339,"title":{},"body":{"injectables/AppService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/TokenService.html":{}}}],["checks",{"_index":357,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["class",{"_index":0,"title":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"classes/AssignRoleDto.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"classes/LoginDto.html":{},"classes/MailOtpDto.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"classes/SendOtpDto.html":{},"classes/SetPasswordDto.html":{},"classes/SuccessMessages.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"classes/AssignRoleDto.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"classes/LoginDto.html":{},"classes/MailOtpDto.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"classes/SendOtpDto.html":{},"classes/SetPasswordDto.html":{},"classes/SuccessMessages.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"overview.html":{}}}],["clientsession",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{}}}],["cluster_appmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_googlemodule",{"_index":946,"title":{},"body":{"modules/GoogleModule.html":{},"overview.html":{}}}],["cluster_googlemodule_exports",{"_index":948,"title":{},"body":{"modules/GoogleModule.html":{},"overview.html":{}}}],["cluster_googlemodule_providers",{"_index":947,"title":{},"body":{"modules/GoogleModule.html":{},"overview.html":{}}}],["cluster_loanmodule",{"_index":1232,"title":{},"body":{"modules/LoanModule.html":{},"overview.html":{}}}],["cluster_loanmodule_providers",{"_index":1233,"title":{},"body":{"modules/LoanModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1303,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":1305,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1304,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_otpmodule",{"_index":1412,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_exports",{"_index":1413,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_imports",{"_index":1415,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_providers",{"_index":1414,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1669,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1671,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":1670,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":1672,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_sendchampmodule",{"_index":1811,"title":{},"body":{"modules/SendChampModule.html":{},"overview.html":{}}}],["cluster_sendchampmodule_exports",{"_index":1813,"title":{},"body":{"modules/SendChampModule.html":{},"overview.html":{}}}],["cluster_sendchampmodule_providers",{"_index":1812,"title":{},"body":{"modules/SendChampModule.html":{},"overview.html":{}}}],["cluster_smsmodule",{"_index":1880,"title":{},"body":{"modules/SmsModule.html":{},"overview.html":{}}}],["cluster_smsmodule_exports",{"_index":1882,"title":{},"body":{"modules/SmsModule.html":{},"overview.html":{}}}],["cluster_smsmodule_imports",{"_index":1883,"title":{},"body":{"modules/SmsModule.html":{}}}],["cluster_smsmodule_providers",{"_index":1881,"title":{},"body":{"modules/SmsModule.html":{},"overview.html":{}}}],["cluster_termiimodule",{"_index":2010,"title":{},"body":{"modules/TermiiModule.html":{},"overview.html":{}}}],["cluster_termiimodule_exports",{"_index":2011,"title":{},"body":{"modules/TermiiModule.html":{},"overview.html":{}}}],["cluster_termiimodule_providers",{"_index":2012,"title":{},"body":{"modules/TermiiModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2191,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2193,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2192,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2194,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":83,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ErrorMessages.html":{},"classes/IOtp.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"classes/VerifyOtpDto.html":{}}}],["color",{"_index":837,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["columnname",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":785,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["configmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":102,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{}}}],["configservice.get('access_token_secret",{"_index":121,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('database_url",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mail_from",{"_index":1318,"title":{},"body":{"modules/MailModule.html":{}}}],["configure",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configuring",{"_index":1333,"title":{},"body":{"modules/MailModule.html":{}}}],["confirm",{"_index":666,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ErrorMessages.html":{},"classes/SetPasswordDto.html":{}}}],["confirmpassword",{"_index":663,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/SetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["connect",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["connection",{"_index":302,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleService.html":{}}}],["console.log(json.stringify(headers",{"_index":1788,"title":{},"body":{"controllers/SendChampController.html":{},"controllers/TermiiController.html":{}}}],["const",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiRoute.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":1963,"title":{},"body":{"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["constraints",{"_index":933,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["constructor(@inject(cache_manager",{"_index":657,"title":{},"body":{"injectables/CacheService.html":{}}}],["constructor(cachemanager",{"_index":648,"title":{},"body":{"injectables/CacheService.html":{}}}],["constructor(configservice",{"_index":101,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(connection",{"_index":301,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{}}}],["constructor(httpservice",{"_index":1826,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["constructor(mailerservice",{"_index":1345,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(mailservice",{"_index":1896,"title":{},"body":{"injectables/SmsService.html":{}}}],["constructor(model",{"_index":1240,"title":{},"body":{"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{}}}],["constructor(private",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"interfaces/IResponse.html":{},"controllers/LoanController.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{}}}],["constructor(readonly",{"_index":114,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["constructor(reflector",{"_index":2127,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["constructor(roleservice",{"_index":1644,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["constructor(tokenservice",{"_index":1292,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["constructor(userservice",{"_index":1280,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["consumer",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(proxymiddleware).forroutes",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":1873,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["context",{"_index":1038,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"injectables/RoleGuard.html":{},"interfaces/SendMailPayload.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["context.getargs()[0",{"_index":1649,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["context.getclass",{"_index":1046,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["context.gethandler",{"_index":1045,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["context.switchtohttp",{"_index":1041,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["continue",{"_index":1730,"title":{},"body":{"injectables/RoleService.html":{}}}],["controller",{"_index":183,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/roles",{"_index":1624,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('auth",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('loan",{"_index":1220,"title":{},"body":{"controllers/LoanController.html":{}}}],["controller('sendchamp",{"_index":1785,"title":{},"body":{"controllers/SendChampController.html":{}}}],["controller('termii",{"_index":2007,"title":{},"body":{"controllers/TermiiController.html":{}}}],["controller('user",{"_index":2179,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/SendChampController.html":{},"modules/SendChampModule.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["copy",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["costofonemessage",{"_index":1887,"title":{},"body":{"injectables/SmsService.html":{}}}],["count",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countpipeline",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countpipeline.push",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countrycode",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":2252,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1189,"title":{},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{},"classes/UpdateLoanDto.html":{}}}],["create(@body",{"_index":1222,"title":{},"body":{"controllers/LoanController.html":{}}}],["create(body",{"_index":1243,"title":{},"body":{"injectables/LoanService.html":{}}}],["create(createloandto",{"_index":1194,"title":{},"body":{"controllers/LoanController.html":{}}}],["createaccesstokenfromrefreshtoken",{"_index":2041,"title":{},"body":{"injectables/TokenService.html":{}}}],["createaccesstokenfromrefreshtoken(refreshtoken",{"_index":2056,"title":{},"body":{"injectables/TokenService.html":{}}}],["created_at",{"_index":1801,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["createdat",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat,desc",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdby",{"_index":1261,"title":{},"body":{"injectables/LoanService.html":{},"injectables/Owner.html":{},"injectables/RoleService.html":{}}}],["createloandto",{"_index":682,"title":{"classes/CreateLoanDto.html":{}},"body":{"classes/CreateLoanDto.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"classes/UpdateLoanDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproxymiddleware",{"_index":1554,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["createrole",{"_index":1592,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["createrole(@body",{"_index":1629,"title":{},"body":{"controllers/RoleController.html":{}}}],["createrole(body",{"_index":1602,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["createroledto",{"_index":685,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":412,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["createuserfromgoogle",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserfromgoogle(profile",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":840,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["credit",{"_index":1927,"title":{},"body":{"injectables/SmsService.html":{}}}],["ctx",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":1992,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["d",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":127,"title":{},"body":{"classes/ApiResponse.html":{},"interfaces/IResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"injectables/RoleService.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TransformResponseInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data.map((item",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.map((role",{"_index":1756,"title":{},"body":{"injectables/RoleService.html":{}}}],["data.map(transformdoc",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_url",{"_index":742,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datapromise",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":45,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"interfaces/IRefreshToken.html":{},"injectables/OtpService.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["date(date",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(format(dateobj",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(updatedat",{"_index":1495,"title":{},"body":{"injectables/OtpService.html":{}}}],["dateobj",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daterangefilter",{"_index":2313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["dd",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debugger",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["declarations",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decodeaccesstoken",{"_index":2042,"title":{},"body":{"injectables/TokenService.html":{}}}],["decodeaccesstoken(accesstoken",{"_index":2058,"title":{},"body":{"injectables/TokenService.html":{}}}],["decodebase64",{"_index":2299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decoded",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decodedaccesstoken",{"_index":1299,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["decoderefreshtoken",{"_index":2043,"title":{},"body":{"injectables/TokenService.html":{}}}],["decoderefreshtoken(refreshtoken",{"_index":2060,"title":{},"body":{"injectables/TokenService.html":{}}}],["decorators",{"_index":154,"title":{},"body":{"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"classes/MailOtpDto.html":{},"classes/MobileNumberDto.html":{},"classes/Otp.html":{},"injectables/Owner.html":{},"classes/PaginationDto.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"classes/SendOtpDto.html":{},"classes/SetPasswordDto.html":{},"controllers/TermiiController.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{}}}],["default",{"_index":308,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ErrorMessages.html":{},"injectables/GoogleService.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/MailService.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/RefreshToken.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":912,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["defaultmessage(args",{"_index":913,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/NotEqualToConstraint.html":{}}}],["defaults",{"_index":1322,"title":{},"body":{"modules/MailModule.html":{}}}],["defaultstrategy",{"_index":540,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"classes/SetPasswordDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{}}}],["delay",{"_index":1888,"title":{},"body":{"injectables/SmsService.html":{}}}],["delete",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"miscellaneous/variables.html":{}}}],["delete('/me",{"_index":510,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('/me')@useguards(jwtauthguard",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(':id",{"_index":1204,"title":{},"body":{"controllers/LoanController.html":{}}}],["delete_account",{"_index":2422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleteallforuser",{"_index":1422,"title":{},"body":{"injectables/OtpService.html":{}}}],["deleteallforuser(user",{"_index":1431,"title":{},"body":{"injectables/OtpService.html":{}}}],["deleteprofile",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["deleteprofile(@getuser",{"_index":511,"title":{},"body":{"controllers/AuthController.html":{}}}],["deleteprofile(user",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["deleterefreshtoken",{"_index":2044,"title":{},"body":{"injectables/TokenService.html":{}}}],["deleterefreshtoken(refreshtokenid",{"_index":2062,"title":{},"body":{"injectables/TokenService.html":{}}}],["deleterefreshtokenbyuserid",{"_index":2045,"title":{},"body":{"injectables/TokenService.html":{}}}],["deleterefreshtokenbyuserid(userid",{"_index":2064,"title":{},"body":{"injectables/TokenService.html":{}}}],["deleteresult",{"_index":1455,"title":{},"body":{"injectables/OtpService.html":{}}}],["deleteusedotp",{"_index":1423,"title":{},"body":{"injectables/OtpService.html":{}}}],["deleteusedotp(body",{"_index":1433,"title":{},"body":{"injectables/OtpService.html":{}}}],["dependencies",{"_index":211,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1527,"title":{},"body":{"injectables/Owner.html":{}}}],["deprecated",{"_index":2235,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["derivate",{"_index":1115,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["desc",{"_index":873,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["description",{"_index":688,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/IRole.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":2405,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["development",{"_index":1925,"title":{},"body":{"injectables/SmsService.html":{},"index.html":{}}}],["digits",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dir",{"_index":1325,"title":{},"body":{"modules/MailModule.html":{}}}],["directly",{"_index":1529,"title":{},"body":{"injectables/Owner.html":{}}}],["disbursed",{"_index":2416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dnd",{"_index":1804,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["doc",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1572,"title":{},"body":{"injectables/RedirectMiddleware.html":{},"coverage.html":{}}}],["documentmeta",{"_index":165,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["don't",{"_index":777,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/Owner.html":{},"injectables/SmsService.html":{}}}],["down",{"_index":345,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["dropdownoption",{"_index":728,"title":{"classes/DropDownOption.html":{}},"body":{"classes/DropDownOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dto/create",{"_index":1253,"title":{},"body":{"injectables/LoanService.html":{}}}],["dto/update",{"_index":1254,"title":{},"body":{"injectables/LoanService.html":{}}}],["duplicate",{"_index":86,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["e",{"_index":2114,"title":{},"body":{"injectables/TokenService.html":{}}}],["e2e",{"_index":2472,"title":{},"body":{"index.html":{}}}],["each",{"_index":367,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateRoleDto.html":{}}}],["easy",{"_index":1118,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["efficient",{"_index":2452,"title":{},"body":{"index.html":{}}}],["eight",{"_index":846,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["email",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/EmailDto.html":{},"classes/ErrorMessages.html":{},"classes/ILoan.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["email_verified",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailaddress",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailaddress.split",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emaildto",{"_index":718,"title":{"classes/EmailDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"coverage.html":{}}}],["emailorphone",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailorphonenumber",{"_index":882,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/SuccessMessages.html":{}}}],["emailverified",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{},"classes/IUser.html":{},"classes/User.html":{}}}],["empty",{"_index":825,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["empty_payload",{"_index":797,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["emptyobject",{"_index":2314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":1149,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["enableimplicitconversion",{"_index":786,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["encodebase64",{"_index":2300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["encoded",{"_index":2081,"title":{},"body":{"injectables/TokenService.html":{}}}],["endofday(maxdate",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":977,"title":{},"body":{"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/SmsService.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["enumerations",{"_index":2391,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumobject",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumvalue",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumvaluesasarray",{"_index":981,"title":{},"body":{"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumvaluesasarray(enumobject).filter((item",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumvaluesasarray(otpchannelenum",{"_index":984,"title":{},"body":{"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/Loan.html":{},"classes/Otp.html":{}}}],["enumvaluesasarray(otptypeenum",{"_index":1008,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{}}}],["enumvaluesexcept",{"_index":2307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SmsService.html":{}}}],["environmentenum",{"_index":760,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/SmsService.html":{},"miscellaneous/enumerations.html":{}}}],["environmentenum.prod",{"_index":1928,"title":{},"body":{"injectables/SmsService.html":{}}}],["environmentvariables",{"_index":105,"title":{"classes/EnvironmentVariables.html":{}},"body":{"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/EnvironmentVariables.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["equal",{"_index":1384,"title":{},"body":{"classes/NotEqualToConstraint.html":{}}}],["equal.validation.ts",{"_index":1380,"title":{},"body":{"classes/NotEqualToConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["equal.validation.ts:11",{"_index":1382,"title":{},"body":{"classes/NotEqualToConstraint.html":{}}}],["equal.validation.ts:17",{"_index":1381,"title":{},"body":{"classes/NotEqualToConstraint.html":{}}}],["error",{"_index":87,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/IsChannelValueConstraint.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["error('provide",{"_index":1146,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["error(errorenum.insufficient_balance",{"_index":1946,"title":{},"body":{"injectables/SmsService.html":{}}}],["error(errormessages.invalid_id",{"_index":2226,"title":{},"body":{"injectables/ValidIdConstraint.html":{}}}],["error(errormessages.provide_valid_mobile_number",{"_index":2237,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["error(errormessages.sort_order_error",{"_index":1970,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["error(errormessages.sortfield(fields",{"_index":1972,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["error(errors.tostring",{"_index":792,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error).message",{"_index":1153,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{}}}],["error).stack",{"_index":1334,"title":{},"body":{"modules/MailModule.html":{}}}],["error)?.message",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{}}}],["error.message",{"_index":2238,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["error?.message",{"_index":1955,"title":{},"body":{"injectables/SmsService.html":{}}}],["error?.response",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error?.response?.data",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorenum",{"_index":1921,"title":{},"body":{"injectables/SmsService.html":{},"miscellaneous/enumerations.html":{}}}],["errorenum.insufficient_balance",{"_index":1950,"title":{},"body":{"injectables/SmsService.html":{}}}],["errormessage",{"_index":1134,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["errormessages",{"_index":670,"title":{"classes/ErrorMessages.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/EmailDto.html":{},"classes/ErrorMessages.html":{},"classes/MobileNumberDto.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/RoleService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TokenService.html":{},"classes/UpdatePasswordDto.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"coverage.html":{}}}],["errormessages.alreadyexist(role.name",{"_index":1744,"title":{},"body":{"injectables/RoleService.html":{}}}],["errormessages.expired_refresh_token",{"_index":2115,"title":{},"body":{"injectables/TokenService.html":{}}}],["errormessages.invalid_otp_code",{"_index":2248,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["errormessages.invalid_password",{"_index":680,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["errormessages.invalid_refresh_token",{"_index":2107,"title":{},"body":{"injectables/TokenService.html":{}}}],["errormessages.malformed_refresh_token",{"_index":2109,"title":{},"body":{"injectables/TokenService.html":{}}}],["errormessages.provide_valid_email",{"_index":737,"title":{},"body":{"classes/EmailDto.html":{}}}],["errormessages.provide_valid_mobile_number",{"_index":1377,"title":{},"body":{"classes/MobileNumberDto.html":{}}}],["errormessages.routedoesnotexist(apiroute",{"_index":1769,"title":{},"body":{"injectables/RoleService.html":{}}}],["errormessages.useralreadyexist(body.value",{"_index":1514,"title":{},"body":{"injectables/OtpService.html":{}}}],["errors",{"_index":787,"title":{},"body":{"classes/EnvironmentVariables.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["errors.length",{"_index":790,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["event",{"_index":1832,"title":{},"body":{"injectables/SendChampService.html":{},"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["event.data",{"_index":1867,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["event.event",{"_index":1864,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["example",{"_index":39,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/CreateRoleDto.html":{},"classes/IApiRoute.html":{},"classes/IRole.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"classes/VerifyOtpDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["except",{"_index":1396,"title":{},"body":{"injectables/OptionalAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exception",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":79,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":82,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception?.code",{"_index":84,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception?.response?.error",{"_index":92,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exclude",{"_index":1111,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["exclude()@apihideproperty()@prop({select",{"_index":1101,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["exec",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":1029,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogoutInterceptor.html":{},"injectables/RoleGuard.html":{},"injectables/TransformResponseInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":904,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["existing",{"_index":1463,"title":{},"body":{"injectables/OtpService.html":{}}}],["existingrole",{"_index":1746,"title":{},"body":{"injectables/RoleService.html":{}}}],["existingrole.save",{"_index":1751,"title":{},"body":{"injectables/RoleService.html":{}}}],["existingrole?.name?.tolowercase",{"_index":1766,"title":{},"body":{"injectables/RoleService.html":{}}}],["existingrole?.updatedby",{"_index":1750,"title":{},"body":{"injectables/RoleService.html":{}}}],["existinguser",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser.id",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":90,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ErrorMessages.html":{},"injectables/OtpService.html":{}}}],["exists.validation.ts",{"_index":1542,"title":{},"body":{"classes/PayloadExistsPipe.html":{},"coverage.html":{}}}],["exists.validation.ts:6",{"_index":1545,"title":{},"body":{"classes/PayloadExistsPipe.html":{}}}],["exits",{"_index":1459,"title":{},"body":{"injectables/OtpService.html":{}}}],["expirationdate",{"_index":1515,"title":{},"body":{"injectables/OtpService.html":{}}}],["expirationminutes",{"_index":1337,"title":{},"body":{"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"interfaces/SendMailPayload.html":{}}}],["expire",{"_index":1480,"title":{},"body":{"injectables/OtpService.html":{}}}],["expireafterseconds",{"_index":548,"title":{},"body":{"modules/AuthModule.html":{}}}],["expired",{"_index":827,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/OtpService.html":{}}}],["expired_otp_code",{"_index":798,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["expired_refresh_token",{"_index":799,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["expires",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{},"injectables/TokenService.html":{}}}],["expires.settime",{"_index":1496,"title":{},"body":{"injectables/OtpService.html":{}}}],["expires.settime(expires.gettime",{"_index":2126,"title":{},"body":{"injectables/TokenService.html":{}}}],["expiresat",{"_index":46,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{}}}],["expiresin",{"_index":43,"title":{},"body":{"classes/AccessTokenPayload.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{}}}],["expiresin.split('ms')[0",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinnumber",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["explicity",{"_index":779,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{}}}],["exports",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expr",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express",{"_index":1296,"title":{},"body":{"injectables/LogoutInterceptor.html":{},"injectables/RedirectMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AccessTokenPayload.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersDto.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/MessageDto.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"injectables/RoleGuard.html":{},"classes/SetPasswordDto.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyOtpDto.html":{}}}],["external",{"_index":1563,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["extractjwt",{"_index":110,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LogoutInterceptor.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":117,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(request",{"_index":1298,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["fail",{"_index":358,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["failed",{"_index":1668,"title":{},"body":{"injectables/RoleGuard.html":{},"injectables/SmsService.html":{}}}],["false",{"_index":119,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"modules/AuthModule.html":{},"classes/EnvironmentVariables.html":{},"classes/FieldsMatchConstraint.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/RefreshToken.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["false'].includes(transformed",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["family_name",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["fastbeep",{"_index":2035,"title":{},"body":{"injectables/TermiiService.html":{}}}],["female",{"_index":2410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["field",{"_index":901,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["fieldname",{"_index":1964,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["fields",{"_index":887,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/SortQueryConstraint.html":{}}}],["fields.includes(fieldname",{"_index":1971,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["fields.join",{"_index":902,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["fields.length",{"_index":900,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["fieldsmatch",{"_index":674,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/FieldsMatchConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fieldsmatch('password",{"_index":681,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["fieldsmatch(property",{"_index":2439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fieldsmatchconstraint",{"_index":908,"title":{"classes/FieldsMatchConstraint.html":{}},"body":{"classes/FieldsMatchConstraint.html":{},"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{}}}],["filterquery",{"_index":1258,"title":{},"body":{"injectables/LoanService.html":{}}}],["filters",{"_index":1262,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["filters.title",{"_index":1264,"title":{},"body":{"injectables/LoanService.html":{}}}],["finally",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["findbyid",{"_index":2046,"title":{},"body":{"injectables/TokenService.html":{}}}],["findbyid(id",{"_index":2066,"title":{},"body":{"injectables/TokenService.html":{}}}],["findone",{"_index":1190,"title":{},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{}}}],["findone(@param",{"_index":1224,"title":{},"body":{"controllers/LoanController.html":{}}}],["findone(id",{"_index":1245,"title":{},"body":{"injectables/LoanService.html":{}}}],["findone(undefined",{"_index":1196,"title":{},"body":{"controllers/LoanController.html":{}}}],["findrolebyname",{"_index":1678,"title":{},"body":{"injectables/RoleService.html":{}}}],["findrolebyname(name",{"_index":1691,"title":{},"body":{"injectables/RoleService.html":{}}}],["first",{"_index":1116,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["firstchar",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstchar.touppercase",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstname",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/ILoan.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"classes/User.html":{}}}],["firstnchars",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstnchars.length",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstpart",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstpart.charat(firstpart.length",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstpart.length",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstpart.substring(0",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fns",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["forbiddenexception",{"_index":1648,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["format(new",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formatdate",{"_index":2302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forwardref",{"_index":535,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"injectables/TokenService.html":{},"modules/UserModule.html":{}}}],["found",{"_index":866,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["framework",{"_index":2450,"title":{},"body":{"index.html":{}}}],["full",{"_index":1772,"title":{},"body":{"injectables/RoleService.html":{}}}],["fullname",{"_index":1078,"title":{},"body":{"classes/IUser.html":{},"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["function",{"_index":780,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"injectables/ProxyMiddleware.html":{},"classes/SendOtpDto.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"coverage.html":{}}}],["functions",{"_index":2423,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genderenum",{"_index":2396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generate",{"_index":1460,"title":{},"body":{"injectables/OtpService.html":{}}}],["generateaccesstoken",{"_index":2047,"title":{},"body":{"injectables/TokenService.html":{}}}],["generateaccesstoken(user",{"_index":2068,"title":{},"body":{"injectables/TokenService.html":{}}}],["generateexpires",{"_index":2048,"title":{},"body":{"injectables/TokenService.html":{}}}],["generaterandomnumbers",{"_index":1452,"title":{},"body":{"injectables/OtpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomstrings",{"_index":2327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterefreshtoken",{"_index":2049,"title":{},"body":{"injectables/TokenService.html":{}}}],["generaterefreshtoken(userid",{"_index":2071,"title":{},"body":{"injectables/TokenService.html":{}}}],["generic",{"_index":1997,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["gensalt",{"_index":2198,"title":{},"body":{"modules/UserModule.html":{}}}],["gensalt(10",{"_index":2213,"title":{},"body":{"modules/UserModule.html":{}}}],["get'})@isstring",{"_index":180,"title":{},"body":{"classes/ApiRouteDto.html":{}}}],["get'})@prop({required",{"_index":156,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{}}}],["get('/')@paginatedmodel(iloan",{"_index":1200,"title":{},"body":{"controllers/LoanController.html":{}}}],["get('/')@paginatedmodel(irole",{"_index":1605,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/')@paginatedmodel(user",{"_index":2174,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:id",{"_index":1639,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/:id')@apiokresponse({description",{"_index":1608,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/me",{"_index":502,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/me')@useguards(jwtauthguard",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/routes",{"_index":1627,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/routes')@apiokresponse({description",{"_index":1596,"title":{},"body":{"controllers/RoleController.html":{}}}],["get(':id",{"_index":1197,"title":{},"body":{"controllers/LoanController.html":{}}}],["get('health",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["get('readiness",{"_index":206,"title":{},"body":{"controllers/AppController.html":{}}}],["get(key",{"_index":651,"title":{},"body":{"injectables/CacheService.html":{}}}],["get(this.termiiurl",{"_index":2028,"title":{},"body":{"injectables/TermiiService.html":{}}}],["getallowedorigins",{"_index":2259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getallroles",{"_index":1191,"title":{},"body":{"controllers/LoanController.html":{},"controllers/RoleController.html":{}}}],["getallroles(@query",{"_index":1230,"title":{},"body":{"controllers/LoanController.html":{},"controllers/RoleController.html":{}}}],["getallroles(query",{"_index":1199,"title":{},"body":{"controllers/LoanController.html":{},"controllers/RoleController.html":{}}}],["getbalance",{"_index":1821,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["getbyid",{"_index":1679,"title":{},"body":{"injectables/RoleService.html":{}}}],["getbyid(id",{"_index":1693,"title":{},"body":{"injectables/RoleService.html":{}}}],["getexpirationdate",{"_index":1424,"title":{},"body":{"injectables/OtpService.html":{}}}],["getexpirationdate(updatedat",{"_index":1435,"title":{},"body":{"injectables/OtpService.html":{}}}],["gethello",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["getinternationalphonenumber",{"_index":1138,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/MobileNumberDto.html":{},"classes/SendOtpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getinternationalphonenumber(value",{"_index":1160,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/MobileNumberDto.html":{},"classes/SendOtpDto.html":{}}}],["getnow",{"_index":2303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getprofile",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@getuser",{"_index":503,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(user",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["getreadablestream",{"_index":2330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getreadiness",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["getrolebyid",{"_index":1593,"title":{},"body":{"controllers/RoleController.html":{}}}],["getrolebyid(@param",{"_index":1640,"title":{},"body":{"controllers/RoleController.html":{}}}],["getrolebyid(undefined",{"_index":1607,"title":{},"body":{"controllers/RoleController.html":{}}}],["getschemapath(model",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstoredtokenfromrefreshtokenpayload",{"_index":2050,"title":{},"body":{"injectables/TokenService.html":{}}}],["getstoredtokenfromrefreshtokenpayload(payload",{"_index":2073,"title":{},"body":{"injectables/TokenService.html":{}}}],["getstoredvalidrefreshtokenbyid",{"_index":2051,"title":{},"body":{"injectables/TokenService.html":{}}}],["getstoredvalidrefreshtokenbyid(refreshtokenid",{"_index":2075,"title":{},"body":{"injectables/TokenService.html":{}}}],["getting",{"_index":2446,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuserfromrefreshtokenpayload",{"_index":2052,"title":{},"body":{"injectables/TokenService.html":{}}}],["getuserfromrefreshtokenpayload(payload",{"_index":2077,"title":{},"body":{"injectables/TokenService.html":{}}}],["getuserprofile",{"_index":953,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getuserprofile(idtoken",{"_index":954,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getusers",{"_index":2168,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(@query",{"_index":2182,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(query",{"_index":2173,"title":{},"body":{"controllers/UserController.html":{}}}],["getusersdto",{"_index":934,"title":{"classes/GetUsersDto.html":{}},"body":{"classes/GetUsersDto.html":{},"coverage.html":{}}}],["given_name",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["global",{"_index":1675,"title":{},"body":{"modules/RoleModule.html":{}}}],["god",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["good",{"_index":328,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["google",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"dependencies.html":{}}}],["google.service",{"_index":950,"title":{},"body":{"modules/GoogleModule.html":{}}}],["google/google.module",{"_index":533,"title":{},"body":{"modules/AuthModule.html":{}}}],["google/google.service",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["googlelogin",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["googlelogin(@headers",{"_index":482,"title":{},"body":{"controllers/AuthController.html":{}}}],["googlelogin(headers",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["googlelogindto",{"_index":397,"title":{"classes/GoogleLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GoogleLoginDto.html":{},"coverage.html":{}}}],["googlemodule",{"_index":519,"title":{"modules/GoogleModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules.html":{},"overview.html":{}}}],["googleservice",{"_index":564,"title":{"injectables/GoogleService.html":{}},"body":{"injectables/AuthService.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":2479,"title":{},"body":{"index.html":{}}}],["gte",{"_index":2117,"title":{},"body":{"injectables/TokenService.html":{},"miscellaneous/variables.html":{}}}],["guard",{"_index":1667,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["guard.ts",{"_index":1387,"title":{},"body":{"injectables/OptionalAuthGuard.html":{},"coverage.html":{}}}],["handleaxioserror",{"_index":1843,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars",{"_index":2376,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1315,"title":{},"body":{"modules/MailModule.html":{}}}],["hash",{"_index":2214,"title":{},"body":{"modules/UserModule.html":{},"classes/VerifyOtpQueryDto.html":{}}}],["hashsync",{"_index":2199,"title":{},"body":{"modules/UserModule.html":{}}}],["hashsync(this.password",{"_index":2215,"title":{},"body":{"modules/UserModule.html":{}}}],["hasnextpage",{"_index":144,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"miscellaneous/variables.html":{}}}],["haspreviouspage",{"_index":146,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{}}}],["headers['user",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{}}}],["healthcheck",{"_index":299,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["helmet",{"_index":2378,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1525,"title":{},"body":{"injectables/Owner.html":{},"index.html":{}}}],["hex",{"_index":836,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["hh:mm",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hour",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":1555,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"dependencies.html":{}}}],["httpcode",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{}}}],["httpcode(httpstatus.ok",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{}}}],["httpcode(httpstatus.ok)@get('health",{"_index":189,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode(httpstatus.ok)@get('readiness",{"_index":191,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcontext",{"_index":1040,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["httpcontext.getrequest",{"_index":1297,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["httpcontext.getresponse",{"_index":1042,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["httpexception",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpmodule",{"_index":1816,"title":{},"body":{"modules/SendChampModule.html":{},"modules/TermiiModule.html":{}}}],["https://api.sendchamp.com/api/v1",{"_index":1842,"title":{},"body":{"injectables/SendChampService.html":{}}}],["https://img.shields.io",{"_index":1560,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["https://nestjs.com",{"_index":2492,"title":{},"body":{"index.html":{}}}],["https://v3.api.termii.com/api",{"_index":2027,"title":{},"body":{"injectables/TermiiService.html":{}}}],["httpservice",{"_index":1827,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["httpstatus",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{}}}],["httpstatus.internal_server_error",{"_index":80,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatuscode",{"_index":1793,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["iapiroute",{"_index":174,"title":{"classes/IApiRoute.html":{}},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"coverage.html":{}}}],["id",{"_index":175,"title":{},"body":{"classes/ApiRoute.html":{},"classes/ErrorMessages.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"classes/Otp.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{}}}],["iddto",{"_index":1125,"title":{"classes/IdDto.html":{}},"body":{"classes/IdDto.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["identifier",{"_index":2253,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":944,"title":{},"body":{"classes/GoogleLoginDto.html":{},"injectables/GoogleService.html":{}}}],["ignoreexpiration",{"_index":118,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["iilloo10\\s]/g",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iloan",{"_index":964,"title":{"classes/ILoan.html":{}},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"coverage.html":{}}}],["images",{"_index":1559,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["implements",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/FieldsMatchConstraint.html":{},"interfaces/IResponse.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/LogoutInterceptor.html":{},"classes/NotEqualToConstraint.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TransformResponseInterceptor.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{}}}],["imports",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1574,"title":{},"body":{"injectables/RedirectMiddleware.html":{}}}],["infer",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{}}}],["inherited",{"_index":20,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/ApiResponse.html":{},"classes/GetUsersDto.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"injectables/RoleGuard.html":{},"classes/SetPasswordDto.html":{},"classes/VerifyOtpDto.html":{}}}],["inject",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"modules/MailModule.html":{},"injectables/OtpService.html":{},"injectables/TokenService.html":{}}}],["inject(forwardref",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{},"injectables/TokenService.html":{}}}],["injectable",{"_index":93,"title":{"injectables/AnonymousStrategy.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/GoogleService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"injectables/OptionalAuthGuard.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}},"body":{"injectables/AnonymousStrategy.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/GoogleService.html":{},"interfaces/IResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"injectables/OptionalAuthGuard.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"coverage.html":{}}}],["injectables",{"_index":95,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/GoogleService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"injectables/OptionalAuthGuard.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"overview.html":{}}}],["injectconnection",{"_index":318,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleService.html":{}}}],["injection",{"_index":1528,"title":{},"body":{"injectables/Owner.html":{}}}],["injectmodel",{"_index":1257,"title":{},"body":{"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{}}}],["injectmodel(apiroute.name",{"_index":1712,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectmodel(loan.name",{"_index":1259,"title":{},"body":{"injectables/LoanService.html":{}}}],["injectmodel(otp.name",{"_index":1456,"title":{},"body":{"injectables/OtpService.html":{}}}],["injectmodel(refreshtoken.name",{"_index":2090,"title":{},"body":{"injectables/TokenService.html":{}}}],["injectmodel(role.name",{"_index":1711,"title":{},"body":{"injectables/RoleService.html":{}}}],["insensitive",{"_index":1771,"title":{},"body":{"injectables/RoleService.html":{}}}],["insert",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserted",{"_index":1714,"title":{},"body":{"injectables/RoleService.html":{}}}],["inserted.map(this.mapapiroutes",{"_index":1716,"title":{},"body":{"injectables/RoleService.html":{}}}],["installation",{"_index":2461,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2463,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/TokenService.html":{}}}],["insufficient",{"_index":1952,"title":{},"body":{"injectables/SmsService.html":{}}}],["insufficient_balance",{"_index":1922,"title":{},"body":{"injectables/SmsService.html":{},"miscellaneous/enumerations.html":{}}}],["insufficientcreditalert",{"_index":1895,"title":{},"body":{"injectables/SmsService.html":{}}}],["integer",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercept",{"_index":1037,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["intercept(context",{"_index":1294,"title":{},"body":{"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["interface",{"_index":1012,"title":{"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"interfaces/SendchampWebhookEvent.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}},"body":{"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"injectables/MailService.html":{},"classes/RefreshToken.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"interfaces/SendchampWebhookEvent.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":1013,"title":{},"body":{"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"interfaces/SendchampWebhookEvent.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":317,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["international",{"_index":1806,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["intersectiontype",{"_index":722,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["intersectiontype(emaildto",{"_index":709,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["invalid",{"_index":839,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["invalid_color",{"_index":800,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["invalid_credentials",{"_index":801,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["invalid_id",{"_index":802,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["invalid_otp_code",{"_index":803,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["invalid_password",{"_index":804,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["invalid_refresh_token",{"_index":805,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["iotp",{"_index":988,"title":{"classes/IOtp.html":{}},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"coverage.html":{}}}],["irefreshtoken",{"_index":26,"title":{"interfaces/IRefreshToken.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenPayload.html":{},"coverage.html":{}}}],["irefreshtoken['id",{"_index":19,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{}}}],["iresponse",{"_index":1023,"title":{"interfaces/IResponse.html":{}},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["irole",{"_index":29,"title":{"classes/IRole.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/IRole.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["isadmin",{"_index":1075,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["isarray",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"classes/CreateRoleDto.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["isarray()@arraynotempty()@isstring({each",{"_index":364,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["isboolean",{"_index":2146,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["ischannelvalue",{"_index":1161,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"classes/VerifyOtpDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ischannelvalue(validationoptions",{"_index":1154,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"miscellaneous/functions.html":{}}}],["ischannelvalueconstraint",{"_index":1131,"title":{"classes/IsChannelValueConstraint.html":{}},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"coverage.html":{}}}],["isdev",{"_index":2262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isemail",{"_index":734,"title":{},"body":{"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["isemail(emailorphone",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemail(value",{"_index":1145,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["isenum",{"_index":1140,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["isenum(otpchannelenum",{"_index":1157,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"classes/VerifyOtpDto.html":{}}}],["isenum(otptypeenum",{"_index":1156,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"classes/VerifyOtpDto.html":{}}}],["isglobal",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["isin",{"_index":724,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isin(['undefined",{"_index":712,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isin([true",{"_index":725,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isinaws",{"_index":2263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isint",{"_index":132,"title":{},"body":{"classes/ApiResponse.html":{},"classes/EnvironmentVariables.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{}}}],["ismobilephone",{"_index":1141,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/MobileNumberDto.html":{},"classes/SendOtpDto.html":{}}}],["ismobilephone('en",{"_index":1375,"title":{},"body":{"classes/MobileNumberDto.html":{}}}],["ismobilephone(emailorphone",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismobilephone(value",{"_index":1148,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["ismongoid",{"_index":2224,"title":{},"body":{"injectables/ValidIdConstraint.html":{}}}],["ismongoid(id",{"_index":2225,"title":{},"body":{"injectables/ValidIdConstraint.html":{}}}],["isnotemptyobject(filters",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotemptyobject(request?.user",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnumber",{"_index":1339,"title":{},"body":{"classes/MailOtpDto.html":{}}}],["isoptional",{"_index":133,"title":{},"body":{"classes/ApiResponse.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isboolean",{"_index":2141,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isoptional()@isint",{"_index":762,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isoptional()@isstring",{"_index":754,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/GetUsersDto.html":{},"classes/PaginationDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring()@transform",{"_index":716,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isurl",{"_index":2143,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isoptional()@transform",{"_index":1374,"title":{},"body":{"classes/MobileNumberDto.html":{}}}],["isoptional()@type(undefined)@isint",{"_index":937,"title":{},"body":{"classes/GetUsersDto.html":{},"classes/PaginationDto.html":{}}}],["isotpexpired",{"_index":1425,"title":{},"body":{"injectables/OtpService.html":{}}}],["isotpexpired(updatedat",{"_index":1437,"title":{},"body":{"injectables/OtpService.html":{}}}],["isprod",{"_index":2264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isrevoked",{"_index":1020,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"injectables/TokenService.html":{}}}],["issent",{"_index":991,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{}}}],["isstring",{"_index":134,"title":{},"body":{"classes/ApiResponse.html":{},"classes/ApiRouteDto.html":{},"classes/AssignRoleDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/GoogleLoginDto.html":{},"classes/IdDto.html":{},"classes/MailOtpDto.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/RefreshTokenDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyOtpQueryDto.html":{}}}],["isstring()@isvalidid",{"_index":1127,"title":{},"body":{"classes/IdDto.html":{}}}],["isstring()@matches(password_regex",{"_index":664,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/SetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["issuer",{"_index":2082,"title":{},"body":{"injectables/TokenService.html":{}}}],["issuperadmin",{"_index":1076,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["istesting",{"_index":2265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isurl",{"_index":2147,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isvalid(dateobj",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isvalidid",{"_index":1129,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isvalidid(validationoptions",{"_index":2227,"title":{},"body":{"injectables/ValidIdConstraint.html":{},"miscellaneous/functions.html":{}}}],["isvalidphonenumber(value.tostring",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isvalidroutes",{"_index":1726,"title":{},"body":{"injectables/RoleService.html":{}}}],["isverified",{"_index":992,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{}}}],["it's",{"_index":1391,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["item",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.hasownproperty(key",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item?.id?.tostring",{"_index":1655,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["item[key",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iuser",{"_index":31,"title":{"classes/IUser.html":{}},"body":{"classes/AccessTokenPayload.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/IUser.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/OtpService.html":{},"classes/RefreshTokenPayload.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iuser['id",{"_index":23,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{}}}],["join",{"_index":1570,"title":{},"body":{"injectables/RedirectMiddleware.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["json.parse(decoded",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2089,"title":{},"body":{"injectables/TokenService.html":{}}}],["jwt",{"_index":113,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/OptionalAuthGuard.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":450,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LoanController.html":{},"injectables/RoleGuard.html":{},"coverage.html":{}}}],["jwtauthguard:19",{"_index":1646,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["jwtfromrequest",{"_index":116,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":12,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/LogoutInterceptor.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{}}}],["jwtmodule",{"_index":536,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":550,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":2054,"title":{},"body":{"injectables/TokenService.html":{}}}],["jwtsignoptions",{"_index":2086,"title":{},"body":{"injectables/TokenService.html":{}}}],["jwtstrategy",{"_index":522,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtverifyoptions",{"_index":2087,"title":{},"body":{"injectables/TokenService.html":{}}}],["kamil",{"_index":2489,"title":{},"body":{"index.html":{}}}],["key",{"_index":653,"title":{},"body":{"injectables/CacheService.html":{},"classes/ErrorMessages.html":{},"miscellaneous/variables.html":{}}}],["keyof",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys.constant",{"_index":1027,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["keys.constant.ts",{"_index":2278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":730,"title":{},"body":{"classes/DropDownOption.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":1117,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["lastchar",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/ILoan.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/User.html":{}}}],["lastnchar",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastpage",{"_index":143,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"miscellaneous/variables.html":{}}}],["lastpart",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":1846,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["later",{"_index":855,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["lean",{"_index":1269,"title":{},"body":{"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{}}}],["legend",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lengthofonemessage",{"_index":1889,"title":{},"body":{"injectables/SmsService.html":{}}}],["letter",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["letters",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"dependencies.html":{}}}],["license",{"_index":2495,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2476,"title":{},"body":{"index.html":{}}}],["limit",{"_index":139,"title":{},"body":{"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/GetUsersDto.html":{},"injectables/LoanService.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["limit(limit",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":1119,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["literal",{"_index":1696,"title":{},"body":{"injectables/RoleService.html":{},"injectables/SmsService.html":{},"miscellaneous/typealiases.html":{}}}],["loan",{"_index":966,"title":{"classes/Loan.html":{}},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loan.$set(updateloandto",{"_index":1274,"title":{},"body":{"injectables/LoanService.html":{}}}],["loan.deleteone",{"_index":1276,"title":{},"body":{"injectables/LoanService.html":{}}}],["loan.dto",{"_index":1214,"title":{},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{},"classes/UpdateLoanDto.html":{}}}],["loan.dto.ts",{"_index":684,"title":{},"body":{"classes/CreateLoanDto.html":{},"classes/UpdateLoanDto.html":{},"coverage.html":{}}}],["loan.name",{"_index":1237,"title":{},"body":{"modules/LoanModule.html":{}}}],["loan.save",{"_index":1275,"title":{},"body":{"injectables/LoanService.html":{}}}],["loan/dto/create",{"_index":1213,"title":{},"body":{"controllers/LoanController.html":{}}}],["loan/dto/update",{"_index":1215,"title":{},"body":{"controllers/LoanController.html":{}}}],["loan/loan.controller",{"_index":1235,"title":{},"body":{"modules/LoanModule.html":{}}}],["loan/loan.enum",{"_index":983,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{}}}],["loan/loan.module",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["loan/loan.service",{"_index":1217,"title":{},"body":{"controllers/LoanController.html":{},"modules/LoanModule.html":{}}}],["loan/schemas/loan.schema",{"_index":1218,"title":{},"body":{"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{}}}],["loan:14",{"_index":973,"title":{},"body":{"classes/ILoan.html":{}}}],["loan:20",{"_index":974,"title":{},"body":{"classes/ILoan.html":{}}}],["loan:28",{"_index":972,"title":{},"body":{"classes/ILoan.html":{}}}],["loan:34",{"_index":980,"title":{},"body":{"classes/ILoan.html":{}}}],["loan:39",{"_index":975,"title":{},"body":{"classes/ILoan.html":{}}}],["loan:46",{"_index":978,"title":{},"body":{"classes/ILoan.html":{}}}],["loan:52",{"_index":979,"title":{},"body":{"classes/ILoan.html":{}}}],["loanamount",{"_index":967,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{}}}],["loancontroller",{"_index":1187,"title":{"controllers/LoanController.html":{}},"body":{"controllers/LoanController.html":{},"modules/LoanModule.html":{},"coverage.html":{}}}],["loandocument",{"_index":985,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loanmodule",{"_index":221,"title":{"modules/LoanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoanModule.html":{},"modules.html":{},"overview.html":{}}}],["loanschema",{"_index":986,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"modules/LoanModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loanservice",{"_index":1216,"title":{"injectables/LoanService.html":{}},"body":{"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"coverage.html":{},"overview.html":{}}}],["loanstatus",{"_index":968,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{}}}],["loanstatusenum",{"_index":976,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"miscellaneous/enumerations.html":{}}}],["local",{"_index":1284,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":453,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":523,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":298,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["logger('mailermodule",{"_index":1319,"title":{},"body":{"modules/MailModule.html":{}}}],["logger('transformresponseinterceptor",{"_index":1036,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["logger(appservice.name",{"_index":310,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["logger(authcontroller.name",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger(authservice.name",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger(mailservice.name",{"_index":1356,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["logger(otpservice.name",{"_index":1450,"title":{},"body":{"injectables/OtpService.html":{}}}],["logger(roleguard.name",{"_index":1647,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["logger(roleservice.name",{"_index":1710,"title":{},"body":{"injectables/RoleService.html":{}}}],["logger(sendchampservice.name",{"_index":1840,"title":{},"body":{"injectables/SendChampService.html":{}}}],["logger(smsservice.name",{"_index":1907,"title":{},"body":{"injectables/SmsService.html":{}}}],["logger(termiiservice.name",{"_index":2025,"title":{},"body":{"injectables/TermiiService.html":{}}}],["logger.error",{"_index":1332,"title":{},"body":{"modules/MailModule.html":{}}}],["logic",{"_index":1397,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["login",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@headers",{"_index":494,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(headers",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":943,"title":{},"body":{"classes/GoogleLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:5",{"_index":945,"title":{},"body":{"classes/GoogleLoginDto.html":{}}}],["logindto",{"_index":402,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponse",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logoutinterceptor",{"_index":439,"title":{"injectables/LogoutInterceptor.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LogoutInterceptor.html":{},"coverage.html":{}}}],["long",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["longdate",{"_index":2304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["longdate(item[key",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowercase",{"_index":159,"title":{},"body":{"classes/ApiRoute.html":{},"classes/ErrorMessages.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["lte",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":1368,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{}}}],["mail/dtos/mail",{"_index":1358,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["mail/mail.module",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/OtpModule.html":{},"modules/SmsModule.html":{},"modules/UserModule.html":{}}}],["mail/mail.service",{"_index":316,"title":{},"body":{"injectables/AppService.html":{},"modules/MailModule.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SmsService.html":{}}}],["mail_from",{"_index":743,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["mailer",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["mailermodule",{"_index":1312,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1317,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1346,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["mailmodule",{"_index":222,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/SmsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mailotpdto",{"_index":1335,"title":{"classes/MailOtpDto.html":{}},"body":{"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"coverage.html":{}}}],["mailservice",{"_index":303,"title":{"injectables/MailService.html":{}},"body":{"injectables/AppService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1522,"title":{},"body":{"injectables/Owner.html":{}}}],["male",{"_index":2409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["malformed",{"_index":851,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["malformed_refresh_token",{"_index":806,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["manager",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"dependencies.html":{}}}],["manages",{"_index":694,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["map",{"_index":1034,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/SendChampService.html":{},"injectables/TermiiService.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["map((item",{"_index":1654,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["map((responsedata",{"_index":1049,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["map((word",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapapiroutes",{"_index":1680,"title":{},"body":{"injectables/RoleService.html":{}}}],["mark",{"_index":2234,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["maskemailaddress",{"_index":1985,"title":{},"body":{"classes/SuccessMessages.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maskemailaddress(emailorphonenumber",{"_index":1988,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["maskphonenumber",{"_index":1986,"title":{},"body":{"classes/SuccessMessages.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maskphonenumber(emailorphonenumber",{"_index":1989,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["match",{"_index":667,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/RoleService.html":{},"classes/SetPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["match.validation",{"_index":676,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["match.validation.ts",{"_index":910,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["match.validation.ts:11",{"_index":918,"title":{},"body":{"classes/FieldsMatchConstraint.html":{}}}],["match.validation.ts:17",{"_index":915,"title":{},"body":{"classes/FieldsMatchConstraint.html":{}}}],["matches",{"_index":678,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/Owner.html":{},"classes/UpdatePasswordDto.html":{},"classes/VerifyOtpDto.html":{}}}],["matches(otp_regex",{"_index":2247,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["matches(password_regex",{"_index":679,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil",{"_index":1936,"title":{},"body":{"injectables/SmsService.html":{}}}],["math.ceil(total",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max",{"_index":997,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"miscellaneous/variables.html":{}}}],["maxdate",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdate.gethours",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdate.getminutes",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxretries",{"_index":1890,"title":{},"body":{"injectables/SmsService.html":{}}}],["medium",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["mediumdate",{"_index":2305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":81,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"interfaces/IResponse.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"injectables/OtpService.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"injectables/SmsService.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"classes/VerifyOtpDto.html":{},"miscellaneous/variables.html":{}}}],["message.length",{"_index":1937,"title":{},"body":{"injectables/SmsService.html":{}}}],["message_id",{"_index":1994,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["messagecount",{"_index":1935,"title":{},"body":{"injectables/SmsService.html":{}}}],["messagedto",{"_index":126,"title":{"classes/MessageDto.html":{}},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"injectables/OtpService.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"coverage.html":{}}}],["messagedto:5",{"_index":130,"title":{},"body":{"classes/ApiResponse.html":{}}}],["messages.constant",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/EmailDto.html":{},"classes/MobileNumberDto.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/RoleService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TokenService.html":{},"classes/UpdatePasswordDto.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{}}}],["messages.constant.ts",{"_index":794,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/SuccessMessages.html":{},"coverage.html":{}}}],["messages.constant.ts:11",{"_index":844,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:12",{"_index":869,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:13",{"_index":824,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:14",{"_index":856,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:16",{"_index":850,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:17",{"_index":852,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:18",{"_index":834,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:19",{"_index":874,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:20",{"_index":843,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:21",{"_index":826,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/SuccessMessages.html":{}}}],["messages.constant.ts:23",{"_index":875,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:24",{"_index":841,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:25",{"_index":838,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:26",{"_index":857,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:27",{"_index":1979,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["messages.constant.ts:28",{"_index":860,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/SuccessMessages.html":{}}}],["messages.constant.ts:29",{"_index":867,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:30",{"_index":849,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:33",{"_index":881,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:43",{"_index":889,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:57",{"_index":879,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:6",{"_index":863,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:61",{"_index":886,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:69",{"_index":877,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:7",{"_index":864,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:73",{"_index":884,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.constant.ts:8",{"_index":1983,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["messages.constant.ts:9",{"_index":831,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["meta",{"_index":148,"title":{},"body":{"classes/ApiResponse.html":{},"interfaces/IResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"injectables/RoleService.html":{},"injectables/TransformResponseInterceptor.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":152,"title":{},"body":{"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"classes/IApiRoute.html":{},"classes/IRole.html":{},"classes/Role.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["method?.touppercase",{"_index":1665,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["methods",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["middleware",{"_index":1557,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"dependencies.html":{}}}],["middlewareconsumer",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["milliseconds",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenService.html":{}}}],["min",{"_index":995,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"miscellaneous/variables.html":{}}}],["mindate",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindate.gethours",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindate.getminutes",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":845,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["minute",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minutes",{"_index":1481,"title":{},"body":{"injectables/OtpService.html":{}}}],["miscellaneous",{"_index":2390,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2475,"title":{},"body":{"index.html":{}}}],["mm",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":505,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorMessages.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"injectables/TokenService.html":{},"injectables/ValidMobileNumber.html":{}}}],["mobilenumber",{"_index":1079,"title":{},"body":{"classes/IUser.html":{},"classes/MobileNumberDto.html":{},"injectables/OtpService.html":{},"classes/User.html":{},"injectables/ValidMobileNumber.html":{}}}],["mobilenumberdto",{"_index":710,"title":{"classes/MobileNumberDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/MobileNumberDto.html":{},"coverage.html":{}}}],["mobileverified",{"_index":1080,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["mock",{"_index":1924,"title":{},"body":{"injectables/SmsService.html":{}}}],["mode",{"_index":2466,"title":{},"body":{"index.html":{}}}],["model",{"_index":1241,"title":{},"body":{"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"miscellaneous/variables.html":{}}}],["model.aggregate(countpipeline",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model.aggregate(pipeline",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model.countdocuments(filters",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model.find(filters",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":208,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":210,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1314,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1316,"title":{},"body":{"modules/MailModule.html":{}}}],["mongoose",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoanModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1236,"title":{},"body":{"modules/LoanModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":543,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["mongooseschema",{"_index":1016,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["mongooseschema.types.objectid",{"_index":1017,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["more",{"_index":2485,"title":{},"body":{"index.html":{}}}],["ms",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenService.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":2490,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"classes/CreateRoleDto.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/functions.html":{}}}],["nchar",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":778,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["needs",{"_index":2125,"title":{},"body":{"injectables/TokenService.html":{}}}],["nest",{"_index":2457,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2494,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1030,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["nestjs",{"_index":1313,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":1817,"title":{},"body":{"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"interfaces/IResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OptionalAuthGuard.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":107,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":537,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TokenService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":170,"title":{},"body":{"classes/ApiRoute.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":109,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OptionalAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2359,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":34,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/IApiRoute.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"controllers/LoanController.html":{},"classes/LoginDto.html":{},"injectables/Owner.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/VerifyOtpDto.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1553,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{}}}],["new",{"_index":44,"title":{},"body":{"classes/AccessTokenPayload.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"injectables/GoogleService.html":{},"interfaces/IResponse.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshTokenPayload.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newlogger",{"_index":1643,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["next",{"_index":1039,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["next.handle",{"_index":1047,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["next.handle().pipe",{"_index":1048,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["nextfunction",{"_index":1568,"title":{},"body":{"injectables/RedirectMiddleware.html":{}}}],["ng",{"_index":1150,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/MobileNumberDto.html":{},"classes/SendOtpDto.html":{},"miscellaneous/variables.html":{}}}],["ngn",{"_index":1995,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["nigerian",{"_index":1151,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["node",{"_index":2368,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":2449,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":744,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["nodemailer",{"_index":2381,"title":{},"body":{"dependencies.html":{}}}],["non_dnd",{"_index":1805,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["notequalto",{"_index":1383,"title":{},"body":{"classes/NotEqualToConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["notequalto(property",{"_index":2442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notequaltoconstraint",{"_index":1378,"title":{"classes/NotEqualToConstraint.html":{}},"body":{"classes/NotEqualToConstraint.html":{},"coverage.html":{}}}],["notfound",{"_index":817,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["notfound(schema",{"_index":878,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["notfoundexception",{"_index":1252,"title":{},"body":{"injectables/LoanService.html":{}}}],["notfoundexception(`loan",{"_index":1272,"title":{},"body":{"injectables/LoanService.html":{}}}],["now",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now.setmilliseconds(0",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now.setseconds(0",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2462,"title":{},"body":{"index.html":{}}}],["null",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/SmsService.html":{},"controllers/TermiiController.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":138,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/CacheService.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/GetUsersDto.html":{},"classes/ILoan.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"classes/MailOtpDto.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/SmsService.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["number.dto",{"_index":721,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["number.dto.ts",{"_index":1373,"title":{},"body":{"classes/MobileNumberDto.html":{},"coverage.html":{}}}],["number.dto.ts:12",{"_index":1376,"title":{},"body":{"classes/MobileNumberDto.html":{}}}],["numberofasterisks",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numberrangefilter",{"_index":2315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2client",{"_index":952,"title":{},"body":{"injectables/GoogleService.html":{}}}],["obj",{"_index":1158,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"miscellaneous/variables.html":{}}}],["obj.channel",{"_index":1159,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["obj.constructor",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":928,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"classes/User.html":{},"injectables/ValidIdConstraint.html":{},"miscellaneous/variables.html":{}}}],["object)[relatedpropertyname",{"_index":926,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/NotEqualToConstraint.html":{}}}],["object.assign(existingrole",{"_index":1748,"title":{},"body":{"injectables/RoleService.html":{}}}],["object.channel",{"_index":1143,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["object.constructor",{"_index":931,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/ValidIdConstraint.html":{}}}],["object.entries",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(exception.keypattern)[0",{"_index":88,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["object.keys(obj).length",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(payload).length",{"_index":1546,"title":{},"body":{"classes/PayloadExistsPipe.html":{}}}],["object.values(enumvalue",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":1032,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["ok",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{}}}],["old",{"_index":858,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["oldpassword",{"_index":2134,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["omittype",{"_index":2145,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":2138,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onboarded",{"_index":1081,"title":{},"body":{"classes/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["one",{"_index":830,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/OtpService.html":{}}}],["open",{"_index":2477,"title":{},"body":{"index.html":{}}}],["operations",{"_index":689,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/IRole.html":{},"classes/Role.html":{}}}],["optional",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"injectables/GoogleService.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/PaginationDto.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/functions.html":{}}}],["optional_guard",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional_guard_key",{"_index":2279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optionalauthguard",{"_index":1385,"title":{"injectables/OptionalAuthGuard.html":{}},"body":{"injectables/OptionalAuthGuard.html":{},"coverage.html":{}}}],["options",{"_index":932,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/LoanService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"injectables/RoleService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/TokenService.html":{},"injectables/ValidIdConstraint.html":{},"miscellaneous/variables.html":{}}}],["opts",{"_index":2103,"title":{},"body":{"injectables/TokenService.html":{}}}],["order",{"_index":871,"title":{},"body":{"classes/ErrorMessages.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1461,"title":{},"body":{"injectables/OtpService.html":{}}}],["otp",{"_index":822,"title":{"classes/Otp.html":{}},"body":{"classes/ErrorMessages.html":{},"classes/IOtp.html":{},"injectables/MailService.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"interfaces/SendMailPayload.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["otp.dto",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"interfaces/SendMailPayload.html":{},"classes/VerifyOtpDto.html":{}}}],["otp.dto.ts",{"_index":1133,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/MailOtpDto.html":{},"classes/SendOtpDto.html":{},"classes/VerifyOtpDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["otp.dto.ts:11",{"_index":1340,"title":{},"body":{"classes/MailOtpDto.html":{}}}],["otp.dto.ts:14",{"_index":2241,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["otp.dto.ts:17",{"_index":1135,"title":{},"body":{"classes/IsChannelValueConstraint.html":{}}}],["otp.dto.ts:19",{"_index":1137,"title":{},"body":{"classes/IsChannelValueConstraint.html":{}}}],["otp.dto.ts:44",{"_index":1136,"title":{},"body":{"classes/IsChannelValueConstraint.html":{}}}],["otp.dto.ts:5",{"_index":1341,"title":{},"body":{"classes/MailOtpDto.html":{}}}],["otp.dto.ts:64",{"_index":1875,"title":{},"body":{"classes/SendOtpDto.html":{}}}],["otp.dto.ts:68",{"_index":1874,"title":{},"body":{"classes/SendOtpDto.html":{}}}],["otp.dto.ts:76",{"_index":1876,"title":{},"body":{"classes/SendOtpDto.html":{}}}],["otp.dto.ts:8",{"_index":1338,"title":{},"body":{"classes/MailOtpDto.html":{}}}],["otp.name",{"_index":1420,"title":{},"body":{"modules/OtpModule.html":{}}}],["otp/dtos/send",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{}}}],["otp/dtos/verify",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{}}}],["otp/otp.enum",{"_index":893,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"classes/SuccessMessages.html":{}}}],["otp/otp.module",{"_index":534,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["otp/otp.service",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{},"modules/OtpModule.html":{}}}],["otp/schemas/otp.schema",{"_index":1418,"title":{},"body":{"modules/OtpModule.html":{},"injectables/OtpService.html":{}}}],["otp:14",{"_index":1006,"title":{},"body":{"classes/IOtp.html":{}}}],["otp:21",{"_index":994,"title":{},"body":{"classes/IOtp.html":{}}}],["otp:29",{"_index":998,"title":{},"body":{"classes/IOtp.html":{}}}],["otp:34",{"_index":1000,"title":{},"body":{"classes/IOtp.html":{}}}],["otp:41",{"_index":1002,"title":{},"body":{"classes/IOtp.html":{}}}],["otp:47",{"_index":999,"title":{},"body":{"classes/IOtp.html":{}}}],["otp:52",{"_index":1003,"title":{},"body":{"classes/IOtp.html":{}}}],["otp?.toobject",{"_index":1491,"title":{},"body":{"injectables/OtpService.html":{}}}],["otp_not_sent",{"_index":807,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["otp_regex",{"_index":2245,"title":{},"body":{"classes/VerifyOtpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otpchannelenum",{"_index":892,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"classes/SuccessMessages.html":{},"classes/VerifyOtpDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["otpchannelenum.email",{"_index":898,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"classes/SuccessMessages.html":{},"miscellaneous/variables.html":{}}}],["otpchannelenum.sms",{"_index":899,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"miscellaneous/variables.html":{}}}],["otpcodemismatch",{"_index":818,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["otpcodemismatch(emailorphonenumber",{"_index":880,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["otpdocument",{"_index":1011,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["otpdocument.channel",{"_index":1485,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocument.code",{"_index":1465,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocument.issent",{"_index":1466,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocument.isverified",{"_index":1467,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocument.save",{"_index":1469,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocument.updateone",{"_index":1482,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocument.useragent",{"_index":1468,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocument.value",{"_index":1477,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocuments",{"_index":1470,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdocuments[0",{"_index":1474,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpmodule",{"_index":520,"title":{"modules/OtpModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["otpschema",{"_index":1009,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otpsent",{"_index":1976,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["otpsent(emailorphonenumber",{"_index":1982,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["otpservice",{"_index":460,"title":{"injectables/OtpService.html":{}},"body":{"controllers/AuthController.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"coverage.html":{},"overview.html":{}}}],["otptypeenum",{"_index":1001,"title":{},"body":{"classes/IOtp.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"classes/VerifyOtpDto.html":{},"miscellaneous/enumerations.html":{}}}],["otptypeenum.change_password",{"_index":1509,"title":{},"body":{"injectables/OtpService.html":{}}}],["otptypeenum.registration",{"_index":1504,"title":{},"body":{"injectables/OtpService.html":{}}}],["otptypeenum.update_profile",{"_index":1511,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpverified",{"_index":1977,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["otpverified(emailorphonenumber",{"_index":1984,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["out",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2499,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1067,"title":{"injectables/Owner.html":{}},"body":{"classes/IRole.html":{},"injectables/Owner.html":{},"classes/Role.html":{},"coverage.html":{}}}],["package",{"_index":2348,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":140,"title":{},"body":{"classes/ApiResponse.html":{},"classes/GetUsersDto.html":{},"injectables/LoanService.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["paginate",{"_index":1239,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["paginate(query",{"_index":1247,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["paginateandsort",{"_index":1255,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["paginatedmodel",{"_index":1210,"title":{},"body":{"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginatedmodel(iloan",{"_index":1229,"title":{},"body":{"controllers/LoanController.html":{}}}],["paginatedmodel(irole",{"_index":1637,"title":{},"body":{"controllers/RoleController.html":{}}}],["paginatedmodel(user",{"_index":2181,"title":{},"body":{"controllers/UserController.html":{}}}],["pagination",{"_index":147,"title":{"classes/Pagination.html":{}},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"coverage.html":{}}}],["paginationdto",{"_index":136,"title":{"classes/PaginationDto.html":{}},"body":{"classes/ApiResponse.html":{},"classes/GetUsersDto.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["paginationdto:15",{"_index":940,"title":{},"body":{"classes/GetUsersDto.html":{}}}],["paginationdto:20",{"_index":938,"title":{},"body":{"classes/GetUsersDto.html":{}}}],["paginationdto:25",{"_index":939,"title":{},"body":{"classes/GetUsersDto.html":{}}}],["paginationmeta",{"_index":141,"title":{"classes/PaginationMeta.html":{}},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":1219,"title":{},"body":{"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2029,"title":{},"body":{"injectables/TermiiService.html":{},"miscellaneous/variables.html":{}}}],["parsedphonenumber",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parsedphonenumber?.countrycallingcode}${parsedphonenumber?.nationalnumber",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parsephonenumber",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partials",{"_index":1330,"title":{},"body":{"modules/MailModule.html":{}}}],["partialtype",{"_index":2132,"title":{},"body":{"classes/UpdateLoanDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createloandto",{"_index":2131,"title":{},"body":{"classes/UpdateLoanDto.html":{}}}],["partialtype(createroledto",{"_index":2136,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["pass",{"_index":1524,"title":{},"body":{"injectables/Owner.html":{}}}],["passed",{"_index":903,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["passport",{"_index":112,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":538,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":539,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":108,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":97,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/ErrorMessages.html":{},"classes/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/OtpService.html":{},"classes/SetPasswordDto.html":{},"classes/SuccessMessages.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{}}}],["password')@useguards(jwtauthguard",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/SetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["password.dto.ts",{"_index":661,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/SetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:15",{"_index":669,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["password.dto.ts:22",{"_index":668,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password_changed",{"_index":1974,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["password_regex",{"_index":672,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password_too_short",{"_index":896,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["passwords_do_not_match",{"_index":808,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["passwords_match",{"_index":809,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["passwordset",{"_index":1082,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["patch",{"_index":468,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["patch('/:id",{"_index":1631,"title":{},"body":{"controllers/RoleController.html":{}}}],["patch('/:id')@apiokresponse({description",{"_index":1615,"title":{},"body":{"controllers/RoleController.html":{}}}],["patch('/block/:id",{"_index":2184,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('/block/:id')@apiokresponse({type",{"_index":2171,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('/change",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/me",{"_index":507,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/me')@useguards(jwtauthguard",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/otp/verify",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/unblock/:id",{"_index":2188,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('/unblock/:id')@apiokresponse({type",{"_index":2177,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('/update",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/user/:id/assign",{"_index":1633,"title":{},"body":{"controllers/RoleController.html":{}}}],["patch('/user/:id/assign')@apiokresponse({description",{"_index":1600,"title":{},"body":{"controllers/RoleController.html":{}}}],["patch('/user/:id/remove",{"_index":1635,"title":{},"body":{"controllers/RoleController.html":{}}}],["patch('/user/:id/remove')@apiokresponse({description",{"_index":1611,"title":{},"body":{"controllers/RoleController.html":{}}}],["patch(':id",{"_index":1208,"title":{},"body":{"controllers/LoanController.html":{}}}],["path",{"_index":153,"title":{},"body":{"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"classes/IApiRoute.html":{},"classes/IRole.html":{},"injectables/RedirectMiddleware.html":{},"classes/Role.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["pathrewrite",{"_index":1562,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["payload",{"_index":49,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/ErrorMessages.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/PayloadExistsPipe.html":{},"classes/RefreshTokenPayload.html":{},"interfaces/SendMailPayload.html":{},"injectables/TokenService.html":{},"miscellaneous/variables.html":{}}}],["payload.jwtid",{"_index":2123,"title":{},"body":{"injectables/TokenService.html":{}}}],["payload.subject",{"_index":2120,"title":{},"body":{"injectables/TokenService.html":{}}}],["payloadexistspipe",{"_index":1540,"title":{"classes/PayloadExistsPipe.html":{}},"body":{"classes/PayloadExistsPipe.html":{},"coverage.html":{}}}],["payment",{"_index":1869,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["pending",{"_index":2412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":1664,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["phone_number",{"_index":1797,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["phonenumber",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber.length",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber.substr(total",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber.substring(0",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber.tostring",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photo",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"classes/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["picktype",{"_index":677,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/LoginDto.html":{},"classes/UpdatePasswordDto.html":{},"controllers/UserController.html":{}}}],["picktype(changepassworddto",{"_index":1290,"title":{},"body":{"classes/LoginDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["picktype(createuserdto",{"_index":662,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["picktype(user",{"_index":2185,"title":{},"body":{"controllers/UserController.html":{}}}],["picture",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["ping",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["pipe",{"_index":1851,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["pipeline",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipeline.push",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipetransform",{"_index":1543,"title":{},"body":{"classes/PayloadExistsPipe.html":{}}}],["plain",{"_index":2000,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["plaintoclass",{"_index":773,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoclass(environmentvariables",{"_index":784,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["please",{"_index":828,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/Owner.html":{},"index.html":{}}}],["populate",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":745,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["post",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"controllers/TermiiController.html":{}}}],["post('/')@apiokresponse({description",{"_index":1603,"title":{},"body":{"controllers/RoleController.html":{}}}],["post('/google",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login')@useguards(localauthguard)@apibody({type",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":500,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/otp/send",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/refresh",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/set",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/webhook",{"_index":1787,"title":{},"body":{"controllers/SendChampController.html":{},"controllers/TermiiController.html":{}}}],["post('/webhook')@httpcode(httpstatus.ok)@apiexcludeendpoint",{"_index":1779,"title":{},"body":{"controllers/SendChampController.html":{},"controllers/TermiiController.html":{}}}],["post(this.termiiurl",{"_index":2034,"title":{},"body":{"injectables/TermiiService.html":{}}}],["prefix",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{}}}],["preview",{"_index":1323,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":297,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/GoogleService.html":{},"interfaces/IResponse.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["process",{"_index":1508,"title":{},"body":{"injectables/OtpService.html":{}}}],["process.cwd",{"_index":1326,"title":{},"body":{"modules/MailModule.html":{}}}],["process.uptime",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["processed",{"_index":1863,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["processing",{"_index":1798,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["processsendchamphook",{"_index":1776,"title":{},"body":{"controllers/SendChampController.html":{}}}],["processsendchamphook(body",{"_index":1777,"title":{},"body":{"controllers/SendChampController.html":{}}}],["processwebhook",{"_index":1822,"title":{},"body":{"injectables/SendChampService.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{}}}],["processwebhook(body",{"_index":2004,"title":{},"body":{"controllers/TermiiController.html":{}}}],["processwebhook(event",{"_index":1830,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["prod",{"_index":2407,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["production",{"_index":2468,"title":{},"body":{"index.html":{}}}],["profile",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":2448,"title":{},"body":{"index.html":{}}}],["project",{"_index":2478,"title":{},"body":{"index.html":{}}}],["projection",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":307,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LogoutInterceptor.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/TokenService.html":{}}}],["promise((resolve",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1656,"title":{},"body":{"injectables/RoleGuard.html":{},"injectables/SmsService.html":{}}}],["promise.all([datapromise",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.all(rolespromise",{"_index":1739,"title":{},"body":{"injectables/RoleService.html":{}}}],["prop",{"_index":167,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["prop({default",{"_index":1092,"title":{},"body":{"classes/IUser.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["prop({required",{"_index":161,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["prop({select",{"_index":1089,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["prop({trim",{"_index":1095,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":1004,"title":{},"body":{"classes/IOtp.html":{},"classes/IUser.html":{},"classes/Otp.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":541,"title":{},"body":{"modules/AuthModule.html":{},"classes/FieldsMatchConstraint.html":{},"classes/NotEqualToConstraint.html":{},"miscellaneous/functions.html":{}}}],["propertyname",{"_index":929,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/ValidIdConstraint.html":{}}}],["props.constant",{"_index":313,"title":{},"body":{"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"injectables/TokenService.html":{}}}],["props.constant.ts",{"_index":2256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorMessages.html":{}}}],["provide_valid_email",{"_index":810,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["provide_valid_mobile_number",{"_index":811,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["provided",{"_index":842,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["providers",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["proxy",{"_index":1556,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"dependencies.html":{}}}],["proxymiddleware",{"_index":241,"title":{"injectables/ProxyMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ProxyMiddleware.html":{},"coverage.html":{}}}],["public",{"_index":1987,"title":{},"body":{"classes/SuccessMessages.html":{},"injectables/TokenService.html":{}}}],["pushtoken",{"_index":1083,"title":{},"body":{"classes/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["query",{"_index":1202,"title":{},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["query.dto.ts",{"_index":2250,"title":{},"body":{"classes/VerifyOtpQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:5",{"_index":2251,"title":{},"body":{"classes/VerifyOtpQueryDto.html":{}}}],["query.populate(populate",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query.sort",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query.validation.ts",{"_index":1958,"title":{},"body":{"injectables/SortQueryConstraint.html":{},"coverage.html":{}}}],["query.validation.ts:12",{"_index":1962,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["query.validation.ts:14",{"_index":1961,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["query.validation.ts:40",{"_index":1959,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["query?.limit",{"_index":1268,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["query?.page",{"_index":1267,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["query?.search",{"_index":1263,"title":{},"body":{"injectables/LoanService.html":{}}}],["rarely",{"_index":1395,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["read",{"_index":775,"title":{},"body":{"classes/EnvironmentVariables.html":{},"index.html":{}}}],["readable",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readableitem",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readableitem[camelcasetoreadable(key",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readiness",{"_index":354,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["readinesscheck",{"_index":300,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["readinesscheckresponsedto",{"_index":320,"title":{"classes/ReadinessCheckResponseDto.html":{}},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"coverage.html":{}}}],["readonly",{"_index":202,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorMessages.html":{},"injectables/GoogleService.html":{},"interfaces/IResponse.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{}}}],["reasons",{"_index":323,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["reasons.push('db",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["reasons.push('ses",{"_index":356,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["reasons.push('unable",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["record",{"_index":782,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["redirectmiddleware",{"_index":1566,"title":{"injectables/RedirectMiddleware.html":{}},"body":{"injectables/RedirectMiddleware.html":{},"coverage.html":{}}}],["ref",{"_index":1018,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":969,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["referral",{"_index":865,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["referral_not_found",{"_index":812,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["referralcode",{"_index":1084,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["referredby",{"_index":711,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["reflect",{"_index":2386,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1031,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["refresh",{"_index":832,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["refresh_token_secret",{"_index":746,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["refreshtoken",{"_index":37,"title":{"classes/RefreshToken.html":{}},"body":{"classes/AccessTokenPayload.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"interfaces/IRefreshToken.html":{},"injectables/LogoutInterceptor.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["refreshtoken(@body",{"_index":496,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(body",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken.name",{"_index":544,"title":{},"body":{"modules/AuthModule.html":{}}}],["refreshtokendocument",{"_index":1022,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["refreshtokendto",{"_index":408,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["refreshtokenid",{"_index":1176,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TokenService.html":{}}}],["refreshtokenpayload",{"_index":8,"title":{"classes/RefreshTokenPayload.html":{}},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["refreshtokenpayload:33",{"_index":24,"title":{},"body":{"classes/AccessTokenPayload.html":{}}}],["refreshtokenpayload:34",{"_index":22,"title":{},"body":{"classes/AccessTokenPayload.html":{}}}],["refreshtokenpayload['id",{"_index":21,"title":{},"body":{"classes/AccessTokenPayload.html":{}}}],["refreshtokenschema",{"_index":528,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["regexp(`^${name",{"_index":1770,"title":{},"body":{"injectables/RoleService.html":{}}}],["regexp(query.search",{"_index":1265,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["register",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@headers",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(headers",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdecorator",{"_index":919,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/ValidIdConstraint.html":{}}}],["registration",{"_index":1507,"title":{},"body":{"injectables/OtpService.html":{},"miscellaneous/enumerations.html":{}}}],["rejected",{"_index":2414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["relatedpropertyname",{"_index":922,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/NotEqualToConstraint.html":{}}}],["relatedvalue",{"_index":924,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/NotEqualToConstraint.html":{}}}],["remove",{"_index":1192,"title":{},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{}}}],["remove(@param('id",{"_index":1227,"title":{},"body":{"controllers/LoanController.html":{}}}],["remove(id",{"_index":1203,"title":{},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{}}}],["removeroles",{"_index":1594,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["removeroles(id",{"_index":1698,"title":{},"body":{"injectables/RoleService.html":{}}}],["removeroles(undefined",{"_index":1610,"title":{},"body":{"controllers/RoleController.html":{}}}],["repaid",{"_index":2417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repeat(numberofasterisks",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat(tobemasked",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replace",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replace(/([a",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["report",{"_index":359,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["repository",{"_index":2460,"title":{},"body":{"index.html":{}}}],["req",{"_index":1552,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{}}}],["req.path",{"_index":1571,"title":{},"body":{"injectables/RedirectMiddleware.html":{}}}],["req.url.startswith('/external",{"_index":1558,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["request",{"_index":829,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/LogoutInterceptor.html":{},"injectables/RedirectMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_otp_code",{"_index":813,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["requestconfig",{"_index":1823,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["requestconfig(authorization",{"_index":1833,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["required",{"_index":171,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["res",{"_index":1550,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{}}}],["res.sendfile(join(process.cwd",{"_index":1573,"title":{},"body":{"injectables/RedirectMiddleware.html":{}}}],["resend",{"_index":1462,"title":{},"body":{"injectables/OtpService.html":{}}}],["reset",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolveauthtype",{"_index":890,"title":{},"body":{"classes/ErrorMessages.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolveauthtype(emailorphonenumber",{"_index":897,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["resolverefreshtoken",{"_index":2053,"title":{},"body":{"injectables/TokenService.html":{}}}],["resolverefreshtoken(encoded",{"_index":2079,"title":{},"body":{"injectables/TokenService.html":{}}}],["responder",{"_index":314,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responder.success",{"_index":1483,"title":{},"body":{"injectables/OtpService.html":{}}}],["responder.success('live",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["responder.success(successmessages.password_changed",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["response",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"injectables/RedirectMiddleware.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.status(statuscode).json",{"_index":91,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response?.balance",{"_index":2033,"title":{},"body":{"injectables/TermiiService.html":{}}}],["response?.data?.wallet_balance",{"_index":1853,"title":{},"body":{"injectables/SendChampService.html":{}}}],["responsedata",{"_index":1050,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["responsedata?.data",{"_index":1054,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["responsedata?.hasownproperty('message",{"_index":1053,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["responsedata?.message",{"_index":1056,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["responsedata?.meta",{"_index":1055,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["rest",{"_index":1365,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["restrict",{"_index":1403,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retryservice",{"_index":1891,"title":{},"body":{"injectables/SmsService.html":{}}}],["return",{"_index":122,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"interfaces/IResponse.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"classes/ReadinessCheckResponseDto.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/MailService.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["rgb",{"_index":835,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["rights",{"_index":1069,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{}}}],["rights'})@prop({required",{"_index":1062,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{}}}],["role",{"_index":705,"title":{"classes/Role.html":{}},"body":{"classes/CreateRoleDto.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"injectables/LoanService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["role'})@isstring",{"_index":696,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.apiroutes",{"_index":1731,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.apiroutes.every((apiroute",{"_index":1727,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.apiroutes.filter((apiroute",{"_index":1732,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.apiroutes.map(this.mapapiroutes",{"_index":1757,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.apiroutes.some",{"_index":1661,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["role.dto",{"_index":1618,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":363,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":699,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:20",{"_index":693,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:26",{"_index":697,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:32",{"_index":701,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":365,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["role.name",{"_index":1120,"title":{},"body":{"classes/IUser.html":{},"modules/RoleModule.html":{},"classes/User.html":{}}}],["role.save",{"_index":1734,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.toobject",{"_index":1754,"title":{},"body":{"injectables/RoleService.html":{}}}],["role/dtos/api",{"_index":702,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/RoleService.html":{}}}],["role/dtos/assign",{"_index":1617,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role/dtos/create",{"_index":1619,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{}}}],["role/dtos/update",{"_index":1620,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role/role.controller",{"_index":1674,"title":{},"body":{"modules/RoleModule.html":{}}}],["role/role.module",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["role/role.service",{"_index":1622,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{}}}],["role/schemas/api",{"_index":894,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/IRole.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["role/schemas/role.schema",{"_index":30,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/IUser.html":{},"classes/RefreshTokenPayload.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/User.html":{}}}],["role:18",{"_index":1065,"title":{},"body":{"classes/IRole.html":{}}}],["role:27",{"_index":1063,"title":{},"body":{"classes/IRole.html":{}}}],["role:50",{"_index":1060,"title":{},"body":{"classes/IRole.html":{}}}],["role:59",{"_index":1066,"title":{},"body":{"classes/IRole.html":{}}}],["rolecontroller",{"_index":1589,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledocument",{"_index":1073,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["roleguard",{"_index":524,"title":{"injectables/RoleGuard.html":{}},"body":{"modules/AuthModule.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["roleids",{"_index":1652,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["roleids.map((role",{"_index":1657,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["rolemodule",{"_index":223,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["roleobject",{"_index":1753,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleobject.apiroutes.map(this.mapapiroutes",{"_index":1755,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":11,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AssignRoleDto.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/IUser.html":{},"classes/RefreshTokenPayload.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["roles.length",{"_index":1722,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles.some((role",{"_index":1660,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["roles_key",{"_index":2280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleschema",{"_index":1071,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":1621,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolespromise",{"_index":1725,"title":{},"body":{"injectables/RoleService.html":{}}}],["rolespromise$.length",{"_index":1735,"title":{},"body":{"injectables/RoleService.html":{}}}],["rolespromise$.push",{"_index":1733,"title":{},"body":{"injectables/RoleService.html":{}}}],["route",{"_index":905,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{}}}],["route.dto",{"_index":703,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/RoleService.html":{}}}],["route.dto.ts",{"_index":179,"title":{},"body":{"classes/ApiRouteDto.html":{},"coverage.html":{}}}],["route.dto.ts:13",{"_index":181,"title":{},"body":{"classes/ApiRouteDto.html":{}}}],["route.dto.ts:7",{"_index":182,"title":{},"body":{"classes/ApiRouteDto.html":{}}}],["route.method",{"_index":1663,"title":{},"body":{"injectables/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["route.path",{"_index":1662,"title":{},"body":{"injectables/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["route.schema",{"_index":895,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/IRole.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["route.schema.ts",{"_index":151,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["route.schema.ts:14",{"_index":162,"title":{},"body":{"classes/ApiRoute.html":{}}}],["route.schema.ts:24",{"_index":160,"title":{},"body":{"classes/ApiRoute.html":{}}}],["route.schema.ts:30",{"_index":961,"title":{},"body":{"classes/IApiRoute.html":{}}}],["routedoesnotexist",{"_index":819,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["routedoesnotexist(apiroute",{"_index":883,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["routes",{"_index":1597,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["routes.map(this.mapapiroutes",{"_index":1719,"title":{},"body":{"injectables/RoleService.html":{}}}],["run",{"_index":2464,"title":{},"body":{"index.html":{}}}],["running",{"_index":326,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["rxjs",{"_index":1033,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/LogoutInterceptor.html":{},"injectables/SendChampService.html":{},"injectables/TermiiService.html":{},"injectables/TransformResponseInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1035,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["s3",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["s3_bucket_aws",{"_index":747,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["salert",{"_index":1856,"title":{},"body":{"injectables/SendChampService.html":{}}}],["salt",{"_index":2212,"title":{},"body":{"modules/UserModule.html":{}}}],["same",{"_index":859,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["saved",{"_index":1738,"title":{},"body":{"injectables/RoleService.html":{}}}],["scalable",{"_index":2453,"title":{},"body":{"index.html":{}}}],["schema",{"_index":168,"title":{},"body":{"classes/ApiRoute.html":{},"modules/AuthModule.html":{},"classes/ErrorMessages.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"modules/LoanModule.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["schema.index",{"_index":545,"title":{},"body":{"modules/AuthModule.html":{}}}],["schema.pre('save",{"_index":2201,"title":{},"body":{"modules/UserModule.html":{}}}],["schemafactory",{"_index":169,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(apiroute",{"_index":173,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(loan",{"_index":987,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(otp",{"_index":1010,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(refreshtoken",{"_index":1021,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1072,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1124,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemaoptions",{"_index":163,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sdk/client",{"_index":1311,"title":{},"body":{"modules/MailModule.html":{},"dependencies.html":{}}}],["search",{"_index":137,"title":{},"body":{"classes/ApiResponse.html":{},"classes/GetUsersDto.html":{},"classes/IUser.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/User.html":{}}}],["seconds",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["secret",{"_index":551,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TokenService.html":{}}}],["secret_key_aws",{"_index":748,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["secrethash",{"_index":1860,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["secretorkey",{"_index":120,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["seed",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":1121,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["selectfromenum",{"_index":2308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectoptions",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectoptions.push",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["send",{"_index":1343,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"injectables/SmsService.html":{},"classes/VerifyOtpDto.html":{}}}],["send(payload",{"_index":1348,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["send(undefined",{"_index":1900,"title":{},"body":{"injectables/SmsService.html":{}}}],["sendchamp",{"_index":1775,"title":{},"body":{"controllers/SendChampController.html":{},"injectables/SmsService.html":{},"miscellaneous/enumerations.html":{}}}],["sendchamp.service",{"_index":1815,"title":{},"body":{"modules/SendChampModule.html":{}}}],["sendchamp_public_key",{"_index":749,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["sendchampauthorization",{"_index":1824,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["sendchampbalance",{"_index":1931,"title":{},"body":{"injectables/SmsService.html":{}}}],["sendchampcansend",{"_index":1892,"title":{},"body":{"injectables/SmsService.html":{}}}],["sendchampcontroller",{"_index":1773,"title":{"controllers/SendChampController.html":{}},"body":{"controllers/SendChampController.html":{},"modules/SendChampModule.html":{},"coverage.html":{}}}],["sendchamperror",{"_index":1791,"title":{"interfaces/SendChampError.html":{}},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"coverage.html":{}}}],["sendchampmodule",{"_index":224,"title":{"modules/SendChampModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules.html":{},"overview.html":{}}}],["sendchampservice",{"_index":1782,"title":{"injectables/SendChampService.html":{}},"body":{"controllers/SendChampController.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"coverage.html":{},"overview.html":{}}}],["sendchampsmsrouteenum",{"_index":1803,"title":{},"body":{"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["sendchampsmsrouteenum.dnd",{"_index":1857,"title":{},"body":{"injectables/SendChampService.html":{}}}],["sendchampsmssent",{"_index":1796,"title":{},"body":{"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sendchampsmswalletbalance",{"_index":1807,"title":{"interfaces/SendChampSmsWalletBalance.html":{}},"body":{"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"coverage.html":{}}}],["sendchampsuccess",{"_index":1795,"title":{"interfaces/SendChampSuccess.html":{}},"body":{"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"coverage.html":{}}}],["sendchampurl",{"_index":1820,"title":{},"body":{"injectables/SendChampService.html":{}}}],["sendchampwebhookevent",{"_index":1778,"title":{"interfaces/SendchampWebhookEvent.html":{}},"body":{"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"coverage.html":{}}}],["sender_name",{"_index":1855,"title":{},"body":{"injectables/SendChampService.html":{}}}],["sendmail",{"_index":1367,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["sendmailpayload",{"_index":1349,"title":{"interfaces/SendMailPayload.html":{}},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"coverage.html":{}}}],["sendotp",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{}}}],["sendotp(@headers",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendotp(body",{"_index":1439,"title":{},"body":{"injectables/OtpService.html":{}}}],["sendotp(headers",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendotp(options",{"_index":1351,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["sendotpdto",{"_index":416,"title":{"classes/SendOtpDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/OtpService.html":{},"classes/SendOtpDto.html":{},"classes/VerifyOtpDto.html":{},"coverage.html":{}}}],["sendotpdto:64",{"_index":2243,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["sendotpdto:68",{"_index":2242,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["sendotpdto:76",{"_index":2244,"title":{},"body":{"classes/VerifyOtpDto.html":{}}}],["sendrawemailcommand",{"_index":1310,"title":{},"body":{"modules/MailModule.html":{}}}],["sendsms",{"_index":1825,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["sendsms(to",{"_index":1838,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{}}}],["sendwelcomeemail",{"_index":1344,"title":{},"body":{"injectables/MailService.html":{}}}],["sendwelcomeemail(to",{"_index":1353,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["sent",{"_index":853,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/SmsService.html":{},"classes/SuccessMessages.html":{}}}],["sentence",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentence.charat(0).touppercase",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentence.slice(1",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentencecase",{"_index":2328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sentencecase(word",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/cli",{"_index":2363,"title":{},"body":{"dependencies.html":{}}}],["sentry/nestjs",{"_index":2365,"title":{},"body":{"dependencies.html":{}}}],["sentry/nestjs/setup",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["sentry/profiling",{"_index":2367,"title":{},"body":{"dependencies.html":{}}}],["sentry_auth_token",{"_index":750,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["sentry_dsn",{"_index":751,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["sentryconfig",{"_index":2269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sentryglobalfilter",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["sentrymodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["sentrymodule.forroot",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["serve",{"_index":1399,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["server",{"_index":2454,"title":{},"body":{"index.html":{}}}],["service",{"_index":1398,"title":{},"body":{"injectables/OptionalAuthGuard.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["ses",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"modules/MailModule.html":{},"classes/ReadinessCheckResponseDto.html":{},"dependencies.html":{}}}],["sesclient",{"_index":1309,"title":{},"body":{"modules/MailModule.html":{}}}],["sesclient(awsconfig",{"_index":1321,"title":{},"body":{"modules/MailModule.html":{}}}],["session",{"_index":542,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{}}}],["session.aborttransaction",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["session.committransaction",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["session.endsession",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["session.starttransaction",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["set",{"_index":647,"title":{},"body":{"injectables/CacheService.html":{},"classes/EnvironmentVariables.html":{}}}],["set(key",{"_index":654,"title":{},"body":{"injectables/CacheService.html":{}}}],["setapiroutes",{"_index":1681,"title":{},"body":{"injectables/RoleService.html":{}}}],["setapiroutes(availableroutes",{"_index":1700,"title":{},"body":{"injectables/RoleService.html":{}}}],["setmetadata(bypass_response_transform",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setpassword",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["setpassword(@headers",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{}}}],["setpassword(body",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["setpassword(headers",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["setpassworddto",{"_index":420,"title":{"classes/SetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SetPasswordDto.html":{},"coverage.html":{}}}],["settimeout(resolve",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupcors",{"_index":2260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupcors(app",{"_index":2440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswagger",{"_index":2271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":2443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvalidation",{"_index":2273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupvalidation(app",{"_index":2444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["short",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorMessages.html":{}}}],["side",{"_index":2455,"title":{},"body":{"index.html":{}}}],["signature",{"_index":1862,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["signoptions",{"_index":552,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TokenService.html":{}}}],["skip",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip((page",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skipmissingproperties",{"_index":789,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["sleep",{"_index":1917,"title":{},"body":{"injectables/SmsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slot",{"_index":1479,"title":{},"body":{"injectables/OtpService.html":{}}}],["sms",{"_index":1913,"title":{},"body":{"injectables/SmsService.html":{},"injectables/TermiiService.html":{},"miscellaneous/enumerations.html":{}}}],["sms/send",{"_index":1854,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["sms/sendchamp/sendchamp.controller",{"_index":1818,"title":{},"body":{"modules/SendChampModule.html":{}}}],["sms/sendchamp/sendchamp.interface",{"_index":1784,"title":{},"body":{"controllers/SendChampController.html":{},"injectables/SendChampService.html":{}}}],["sms/sendchamp/sendchamp.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/SmsModule.html":{}}}],["sms/sendchamp/sendchamp.service",{"_index":1783,"title":{},"body":{"controllers/SendChampController.html":{},"injectables/SmsService.html":{}}}],["sms/sms.module",{"_index":1419,"title":{},"body":{"modules/OtpModule.html":{}}}],["sms/sms.service",{"_index":1454,"title":{},"body":{"injectables/OtpService.html":{},"modules/SmsModule.html":{}}}],["sms/termii/termii.controller",{"_index":2014,"title":{},"body":{"modules/TermiiModule.html":{}}}],["sms/termii/termii.interface",{"_index":2006,"title":{},"body":{"controllers/TermiiController.html":{},"injectables/TermiiService.html":{}}}],["sms/termii/termii.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/SmsModule.html":{}}}],["sms/termii/termii.service",{"_index":1919,"title":{},"body":{"injectables/SmsService.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{}}}],["sms_uid",{"_index":1810,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["smsmodule",{"_index":1416,"title":{"modules/SmsModule.html":{}},"body":{"modules/OtpModule.html":{},"modules/SmsModule.html":{},"modules.html":{},"overview.html":{}}}],["smsprice",{"_index":1939,"title":{},"body":{"injectables/SmsService.html":{}}}],["smsproviderenum",{"_index":1910,"title":{},"body":{"injectables/SmsService.html":{},"miscellaneous/enumerations.html":{}}}],["smsproviderenum.sendchamp",{"_index":1944,"title":{},"body":{"injectables/SmsService.html":{}}}],["smsproviderenum.termii",{"_index":1945,"title":{},"body":{"injectables/SmsService.html":{}}}],["smsservice",{"_index":1429,"title":{"injectables/SmsService.html":{}},"body":{"injectables/OtpService.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"coverage.html":{},"overview.html":{}}}],["smssuccessmessage",{"_index":1893,"title":{},"body":{"injectables/SmsService.html":{}}}],["sort",{"_index":870,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/SortQueryConstraint.html":{},"miscellaneous/variables.html":{}}}],["sort.endswith(',asc",{"_index":1967,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["sort.endswith(',desc",{"_index":1968,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["sort.split",{"_index":1966,"title":{},"body":{"injectables/SortQueryConstraint.html":{},"miscellaneous/variables.html":{}}}],["sort_order_error",{"_index":814,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["sortfield",{"_index":820,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["sortfield(fields",{"_index":885,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["sortorder",{"_index":1965,"title":{},"body":{"injectables/SortQueryConstraint.html":{},"miscellaneous/variables.html":{}}}],["sortorder.endswith(',desc",{"_index":1969,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["sortqueryconstraint",{"_index":1956,"title":{"injectables/SortQueryConstraint.html":{}},"body":{"injectables/SortQueryConstraint.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateLoanDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"modules/GoogleModule.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"modules/LoanModule.html":{},"injectables/LoanService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LogoutInterceptor.html":{},"modules/MailModule.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"injectables/OptionalAuthGuard.html":{},"classes/Otp.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"modules/SendChampModule.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateLoanDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"index.html":{}}}],["space",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sparse",{"_index":1005,"title":{},"body":{"classes/IOtp.html":{},"classes/IUser.html":{},"classes/Otp.html":{},"classes/User.html":{}}}],["split",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":2480,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":2392,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":2424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.helper.ts",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base64.helper.ts",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bypass",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cache.constant.ts",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cors.config.ts",{"_index":2428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../date.helper.ts",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decorator",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../document.interface.ts",{"_index":2510,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../enum.helper.ts",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.config.ts",{"_index":2425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.enum.ts",{"_index":2394,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.validation.ts",{"_index":2437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../fields",{"_index":2427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../filter.helper.ts",{"_index":2509,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.helper.ts",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.validation.ts",{"_index":2430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../loan.enum.ts",{"_index":2398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../loan.schema.ts",{"_index":2511,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mobile.helper.ts",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../not",{"_index":2431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../otp.enum.ts",{"_index":2399,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../otp.schema.ts",{"_index":2512,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../pagination.decorator.ts",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../promises.helper.ts",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../refresh",{"_index":2513,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../regex.constant.ts",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../responder.helper.ts",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":2514,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../routes.config.ts",{"_index":2436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../schema.constant.ts",{"_index":2432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../send",{"_index":2429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sendchamp.interface.ts",{"_index":2400,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../sentry.config.ts",{"_index":2433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sms.service.ts",{"_index":2395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../string.helper.ts",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":2434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../termii.interface.ts",{"_index":2401,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../uploads.helper.ts",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.enum.ts",{"_index":2397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.schema.ts",{"_index":2515,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../validation.config.ts",{"_index":2435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validation.helper.ts",{"_index":2438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/_common/config/app",{"_index":2255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/config/cors.config.ts",{"_index":2258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/config/environment.config.ts",{"_index":2261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/config/routes.config.ts",{"_index":2266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/config/sentry.config.ts",{"_index":2268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/config/swagger.config.ts",{"_index":2270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/config/validation.config.ts",{"_index":2272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/constants/cache.constant.ts",{"_index":2274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/constants/decorator",{"_index":2277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/constants/error",{"_index":793,"title":{},"body":{"classes/ErrorMessages.html":{},"coverage.html":{}}}],["src/_common/constants/regex.constant.ts",{"_index":2282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/constants/schema.constant.ts",{"_index":2285,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/constants/success",{"_index":1973,"title":{},"body":{"classes/SuccessMessages.html":{},"coverage.html":{}}}],["src/_common/decorators/bypass",{"_index":2287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/decorators/get",{"_index":2290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/decorators/pagination.decorator.ts",{"_index":2292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/dtos/email.dto.ts",{"_index":733,"title":{},"body":{"classes/EmailDto.html":{},"coverage.html":{}}}],["src/_common/dtos/email.dto.ts:8",{"_index":735,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/_common/dtos/id.dto.ts",{"_index":1126,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["src/_common/dtos/id.dto.ts:7",{"_index":1128,"title":{},"body":{"classes/IdDto.html":{}}}],["src/_common/dtos/mobile",{"_index":1372,"title":{},"body":{"classes/MobileNumberDto.html":{},"coverage.html":{}}}],["src/_common/dtos/response.dto.ts",{"_index":125,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"coverage.html":{}}}],["src/_common/dtos/response.dto.ts:15",{"_index":1533,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/_common/dtos/response.dto.ts:20",{"_index":1531,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/_common/dtos/response.dto.ts:25",{"_index":1532,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/_common/dtos/response.dto.ts:29",{"_index":1539,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/_common/dtos/response.dto.ts:30",{"_index":1538,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/_common/dtos/response.dto.ts:31",{"_index":1536,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/_common/dtos/response.dto.ts:32",{"_index":1534,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/_common/dtos/response.dto.ts:33",{"_index":1535,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/_common/dtos/response.dto.ts:34",{"_index":1537,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/_common/dtos/response.dto.ts:38",{"_index":1530,"title":{},"body":{"classes/Pagination.html":{}}}],["src/_common/dtos/response.dto.ts:5",{"_index":1371,"title":{},"body":{"classes/MessageDto.html":{}}}],["src/_common/dtos/response.dto.ts:9",{"_index":129,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/_common/enums/api",{"_index":2402,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/_common/enums/environment.enum.ts",{"_index":2404,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/_common/filters/all.exception.filter.ts",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/_common/filters/all.exception.filter.ts:12",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/_common/helpers/auth.helper.ts",{"_index":2297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/base64.helper.ts",{"_index":2298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/date.helper.ts",{"_index":2301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/enum.helper.ts",{"_index":2306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/filter.helper.ts",{"_index":2309,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/http.helper.ts",{"_index":2321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/mobile.helper.ts",{"_index":2322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/promises.helper.ts",{"_index":2323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/responder.helper.ts",{"_index":2324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/string.helper.ts",{"_index":2325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/uploads.helper.ts",{"_index":2329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/helpers/validation.helper.ts",{"_index":2331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/interceptors/logout.interceptor.ts",{"_index":1291,"title":{},"body":{"injectables/LogoutInterceptor.html":{},"coverage.html":{}}}],["src/_common/interceptors/logout.interceptor.ts:13",{"_index":1293,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["src/_common/interceptors/logout.interceptor.ts:16",{"_index":1295,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["src/_common/interceptors/transform.interceptor.ts",{"_index":1024,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["src/_common/interceptors/transform.interceptor.ts:19",{"_index":2128,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["src/_common/interceptors/transform.interceptor.ts:24",{"_index":2129,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["src/_common/interfaces/document.interface.ts",{"_index":2333,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/_common/interfaces/dropdown.interface.ts",{"_index":729,"title":{},"body":{"classes/DropDownOption.html":{},"coverage.html":{}}}],["src/_common/interfaces/dropdown.interface.ts:12",{"_index":732,"title":{},"body":{"classes/DropDownOption.html":{}}}],["src/_common/interfaces/dropdown.interface.ts:7",{"_index":731,"title":{},"body":{"classes/DropDownOption.html":{}}}],["src/_common/middleware/proxy.middleware.ts",{"_index":1548,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"coverage.html":{}}}],["src/_common/middleware/proxy.middleware.ts:6",{"_index":1551,"title":{},"body":{"injectables/ProxyMiddleware.html":{}}}],["src/_common/middleware/redirect.middleware.ts",{"_index":1567,"title":{},"body":{"injectables/RedirectMiddleware.html":{},"coverage.html":{}}}],["src/_common/middleware/redirect.middleware.ts:7",{"_index":1569,"title":{},"body":{"injectables/RedirectMiddleware.html":{}}}],["src/_common/schemas/owner.schema.ts",{"_index":1517,"title":{},"body":{"injectables/Owner.html":{},"coverage.html":{}}}],["src/_common/schemas/owner.schema.ts:18",{"_index":1520,"title":{},"body":{"injectables/Owner.html":{}}}],["src/_common/schemas/owner.schema.ts:27",{"_index":1521,"title":{},"body":{"injectables/Owner.html":{}}}],["src/_common/services/cache.service.ts",{"_index":646,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/_common/services/cache.service.ts:11",{"_index":655,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/_common/services/cache.service.ts:15",{"_index":652,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/_common/services/cache.service.ts:8",{"_index":649,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/_common/validations/environment.validation.ts",{"_index":738,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/validations/environment.validation.ts:13",{"_index":761,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:16",{"_index":758,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:19",{"_index":756,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:22",{"_index":764,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:25",{"_index":759,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:28",{"_index":765,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:31",{"_index":768,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:34",{"_index":767,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:37",{"_index":771,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:40",{"_index":757,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:43",{"_index":770,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:46",{"_index":769,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:51",{"_index":755,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:55",{"_index":766,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/environment.validation.ts:59",{"_index":763,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/_common/validations/fields",{"_index":909,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/validations/id.validation.ts",{"_index":2219,"title":{},"body":{"injectables/ValidIdConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/validations/id.validation.ts:14",{"_index":2223,"title":{},"body":{"injectables/ValidIdConstraint.html":{}}}],["src/_common/validations/id.validation.ts:16",{"_index":2222,"title":{},"body":{"injectables/ValidIdConstraint.html":{}}}],["src/_common/validations/id.validation.ts:29",{"_index":2220,"title":{},"body":{"injectables/ValidIdConstraint.html":{}}}],["src/_common/validations/mobile.validation.ts",{"_index":2229,"title":{},"body":{"injectables/ValidMobileNumber.html":{},"coverage.html":{}}}],["src/_common/validations/mobile.validation.ts:13",{"_index":2233,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["src/_common/validations/mobile.validation.ts:15",{"_index":2232,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["src/_common/validations/mobile.validation.ts:28",{"_index":2230,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["src/_common/validations/not",{"_index":1379,"title":{},"body":{"classes/NotEqualToConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/validations/payload",{"_index":1541,"title":{},"body":{"classes/PayloadExistsPipe.html":{},"coverage.html":{}}}],["src/_common/validations/sort",{"_index":1957,"title":{},"body":{"injectables/SortQueryConstraint.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:94",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":296,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"coverage.html":{}}}],["src/app.service.ts:17",{"_index":1565,"title":{},"body":{"classes/ReadinessCheckResponseDto.html":{}}}],["src/app.service.ts:20",{"_index":1564,"title":{},"body":{"classes/ReadinessCheckResponseDto.html":{}}}],["src/app.service.ts:25",{"_index":304,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:33",{"_index":305,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:43",{"_index":306,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:102",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:108",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:117",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:123",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:129",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:47",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:60",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:67",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:79",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:88",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:95",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dtos/auth.dto.ts",{"_index":6,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"coverage.html":{}}}],["src/auth/dtos/auth.dto.ts:12",{"_index":559,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/auth/dtos/auth.dto.ts:14",{"_index":554,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/auth/dtos/auth.dto.ts:19",{"_index":557,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/auth/dtos/auth.dto.ts:24",{"_index":556,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/auth/dtos/auth.dto.ts:28",{"_index":644,"title":{},"body":{"classes/AuthSuccessResponse.html":{}}}],["src/auth/dtos/auth.dto.ts:29",{"_index":643,"title":{},"body":{"classes/AuthSuccessResponse.html":{}}}],["src/auth/dtos/auth.dto.ts:33",{"_index":1584,"title":{},"body":{"classes/RefreshTokenPayload.html":{}}}],["src/auth/dtos/auth.dto.ts:34",{"_index":1583,"title":{},"body":{"classes/RefreshTokenPayload.html":{}}}],["src/auth/dtos/auth.dto.ts:38",{"_index":18,"title":{},"body":{"classes/AccessTokenPayload.html":{}}}],["src/auth/dtos/auth.dto.ts:7",{"_index":558,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/auth/dtos/change",{"_index":660,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dtos/google",{"_index":942,"title":{},"body":{"classes/GoogleLoginDto.html":{},"coverage.html":{}}}],["src/auth/dtos/login.dto.ts",{"_index":1289,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dtos/refresh",{"_index":1579,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dtos/set",{"_index":1877,"title":{},"body":{"classes/SetPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dtos/update",{"_index":2133,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":1162,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":1277,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/optional",{"_index":1386,"title":{},"body":{"injectables/OptionalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/role.guard.ts",{"_index":1642,"title":{},"body":{"injectables/RoleGuard.html":{},"coverage.html":{}}}],["src/auth/guards/role.guard.ts:13",{"_index":1645,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["src/auth/schemas/refresh",{"_index":1014,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/auth/services/auth.service.ts",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:118",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:147",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:156",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:162",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:167",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:26",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:36",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:59",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:83",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/token.service.ts",{"_index":2039,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{}}}],["src/auth/services/token.service.ts:116",{"_index":2080,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:137",{"_index":2057,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:152",{"_index":2061,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:175",{"_index":2059,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:183",{"_index":2076,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:191",{"_index":2063,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:195",{"_index":2065,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:202",{"_index":2078,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:214",{"_index":2074,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:228",{"_index":2070,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:26",{"_index":2085,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:29",{"_index":2055,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:40",{"_index":2067,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:44",{"_index":2072,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/services/token.service.ts:92",{"_index":2069,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/auth/strategies/anonymous.strategy.ts",{"_index":96,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/anonymous.strategy.ts:17",{"_index":104,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["src/auth/strategies/anonymous.strategy.ts:8",{"_index":103,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1170,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:11",{"_index":1171,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:26",{"_index":1173,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1279,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":1283,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":1281,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/google/google.module.ts",{"_index":949,"title":{},"body":{"modules/GoogleModule.html":{}}}],["src/google/google.service.ts",{"_index":951,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{}}}],["src/google/google.service.ts:6",{"_index":956,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/google/google.service.ts:8",{"_index":955,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/loan/dto/create",{"_index":683,"title":{},"body":{"classes/CreateLoanDto.html":{},"coverage.html":{}}}],["src/loan/dto/update",{"_index":2130,"title":{},"body":{"classes/UpdateLoanDto.html":{},"coverage.html":{}}}],["src/loan/loan.controller.ts",{"_index":1188,"title":{},"body":{"controllers/LoanController.html":{},"coverage.html":{}}}],["src/loan/loan.controller.ts:33",{"_index":1195,"title":{},"body":{"controllers/LoanController.html":{}}}],["src/loan/loan.controller.ts:38",{"_index":1198,"title":{},"body":{"controllers/LoanController.html":{}}}],["src/loan/loan.controller.ts:43",{"_index":1209,"title":{},"body":{"controllers/LoanController.html":{}}}],["src/loan/loan.controller.ts:52",{"_index":1205,"title":{},"body":{"controllers/LoanController.html":{}}}],["src/loan/loan.controller.ts:58",{"_index":1201,"title":{},"body":{"controllers/LoanController.html":{}}}],["src/loan/loan.enum.ts",{"_index":2411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/loan/loan.module.ts",{"_index":1234,"title":{},"body":{"modules/LoanModule.html":{}}}],["src/loan/loan.service.ts",{"_index":1238,"title":{},"body":{"injectables/LoanService.html":{},"coverage.html":{}}}],["src/loan/loan.service.ts:12",{"_index":1242,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/loan/loan.service.ts:18",{"_index":1244,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/loan/loan.service.ts:27",{"_index":1248,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/loan/loan.service.ts:47",{"_index":1246,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/loan/loan.service.ts:60",{"_index":1251,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/loan/loan.service.ts:68",{"_index":1249,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/loan/schemas/loan.schema.ts",{"_index":965,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/loan/schemas/loan.schema.ts:14",{"_index":1181,"title":{},"body":{"classes/Loan.html":{}}}],["src/loan/schemas/loan.schema.ts:20",{"_index":1182,"title":{},"body":{"classes/Loan.html":{}}}],["src/loan/schemas/loan.schema.ts:28",{"_index":1180,"title":{},"body":{"classes/Loan.html":{}}}],["src/loan/schemas/loan.schema.ts:34",{"_index":1186,"title":{},"body":{"classes/Loan.html":{}}}],["src/loan/schemas/loan.schema.ts:39",{"_index":1183,"title":{},"body":{"classes/Loan.html":{}}}],["src/loan/schemas/loan.schema.ts:46",{"_index":1184,"title":{},"body":{"classes/Loan.html":{}}}],["src/loan/schemas/loan.schema.ts:52",{"_index":1185,"title":{},"body":{"classes/Loan.html":{}}}],["src/loan/schemas/loan.schema.ts:55",{"_index":971,"title":{},"body":{"classes/ILoan.html":{}}}],["src/mail/dtos/mail",{"_index":1336,"title":{},"body":{"classes/MailOtpDto.html":{},"coverage.html":{}}}],["src/mail/mail.module.ts",{"_index":1306,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1342,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:18",{"_index":1357,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:19",{"_index":1347,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:26",{"_index":1352,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:47",{"_index":1354,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:63",{"_index":1350,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":2340,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/otp/dtos/send",{"_index":1132,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/otp/dtos/verify",{"_index":2239,"title":{},"body":{"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{}}}],["src/otp/otp.enum.ts",{"_index":2418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/otp/otp.module.ts",{"_index":1417,"title":{},"body":{"modules/OtpModule.html":{}}}],["src/otp/otp.service.ts",{"_index":1421,"title":{},"body":{"injectables/OtpService.html":{},"coverage.html":{}}}],["src/otp/otp.service.ts:110",{"_index":1447,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:122",{"_index":1434,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:130",{"_index":1442,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:158",{"_index":1432,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:179",{"_index":1436,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:189",{"_index":1446,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:223",{"_index":1444,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:27",{"_index":1451,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:277",{"_index":1438,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:29",{"_index":1430,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:39",{"_index":1440,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/schemas/otp.schema.ts",{"_index":989,"title":{},"body":{"classes/IOtp.html":{},"classes/Otp.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/otp/schemas/otp.schema.ts:14",{"_index":1411,"title":{},"body":{"classes/Otp.html":{}}}],["src/otp/schemas/otp.schema.ts:21",{"_index":1405,"title":{},"body":{"classes/Otp.html":{}}}],["src/otp/schemas/otp.schema.ts:29",{"_index":1406,"title":{},"body":{"classes/Otp.html":{}}}],["src/otp/schemas/otp.schema.ts:34",{"_index":1408,"title":{},"body":{"classes/Otp.html":{}}}],["src/otp/schemas/otp.schema.ts:41",{"_index":1409,"title":{},"body":{"classes/Otp.html":{}}}],["src/otp/schemas/otp.schema.ts:47",{"_index":1407,"title":{},"body":{"classes/Otp.html":{}}}],["src/otp/schemas/otp.schema.ts:52",{"_index":1410,"title":{},"body":{"classes/Otp.html":{}}}],["src/otp/schemas/otp.schema.ts:56",{"_index":993,"title":{},"body":{"classes/IOtp.html":{}}}],["src/role/dtos/api",{"_index":178,"title":{},"body":{"classes/ApiRouteDto.html":{},"coverage.html":{}}}],["src/role/dtos/assign",{"_index":362,"title":{},"body":{"classes/AssignRoleDto.html":{},"coverage.html":{}}}],["src/role/dtos/create",{"_index":686,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/role/dtos/update",{"_index":2135,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/role/role.controller.ts",{"_index":1590,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/role/role.controller.ts:100",{"_index":1609,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:37",{"_index":1598,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:46",{"_index":1604,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:55",{"_index":1616,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:68",{"_index":1601,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:81",{"_index":1612,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:91",{"_index":1606,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.module.ts",{"_index":1673,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":1677,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:109",{"_index":1690,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:126",{"_index":1705,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:137",{"_index":1694,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:152",{"_index":1697,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:176",{"_index":1689,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:18",{"_index":1686,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:184",{"_index":1699,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:192",{"_index":1709,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:221",{"_index":1707,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:238",{"_index":1692,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:244",{"_index":1695,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:28",{"_index":1701,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:54",{"_index":1687,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:60",{"_index":1704,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/schemas/api",{"_index":150,"title":{},"body":{"classes/ApiRoute.html":{},"classes/IApiRoute.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/role/schemas/role.schema.ts",{"_index":1057,"title":{},"body":{"classes/IRole.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/role/schemas/role.schema.ts:18",{"_index":1587,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schemas/role.schema.ts:27",{"_index":1586,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schemas/role.schema.ts:50",{"_index":1585,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schemas/role.schema.ts:59",{"_index":1588,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schemas/role.schema.ts:65",{"_index":1058,"title":{},"body":{"classes/IRole.html":{}}}],["src/sms/sendchamp/sendchamp.controller.ts",{"_index":1774,"title":{},"body":{"controllers/SendChampController.html":{},"coverage.html":{}}}],["src/sms/sendchamp/sendchamp.controller.ts:23",{"_index":1780,"title":{},"body":{"controllers/SendChampController.html":{}}}],["src/sms/sendchamp/sendchamp.interface.ts",{"_index":1792,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/sms/sendchamp/sendchamp.module.ts",{"_index":1814,"title":{},"body":{"modules/SendChampModule.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts",{"_index":1819,"title":{},"body":{"injectables/SendChampService.html":{},"coverage.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts:104",{"_index":1837,"title":{},"body":{"injectables/SendChampService.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts:108",{"_index":1834,"title":{},"body":{"injectables/SendChampService.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts:18",{"_index":1841,"title":{},"body":{"injectables/SendChampService.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts:19",{"_index":1828,"title":{},"body":{"injectables/SendChampService.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts:26",{"_index":1829,"title":{},"body":{"injectables/SendChampService.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts:51",{"_index":1839,"title":{},"body":{"injectables/SendChampService.html":{}}}],["src/sms/sendchamp/sendchamp.service.ts:75",{"_index":1831,"title":{},"body":{"injectables/SendChampService.html":{}}}],["src/sms/sms.module.ts",{"_index":1884,"title":{},"body":{"modules/SmsModule.html":{}}}],["src/sms/sms.service.ts",{"_index":1885,"title":{},"body":{"injectables/SmsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/sms/sms.service.ts:143",{"_index":1899,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:25",{"_index":1908,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:26",{"_index":1906,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:27",{"_index":1904,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:28",{"_index":1915,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:29",{"_index":1909,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:30",{"_index":1912,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:31",{"_index":1916,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:32",{"_index":1911,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:33",{"_index":1902,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:34",{"_index":1898,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:43",{"_index":1901,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/termii/termii.controller.ts",{"_index":2003,"title":{},"body":{"controllers/TermiiController.html":{},"coverage.html":{}}}],["src/sms/termii/termii.controller.ts:23",{"_index":2005,"title":{},"body":{"controllers/TermiiController.html":{}}}],["src/sms/termii/termii.interface.ts",{"_index":1991,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/sms/termii/termii.module.ts",{"_index":2013,"title":{},"body":{"modules/TermiiModule.html":{}}}],["src/sms/termii/termii.service.ts",{"_index":2015,"title":{},"body":{"injectables/TermiiService.html":{},"coverage.html":{}}}],["src/sms/termii/termii.service.ts:103",{"_index":2022,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/sms/termii/termii.service.ts:107",{"_index":2021,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/sms/termii/termii.service.ts:117",{"_index":2024,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/sms/termii/termii.service.ts:18",{"_index":2026,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/sms/termii/termii.service.ts:19",{"_index":2018,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/sms/termii/termii.service.ts:26",{"_index":2019,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/sms/termii/termii.service.ts:53",{"_index":2023,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/sms/termii/termii.service.ts:74",{"_index":2020,"title":{},"body":{"injectables/TermiiService.html":{}}}],["src/user/dtos/create",{"_index":707,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dtos/get",{"_index":935,"title":{},"body":{"classes/GetUsersDto.html":{},"coverage.html":{}}}],["src/user/dtos/update",{"_index":2137,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/schemas/user.schema.ts",{"_index":1074,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/user.schema.ts:100",{"_index":2164,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:108",{"_index":2160,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:113",{"_index":2161,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:116",{"_index":2148,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:122",{"_index":2149,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:129",{"_index":2158,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:132",{"_index":1085,"title":{},"body":{"classes/IUser.html":{}}}],["src/user/schemas/user.schema.ts:133",{"_index":1086,"title":{},"body":{"classes/IUser.html":{}}}],["src/user/schemas/user.schema.ts:134",{"_index":1087,"title":{},"body":{"classes/IUser.html":{}}}],["src/user/schemas/user.schema.ts:15",{"_index":2152,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:21",{"_index":2154,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:30",{"_index":2150,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:38",{"_index":2162,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:43",{"_index":2151,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:48",{"_index":2156,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:53",{"_index":2159,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:61",{"_index":2155,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:67",{"_index":2157,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:73",{"_index":2153,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:83",{"_index":2163,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":2166,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:33",{"_index":2175,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:41",{"_index":2172,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:49",{"_index":2178,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.enum.ts",{"_index":2408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/user.module.ts",{"_index":2195,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"injectables/OtpService.html":{},"index.html":{}}}],["start:dev",{"_index":2467,"title":{},"body":{"index.html":{}}}],["started",{"_index":2447,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2459,"title":{},"body":{"index.html":{}}}],["startofday(mindate",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["starttest",{"_index":2469,"title":{},"body":{"index.html":{}}}],["state",{"_index":1114,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["statements",{"_index":2254,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":795,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/SuccessMessages.html":{}}}],["status",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"interfaces/IResponse.html":{},"classes/ReadinessCheckResponseDto.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["statuscode",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["stay",{"_index":2486,"title":{},"body":{"index.html":{}}}],["str",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":111,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stream",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream.push(buffer",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream.push(null",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strict",{"_index":1329,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(token.id",{"_index":2097,"title":{},"body":{"injectables/TokenService.html":{}}}],["string(user.id",{"_index":2101,"title":{},"body":{"injectables/TokenService.html":{}}}],["string(userid",{"_index":2096,"title":{},"body":{"injectables/TokenService.html":{}}}],["string})@prop({default",{"_index":1107,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["string})@prop({type",{"_index":1519,"title":{},"body":{"injectables/Owner.html":{}}}],["sub_domain_regex",{"_index":2284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["subid",{"_index":2119,"title":{},"body":{"injectables/TokenService.html":{}}}],["subject",{"_index":13,"title":{},"body":{"classes/AccessTokenPayload.html":{},"injectables/AppService.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshTokenPayload.html":{},"interfaces/SendMailPayload.html":{},"injectables/TokenService.html":{}}}],["subscribed",{"_index":1975,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["subscribing",{"_index":1981,"title":{},"body":{"classes/SuccessMessages.html":{}}}],["success",{"_index":1051,"title":{},"body":{"interfaces/IResponse.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/TransformResponseInterceptor.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":1914,"title":{},"body":{"injectables/SmsService.html":{}}}],["successmessages",{"_index":593,"title":{"classes/SuccessMessages.html":{}},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{},"classes/SuccessMessages.html":{},"coverage.html":{}}}],["successmessages.otpsent(otpdocument.value",{"_index":1484,"title":{},"body":{"injectables/OtpService.html":{}}}],["successmessages.otpverified(body.value",{"_index":1487,"title":{},"body":{"injectables/OtpService.html":{}}}],["super",{"_index":115,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"classes/CreateRoleDto.html":{},"classes/IRole.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Role.html":{},"injectables/RoleGuard.html":{}}}],["super.canactivate(context",{"_index":1169,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RoleGuard.html":{}}}],["super_admin",{"_index":706,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["support",{"_index":2481,"title":{},"body":{"index.html":{},"modules.html":{}}}],["support_email",{"_index":752,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["sure",{"_index":1523,"title":{},"body":{"injectables/Owner.html":{}}}],["svg",{"_index":2497,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1142,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"injectables/OtpService.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/TermiiService.html":{}}}],["sync",{"_index":1737,"title":{},"body":{"injectables/RoleService.html":{}}}],["syncapiroutes",{"_index":1682,"title":{},"body":{"injectables/RoleService.html":{}}}],["syncapiroutes(apiroutes",{"_index":1703,"title":{},"body":{"injectables/RoleService.html":{}}}],["syncroutes",{"_index":2267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["syncroutes(app",{"_index":2445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["t",{"_index":128,"title":{},"body":{"classes/ApiResponse.html":{},"injectables/CacheService.html":{},"interfaces/IResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{},"injectables/TransformResponseInterceptor.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["tags.enum",{"_index":195,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/SendChampController.html":{},"controllers/TermiiController.html":{},"controllers/UserController.html":{}}}],["tags.enum.ts",{"_index":2393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["target",{"_index":930,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"injectables/ProxyMiddleware.html":{},"classes/SendOtpDto.html":{},"injectables/ValidIdConstraint.html":{}}}],["template",{"_index":1324,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["templates/mail/pages",{"_index":1327,"title":{},"body":{"modules/MailModule.html":{}}}],["templates/mail/partials",{"_index":1331,"title":{},"body":{"modules/MailModule.html":{}}}],["termii",{"_index":1923,"title":{},"body":{"injectables/SmsService.html":{},"controllers/TermiiController.html":{},"miscellaneous/enumerations.html":{}}}],["termii_api_key",{"_index":753,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["termiiapikey",{"_index":2017,"title":{},"body":{"injectables/TermiiService.html":{}}}],["termiibalance",{"_index":1932,"title":{},"body":{"injectables/SmsService.html":{}}}],["termiibalancesuccess",{"_index":1990,"title":{"interfaces/TermiiBalanceSuccess.html":{}},"body":{"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"coverage.html":{}}}],["termiicansend",{"_index":1894,"title":{},"body":{"injectables/SmsService.html":{}}}],["termiicontroller",{"_index":2002,"title":{"controllers/TermiiController.html":{}},"body":{"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"coverage.html":{}}}],["termiimodule",{"_index":225,"title":{"modules/TermiiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules.html":{},"overview.html":{}}}],["termiiservice",{"_index":1897,"title":{"injectables/TermiiService.html":{}},"body":{"injectables/SmsService.html":{},"controllers/TermiiController.html":{},"modules/TermiiModule.html":{},"injectables/TermiiService.html":{},"coverage.html":{},"overview.html":{}}}],["termiismschannelenum",{"_index":1996,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["termiismschannelenum.generic",{"_index":2037,"title":{},"body":{"injectables/TermiiService.html":{}}}],["termiismssuccess",{"_index":1993,"title":{"interfaces/TermiiSmsSuccess.html":{}},"body":{"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"coverage.html":{}}}],["termiismstypeenum",{"_index":1999,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["termiismstypeenum.plain",{"_index":2036,"title":{},"body":{"injectables/TermiiService.html":{}}}],["termiiurl",{"_index":2016,"title":{},"body":{"injectables/TermiiService.html":{}}}],["termiiwebhookevent",{"_index":2001,"title":{"interfaces/TermiiWebhookEvent.html":{}},"body":{"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"coverage.html":{}}}],["test",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"index.html":{}}}],["test:covsupport",{"_index":2474,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2473,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2406,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tests",{"_index":2471,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1980,"title":{},"body":{"classes/SuccessMessages.html":{},"index.html":{}}}],["theenum",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.apiroutemodel.deletemany",{"_index":1713,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.apiroutemodel.find().lean().exec",{"_index":1718,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.apiroutemodel.insertmany(availableroutes",{"_index":1715,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.apiroutes",{"_index":1767,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.appservice.healthcheck",{"_index":205,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.readinesscheck",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["this.attempt",{"_index":1930,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.authservice.authenticatewithgoogle(body",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(user",{"_index":495,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout",{"_index":501,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(body",{"_index":497,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.setpassword(body",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.updatepassword(body",{"_index":514,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.baseoptions",{"_index":2098,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.buildresponsepayload",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.buildresponsepayload(accesstoken",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cachemanager.get(key",{"_index":659,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cachemanager.set(key",{"_index":658,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.configservice.get('flutterwave_secret_hash",{"_index":1861,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["this.configservice.get('mail_from",{"_index":1355,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["this.configservice.get('node_env",{"_index":329,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/SmsService.html":{}}}],["this.configservice.get('refresh_token_secret",{"_index":2099,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.configservice.get('sendchamp_public_key",{"_index":1870,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["this.configservice.get('termii_api_key",{"_index":2038,"title":{},"body":{"injectables/TermiiService.html":{}}}],["this.connection.db.admin().ping",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["this.connection.startsession",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["this.costofonemessage",{"_index":1940,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.createuserfromgoogle(profile",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decoderefreshtoken(encoded",{"_index":2105,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.errormessage",{"_index":1152,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["this.expirationminutes",{"_index":1475,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.findone(id",{"_index":1273,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.findrolebyname(body.name",{"_index":1743,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.firstname",{"_index":2204,"title":{},"body":{"modules/UserModule.html":{}}}],["this.from",{"_index":1363,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["this.fullname",{"_index":2206,"title":{},"body":{"modules/UserModule.html":{}}}],["this.generateaccesstoken",{"_index":2111,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.generateexpires",{"_index":2091,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.getbyid(role",{"_index":1759,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.getexpirationdate(updatedat",{"_index":1516,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.getstoredtokenfromrefreshtokenpayload(payload",{"_index":2106,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.getstoredvalidrefreshtokenbyid(tokenid",{"_index":2124,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.getuserfromrefreshtokenpayload(payload",{"_index":2108,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.googleservice.getuserprofile(body.idtoken",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpservice",{"_index":1847,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["this.insufficientcreditalert",{"_index":1951,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.ismodified('firstname",{"_index":2202,"title":{},"body":{"modules/UserModule.html":{}}}],["this.ismodified('lastname",{"_index":2203,"title":{},"body":{"modules/UserModule.html":{}}}],["this.ismodified('password",{"_index":2211,"title":{},"body":{"modules/UserModule.html":{}}}],["this.isotpexpired(otpdocument?.updatedat",{"_index":1464,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":2100,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.jwtservice.verifyasync(accesstoken",{"_index":2116,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.jwtservice.verifyasync(refreshtoken",{"_index":2113,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.lastname",{"_index":2209,"title":{},"body":{"modules/UserModule.html":{}}}],["this.lastname].join",{"_index":2205,"title":{},"body":{"modules/UserModule.html":{}}}],["this.lengthofonemessage",{"_index":1938,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.loanservice.create(createloandto",{"_index":1223,"title":{},"body":{"controllers/LoanController.html":{}}}],["this.loanservice.findone(id",{"_index":1225,"title":{},"body":{"controllers/LoanController.html":{}}}],["this.loanservice.paginate(query",{"_index":1231,"title":{},"body":{"controllers/LoanController.html":{}}}],["this.loanservice.remove(id",{"_index":1228,"title":{},"body":{"controllers/LoanController.html":{}}}],["this.loanservice.update(id",{"_index":1226,"title":{},"body":{"controllers/LoanController.html":{}}}],["this.logger.error",{"_index":1954,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.logger.error((error",{"_index":1489,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.logger.error(error",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleService.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{}}}],["this.logger.error(error?.message",{"_index":1370,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["this.logger.log",{"_index":506,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SmsService.html":{},"injectables/TermiiService.html":{}}}],["this.logger.log('all",{"_index":1736,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.logger.log('no",{"_index":1723,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.logger.log('these",{"_index":1740,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.logger.log('user",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`processing",{"_index":1858,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["this.logger.log(response",{"_index":2032,"title":{},"body":{"injectables/TermiiService.html":{}}}],["this.login(existinguser",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.login(user",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailerservice",{"_index":1366,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["this.mailerservice.sendmail",{"_index":1362,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["this.mailservice.send",{"_index":350,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["this.mailservice.sendotp",{"_index":1476,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.model",{"_index":1266,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["this.model.create",{"_index":1260,"title":{},"body":{"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{}}}],["this.model.deletemany",{"_index":1492,"title":{},"body":{"injectables/OtpService.html":{},"injectables/TokenService.html":{}}}],["this.model.find",{"_index":1720,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.model.findbyid(id",{"_index":1752,"title":{},"body":{"injectables/RoleService.html":{},"injectables/TokenService.html":{}}}],["this.model.findbyidanddelete(refreshtokenid",{"_index":2118,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.model.findone",{"_index":1270,"title":{},"body":{"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{}}}],["this.model.findone(body",{"_index":1458,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.model.findoneanddelete(body",{"_index":1488,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.newlogger.error(error",{"_index":1666,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["this.oauth2client.verifyidtoken",{"_index":958,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.otpservice.sendotp(body",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.otpservice.verifyotp(body",{"_index":487,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.password",{"_index":2216,"title":{},"body":{"modules/UserModule.html":{}}}],["this.passwordset",{"_index":2217,"title":{},"body":{"modules/UserModule.html":{}}}],["this.reflector.getallandoverride",{"_index":1044,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["this.requestconfig(this.sendchampauthorization",{"_index":1850,"title":{},"body":{"injectables/SendChampService.html":{}}}],["this.resolverefreshtoken(refreshtoken",{"_index":2110,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.retryservice",{"_index":1943,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.roleservice.apiroutes",{"_index":1628,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.assignroles(id",{"_index":1634,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.createrole(body",{"_index":1630,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.getbyid(id",{"_index":1641,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.getbyid(role",{"_index":1658,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["this.roleservice.paginate(query",{"_index":1638,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.removeroles(id",{"_index":1636,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.update(id",{"_index":1632,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.sendchampcansend",{"_index":1942,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.sendchampservice",{"_index":1947,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.sendchampservice.getbalance",{"_index":1933,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.sendchampservice.processwebhook(body",{"_index":1790,"title":{},"body":{"controllers/SendChampController.html":{}}}],["this.sendchampurl",{"_index":1848,"title":{},"body":{"injectables/SendChampService.html":{}}}],["this.smsservice.send",{"_index":1478,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.smssuccessmessage",{"_index":1929,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.subscriptionservice.flutterwavechargecomplete",{"_index":1866,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["this.success",{"_index":123,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["this.syncapiroutes(apiroutes",{"_index":1717,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.taskservice.deleteinterval(cronintervals.ping",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.termiiapikey",{"_index":2031,"title":{},"body":{"injectables/TermiiService.html":{}}}],["this.termiicansend",{"_index":1941,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.termiiservice",{"_index":1948,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.termiiservice.getbalance",{"_index":1934,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.termiiservice.processwebhook(body",{"_index":2009,"title":{},"body":{"controllers/TermiiController.html":{}}}],["this.tokenservice.createaccesstokenfromrefreshtoken(refreshtoken",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.decodeaccesstoken(token",{"_index":1300,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["this.tokenservice.decoderefreshtoken(refreshtoken",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.deleterefreshtoken(refreshtokenid",{"_index":1302,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["this.tokenservice.findbyid(refreshtokenid",{"_index":1301,"title":{},"body":{"injectables/LogoutInterceptor.html":{}}}],["this.tokenservice.generateaccesstoken(user",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.generaterefreshtoken",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.getstoredvalidrefreshtokenbyid(refreshtokenid",{"_index":1178,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.assignroles(id",{"_index":1760,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.userservice.blockuser(id",{"_index":2187,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.changepassword(body",{"_index":491,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.createuser",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.createuser(body",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.deleteprofile(user",{"_index":512,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.findbyemail(body.value",{"_index":1512,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.userservice.findbyemail(email",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbymobilenumber(body.value",{"_index":1513,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.userservice.getbyid(subid",{"_index":2121,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.userservice.getbyid(userid",{"_index":1179,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.model.findone",{"_index":1505,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.userservice.paginate(query",{"_index":2183,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removeroles(id",{"_index":1761,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.userservice.setpassword(body",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.stripsensitiveprops(user.toobject",{"_index":1288,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.userservice.unblockuser(id",{"_index":2190,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(body",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateprofile(body",{"_index":509,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.validateuser(email",{"_index":1286,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.validateroutes(body.apiroutes",{"_index":1742,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.validatesendotp(body",{"_index":1457,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.validateupdaterole(id",{"_index":1747,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.validateverifyotp(body",{"_index":1486,"title":{},"body":{"injectables/OtpService.html":{}}}],["throttlermodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlers",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/EnvironmentVariables.html":{},"injectables/GoogleService.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LoanService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/PayloadExistsPipe.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["throwerror",{"_index":355,"title":{},"body":{"injectables/AppService.html":{},"injectables/MailService.html":{},"classes/ReadinessCheckResponseDto.html":{},"interfaces/SendMailPayload.html":{},"miscellaneous/variables.html":{}}}],["ticket",{"_index":957,"title":{},"body":{"injectables/GoogleService.html":{}}}],["ticket.getpayload",{"_index":959,"title":{},"body":{"injectables/GoogleService.html":{}}}],["timerangefilter",{"_index":2316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":970,"title":{},"body":{"classes/ILoan.html":{},"classes/Loan.html":{}}}],["titlecase",{"_index":2196,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["titlecase(fullname",{"_index":2207,"title":{},"body":{"modules/UserModule.html":{}}}],["titlecase(key.replaceall('_",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titlecase(this.firstname",{"_index":2208,"title":{},"body":{"modules/UserModule.html":{}}}],["titlecase(this.lastname",{"_index":2210,"title":{},"body":{"modules/UserModule.html":{}}}],["tobemasked",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/TokenService.html":{}}}],["token",{"_index":833,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/GoogleService.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TokenService.html":{}}}],["token._id.tostring",{"_index":2112,"title":{},"body":{"injectables/TokenService.html":{}}}],["token.dto",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token.dto.ts",{"_index":1580,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:7",{"_index":1582,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.expiresat",{"_index":2094,"title":{},"body":{"injectables/TokenService.html":{}}}],["token.save",{"_index":2095,"title":{},"body":{"injectables/TokenService.html":{}}}],["token.schema",{"_index":28,"title":{},"body":{"classes/AccessTokenPayload.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthSuccessResponse.html":{},"classes/RefreshTokenPayload.html":{},"injectables/TokenService.html":{}}}],["token.schema.ts",{"_index":1015,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/RefreshToken.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["token.schema.ts:14",{"_index":1577,"title":{},"body":{"classes/RefreshToken.html":{}}}],["token.schema.ts:19",{"_index":1576,"title":{},"body":{"classes/RefreshToken.html":{}}}],["token.schema.ts:24",{"_index":1575,"title":{},"body":{"classes/RefreshToken.html":{}}}],["token.schema.ts:27",{"_index":1578,"title":{},"body":{"classes/RefreshToken.html":{}}}],["tokenexpirederror",{"_index":2088,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokenid",{"_index":2122,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokenpayload",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":2092,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokens[0",{"_index":2093,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokenservice",{"_index":521,"title":{"injectables/TokenService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogoutInterceptor.html":{},"injectables/TokenService.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":142,"title":{},"body":{"classes/ApiResponse.html":{},"classes/MessageDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"miscellaneous/variables.html":{}}}],["total_contacts",{"_index":1800,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["totalpromise",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalpromise]).then",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalpromise]).then(([data",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalresult",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalresult.total",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":2487,"title":{},"body":{"index.html":{}}}],["track",{"_index":1112,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["transform",{"_index":723,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"classes/IsChannelValueConstraint.html":{},"classes/MobileNumberDto.html":{},"classes/PayloadExistsPipe.html":{},"classes/SendOtpDto.html":{},"classes/VerifyOtpDto.html":{}}}],["transform(payload",{"_index":1544,"title":{},"body":{"classes/PayloadExistsPipe.html":{}}}],["transform.decorator.ts",{"_index":2288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformboolean",{"_index":2317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformdoc",{"_index":2318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformed",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":131,"title":{},"body":{"classes/ApiResponse.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/SendOtpDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["transformrecordsfordownload",{"_index":2319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformresponseinterceptor",{"_index":239,"title":{"injectables/TransformResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1320,"title":{},"body":{"modules/MailModule.html":{}}}],["trim",{"_index":158,"title":{},"body":{"classes/ApiRoute.html":{},"classes/ErrorMessages.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/Otp.html":{},"classes/Role.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["true",{"_index":157,"title":{},"body":{"classes/ApiRoute.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"injectables/LoanService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/User.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"miscellaneous/variables.html":{}}}],["true})@type(undefined",{"_index":692,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["try",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ErrorMessages.html":{},"classes/IsChannelValueConstraint.html":{},"modules/MailModule.html":{},"injectables/OtpService.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["ttl",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/TokenService.html":{}}}],["twitter",{"_index":2493,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AccessTokenPayload.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnonymousStrategy.html":{},"classes/ApiResponse.html":{},"classes/ApiRoute.html":{},"classes/ApiRouteDto.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"injectables/CacheService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GetUsersDto.html":{},"classes/GoogleLoginDto.html":{},"injectables/GoogleService.html":{},"classes/IApiRoute.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"interfaces/IResponse.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Loan.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogoutInterceptor.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/PayloadExistsPipe.html":{},"injectables/ProxyMiddleware.html":{},"classes/ReadinessCheckResponseDto.html":{},"injectables/RedirectMiddleware.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"interfaces/SendChampError.html":{},"injectables/SendChampService.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"interfaces/SendchampWebhookEvent.html":{},"classes/SetPasswordDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"interfaces/TermiiBalanceSuccess.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2507,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1052,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["typescript",{"_index":2458,"title":{},"body":{"index.html":{}}}],["unauthenticated",{"_index":1401,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["unauthorizedexception",{"_index":1174,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["unblockuser",{"_index":2169,"title":{},"body":{"controllers/UserController.html":{}}}],["unblockuser(@param",{"_index":2189,"title":{},"body":{"controllers/UserController.html":{}}}],["unblockuser(undefined",{"_index":2176,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined",{"_index":555,"title":{},"body":{"classes/AuthPayload.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"classes/ILoan.html":{},"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Loan.html":{},"classes/MobileNumberDto.html":{},"classes/Otp.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"classes/SetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/VerifyOtpDto.html":{},"miscellaneous/variables.html":{}}}],["undefined})@fieldsmatch('password",{"_index":665,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/SetPasswordDto.html":{}}}],["undefined})@isarray()@validatenested({each",{"_index":691,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["undefined})@isstring({each",{"_index":700,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["undefined})@prop({type",{"_index":1059,"title":{},"body":{"classes/IRole.html":{},"classes/IUser.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unique",{"_index":1007,"title":{},"body":{"classes/IOtp.html":{},"classes/IRole.html":{},"classes/IUser.html":{},"classes/Otp.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unit",{"_index":2470,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/GoogleService.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/SendChampController.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"controllers/TermiiController.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/ValidIdConstraint.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":2506,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":1920,"title":{},"body":{"injectables/SmsService.html":{},"injectables/TokenService.html":{}}}],["up",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["update",{"_index":1193,"title":{},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["update(id",{"_index":1250,"title":{},"body":{"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["update(undefined",{"_index":1206,"title":{},"body":{"controllers/LoanController.html":{}}}],["update_password",{"_index":2421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_profile",{"_index":2420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updated",{"_index":1741,"title":{},"body":{"injectables/RoleService.html":{}}}],["updated_at",{"_index":1802,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["updatedat",{"_index":546,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpService.html":{}}}],["updatedat'].includes(key",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedat.gettime",{"_index":1497,"title":{},"body":{"injectables/OtpService.html":{}}}],["updatedby",{"_index":1518,"title":{},"body":{"injectables/Owner.html":{},"injectables/RoleService.html":{}}}],["updateloandto",{"_index":1207,"title":{"classes/UpdateLoanDto.html":{}},"body":{"controllers/LoanController.html":{},"injectables/LoanService.html":{},"classes/UpdateLoanDto.html":{},"coverage.html":{}}}],["updatepassword",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["updatepassword(@body",{"_index":513,"title":{},"body":{"controllers/AuthController.html":{}}}],["updatepassword(body",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["updatepassworddto",{"_index":424,"title":{"classes/UpdatePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["updateprofile",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateprofile(@body",{"_index":508,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateprofile(body",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["updaterole",{"_index":1595,"title":{},"body":{"controllers/RoleController.html":{}}}],["updaterole(undefined",{"_index":1613,"title":{},"body":{"controllers/RoleController.html":{}}}],["updateroledto",{"_index":1614,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":429,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["uppercase",{"_index":848,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/IUser.html":{},"classes/User.html":{}}}],["uptime",{"_index":331,"title":{},"body":{"injectables/AppService.html":{},"classes/ReadinessCheckResponseDto.html":{}}}],["uri",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":1390,"title":{},"body":{"injectables/OptionalAuthGuard.html":{},"injectables/Owner.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{}}}],["use(req",{"_index":1549,"title":{},"body":{"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{}}}],["useclass",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/UserModule.html":{}}}],["useguards",{"_index":470,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":498,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{}}}],["useguards(jwtauthguard)@useinterceptors(logoutinterceptor)@post('/logout",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard",{"_index":1626,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["useinterceptors",{"_index":471,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(logoutinterceptor",{"_index":499,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":48,"title":{"classes/User.html":{}},"body":{"classes/AccessTokenPayload.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"classes/ErrorMessages.html":{},"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"injectables/JwtStrategy.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/LocalStrategy.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenPayload.html":{},"controllers/RoleController.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.decorator",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoanController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":2291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts",{"_index":708,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":2144,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":715,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":2140,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:15",{"_index":713,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":2142,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:22",{"_index":717,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":714,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1493,"title":{},"body":{"injectables/OtpService.html":{}}}],["user.id",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoanService.html":{},"injectables/RoleService.html":{}}}],["user.mobilenumber",{"_index":1494,"title":{},"body":{"injectables/OtpService.html":{}}}],["user.name",{"_index":1019,"title":{},"body":{"interfaces/IRefreshToken.html":{},"classes/IUser.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["user.roles",{"_index":2102,"title":{},"body":{"injectables/TokenService.html":{}}}],["user/dtos/create",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["user/dtos/update",{"_index":464,"title":{},"body":{"controllers/AuthController.html":{}}}],["user/schemas/user.schema",{"_index":32,"title":{},"body":{"classes/AccessTokenPayload.html":{},"controllers/AuthController.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessResponse.html":{},"interfaces/IRefreshToken.html":{},"controllers/LoanController.html":{},"injectables/LoanService.html":{},"injectables/OtpService.html":{},"injectables/Owner.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenPayload.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.controller",{"_index":2197,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.module",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{}}}],["user/user.service",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user:100",{"_index":1109,"title":{},"body":{"classes/IUser.html":{}}}],["user:108",{"_index":1104,"title":{},"body":{"classes/IUser.html":{}}}],["user:113",{"_index":1105,"title":{},"body":{"classes/IUser.html":{}}}],["user:116",{"_index":1088,"title":{},"body":{"classes/IUser.html":{}}}],["user:122",{"_index":1090,"title":{},"body":{"classes/IUser.html":{}}}],["user:129",{"_index":1102,"title":{},"body":{"classes/IUser.html":{}}}],["user:15",{"_index":1094,"title":{},"body":{"classes/IUser.html":{}}}],["user:21",{"_index":1097,"title":{},"body":{"classes/IUser.html":{}}}],["user:30",{"_index":1091,"title":{},"body":{"classes/IUser.html":{}}}],["user:38",{"_index":1106,"title":{},"body":{"classes/IUser.html":{}}}],["user:43",{"_index":1093,"title":{},"body":{"classes/IUser.html":{}}}],["user:48",{"_index":1099,"title":{},"body":{"classes/IUser.html":{}}}],["user:53",{"_index":1103,"title":{},"body":{"classes/IUser.html":{}}}],["user:61",{"_index":1098,"title":{},"body":{"classes/IUser.html":{}}}],["user:67",{"_index":1100,"title":{},"body":{"classes/IUser.html":{}}}],["user:73",{"_index":1096,"title":{},"body":{"classes/IUser.html":{}}}],["user:83",{"_index":1108,"title":{},"body":{"classes/IUser.html":{}}}],["user?.id",{"_index":1749,"title":{},"body":{"injectables/RoleService.html":{}}}],["user?.roles",{"_index":1653,"title":{},"body":{"injectables/RoleGuard.html":{}}}],["user_not_found",{"_index":815,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["useragent",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IOtp.html":{},"interfaces/IRefreshToken.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"classes/RefreshToken.html":{},"injectables/TokenService.html":{}}}],["useralreadyexist",{"_index":821,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["useralreadyexist(emailorphonenumber",{"_index":888,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["usercontroller",{"_index":2165,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":1122,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":1175,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TokenService.html":{}}}],["usermodule",{"_index":226,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usernamefield",{"_index":1285,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userobject",{"_index":1287,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":1402,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["users.dto.ts",{"_index":936,"title":{},"body":{"classes/GetUsersDto.html":{},"coverage.html":{}}}],["userschema",{"_index":1123,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OtpService.html":{},"injectables/RoleService.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":861,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["validate",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NotEqualToConstraint.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["validate(email",{"_index":1282,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(id",{"_index":2221,"title":{},"body":{"injectables/ValidIdConstraint.html":{}}}],["validate(mobilenumber",{"_index":2231,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["validate(payload",{"_index":1172,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(sort",{"_index":1960,"title":{},"body":{"injectables/SortQueryConstraint.html":{}}}],["validate(value",{"_index":917,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{}}}],["validatedconfig",{"_index":783,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validateenv",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateenv(config",{"_index":781,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validateifotpisverified",{"_index":1426,"title":{},"body":{"injectables/OtpService.html":{}}}],["validateifotpisverified(body",{"_index":1441,"title":{},"body":{"injectables/OtpService.html":{}}}],["validatenested",{"_index":704,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["validateorreject",{"_index":1359,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["validateorreject(options",{"_index":1361,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["validateroutes",{"_index":1683,"title":{},"body":{"injectables/RoleService.html":{}}}],["validateroutes(apiroutes",{"_index":1706,"title":{},"body":{"injectables/RoleService.html":{}}}],["validatesendotp",{"_index":1427,"title":{},"body":{"injectables/OtpService.html":{}}}],["validatesendotp(body",{"_index":1443,"title":{},"body":{"injectables/OtpService.html":{}}}],["validatesync",{"_index":774,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":788,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validateupdaterole",{"_index":1684,"title":{},"body":{"injectables/RoleService.html":{}}}],["validateupdaterole(id",{"_index":1708,"title":{},"body":{"injectables/RoleService.html":{}}}],["validateurl",{"_index":2332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateverifyotp",{"_index":1428,"title":{},"body":{"injectables/OtpService.html":{}}}],["validateverifyotp(body",{"_index":1445,"title":{},"body":{"injectables/OtpService.html":{}}}],["validationarguments",{"_index":914,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{}}}],["validationoptions",{"_index":920,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/ValidIdConstraint.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":135,"title":{},"body":{"classes/ApiResponse.html":{},"classes/ApiRouteDto.html":{},"classes/AssignRoleDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"classes/EnvironmentVariables.html":{},"classes/FieldsMatchConstraint.html":{},"classes/GoogleLoginDto.html":{},"classes/IdDto.html":{},"classes/IsChannelValueConstraint.html":{},"classes/MailOtpDto.html":{},"injectables/MailService.html":{},"classes/MessageDto.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Pagination.html":{},"classes/PaginationDto.html":{},"classes/PaginationMeta.html":{},"classes/RefreshTokenDto.html":{},"interfaces/SendMailPayload.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"classes/VerifyOtpQueryDto.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":921,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["validatorconstraintinterface",{"_index":911,"title":{},"body":{"classes/FieldsMatchConstraint.html":{},"classes/IsChannelValueConstraint.html":{},"classes/NotEqualToConstraint.html":{},"classes/SendOtpDto.html":{},"injectables/SortQueryConstraint.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{}}}],["valididconstraint",{"_index":2218,"title":{"injectables/ValidIdConstraint.html":{}},"body":{"injectables/ValidIdConstraint.html":{},"coverage.html":{}}}],["validmobilenumber",{"_index":2228,"title":{"injectables/ValidMobileNumber.html":{}},"body":{"injectables/ValidMobileNumber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validmobilenumber(mobilenumber",{"_index":2236,"title":{},"body":{"injectables/ValidMobileNumber.html":{}}}],["validmobilenumber(phonenumber",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validrefreshtoken",{"_index":1177,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":309,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"classes/CreateUserDto.html":{},"classes/DropDownOption.html":{},"classes/EmailDto.html":{},"classes/ErrorMessages.html":{},"classes/FieldsMatchConstraint.html":{},"injectables/GoogleService.html":{},"classes/IOtp.html":{},"classes/IsChannelValueConstraint.html":{},"injectables/MailService.html":{},"classes/MobileNumberDto.html":{},"classes/NotEqualToConstraint.html":{},"classes/Otp.html":{},"injectables/OtpService.html":{},"injectables/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/SendChampService.html":{},"classes/SendOtpDto.html":{},"injectables/SmsService.html":{},"injectables/SortQueryConstraint.html":{},"classes/SuccessMessages.html":{},"injectables/TermiiService.html":{},"injectables/TokenService.html":{},"injectables/ValidIdConstraint.html":{},"injectables/ValidMobileNumber.html":{},"classes/VerifyOtpDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":1155,"title":{},"body":{"classes/IsChannelValueConstraint.html":{},"classes/SendOtpDto.html":{}}}],["value?.tolowercase",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value?.tolowercase()?.trim",{"_index":736,"title":{},"body":{"classes/EmailDto.html":{}}}],["value?.trim",{"_index":726,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["value?.trim()?.touppercase",{"_index":727,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["variable",{"_index":2275,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":273,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1113,"title":{},"body":{"classes/IUser.html":{},"classes/User.html":{}}}],["verification",{"_index":868,"title":{},"body":{"classes/ErrorMessages.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"interfaces/SendMailPayload.html":{},"classes/SuccessMessages.html":{}}}],["verified",{"_index":823,"title":{},"body":{"classes/ErrorMessages.html":{},"classes/SuccessMessages.html":{}}}],["verifyotp",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{}}}],["verifyotp(@body",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyotp(body",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{}}}],["verifyotpdto",{"_index":433,"title":{"classes/VerifyOtpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{},"classes/VerifyOtpDto.html":{},"coverage.html":{}}}],["verifyotpquerydto",{"_index":2249,"title":{"classes/VerifyOtpQueryDto.html":{}},"body":{"classes/VerifyOtpQueryDto.html":{},"coverage.html":{}}}],["version",{"_index":2505,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1490,"title":{},"body":{"injectables/OtpService.html":{}}}],["void",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProxyMiddleware.html":{},"injectables/RedirectMiddleware.html":{},"injectables/SmsService.html":{}}}],["wallet/wallet_balance",{"_index":1849,"title":{},"body":{"injectables/SendChampService.html":{}}}],["wallet_balance",{"_index":1809,"title":{},"body":{"interfaces/SendChampError.html":{},"interfaces/SendChampSmsWalletBalance.html":{},"interfaces/SendChampSuccess.html":{},"interfaces/SendchampWebhookEvent.html":{}}}],["want",{"_index":1389,"title":{},"body":{"injectables/OptionalAuthGuard.html":{}}}],["waste",{"_index":1926,"title":{},"body":{"injectables/SmsService.html":{}}}],["watch",{"_index":2465,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":1859,"title":{},"body":{"injectables/SendChampService.html":{},"injectables/TermiiService.html":{}}}],["website",{"_index":2491,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1364,"title":{},"body":{"injectables/MailService.html":{},"interfaces/SendMailPayload.html":{}}}],["whatsapp",{"_index":1998,"title":{},"body":{"interfaces/TermiiBalanceSuccess.html":{},"interfaces/TermiiSmsSuccess.html":{},"interfaces/TermiiWebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["withsentry",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["work",{"_index":504,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{},"injectables/TokenService.html":{}}}],["yes",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/SendChampService.html":{},"injectables/TermiiService.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":2484,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z\\d",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*\\d)(?:.*[^\\w\\s])?[a",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])/g",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GoogleModule.html":{},"modules/LoanModule.html":{},"modules/MailModule.html":{},"modules/OtpModule.html":{},"modules/RoleModule.html":{},"modules/SendChampModule.html":{},"modules/SmsModule.html":{},"modules/TermiiModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessTokenPayload.html":{"url":"classes/AccessTokenPayload.html","title":"class - AccessTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            RefreshTokenPayload\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                            \n                                jwtid\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array<>\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IRefreshToken['id']\n\n                    \n                \n                        \n                            \n                                Inherited from         RefreshTokenPayload['id']\n\n                            \n                        \n                    \n                        \n                                Defined in         RefreshTokenPayload:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser['id']\n\n                    \n                \n                        \n                            \n                                Inherited from         RefreshTokenPayload['id']\n\n                            \n                        \n                    \n                        \n                                Defined in         RefreshTokenPayload:33\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRefreshToken } from '@/auth/schemas/refresh-token.schema';\nimport { IRole } from '@/role/schemas/role.schema';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthPayload {\n  refreshToken?: string;\n\n  @ApiProperty({\n    example: 'bearer',\n  })\n  type: string;\n\n  accessToken: string;\n\n  @ApiProperty({\n    example: '10000ms',\n  })\n  expiresIn: string;\n\n  @ApiProperty({\n    example: new Date(),\n  })\n  expiresAt: string | Date;\n}\n\nexport class AuthSuccessResponse {\n  user?: IUser;\n  payload: AuthPayload;\n}\n\nexport class RefreshTokenPayload {\n  subject: IUser['id'];\n  jwtid: IRefreshToken['id'];\n}\n\nexport class AccessTokenPayload extends RefreshTokenPayload {\n  roles: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all.exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all.exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  // @WithSentry()\n  async catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const statusCode =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    let message = exception.message;\n    const code = exception?.code;\n\n    if (code === 11000) {\n      message = `Duplicate error: ${\n        Object.keys(exception.keyPattern)[0]\n      } already exists`;\n    }\n\n    response.status(statusCode).json({\n      message,\n      error: exception?.response?.error || exception,\n      statusCode,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnonymousStrategy.html":{"url":"injectables/AnonymousStrategy.html","title":"injectable - AnonymousStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnonymousStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/anonymous.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'anonymous')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/anonymous.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/anonymous.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class AnonymousStrategy extends PassportStrategy(Strategy, 'anonymous') {\n  constructor(readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  authenticate() {\n    return this.success({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiResponse.html":{"url":"classes/ApiResponse.html","title":"class - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/response.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MessageDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         MessageDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MessageDto:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class MessageDto {\n  message: string;\n}\n\nexport class ApiResponse extends MessageDto {\n  data: T;\n}\n\nexport class PaginationDto {\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  limit?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  page?: number;\n}\n\nexport class PaginationMeta {\n  total: number;\n  page: number;\n  lastPage: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  limit: number;\n}\n\nexport class Pagination {\n  meta: PaginationMeta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiRoute.html":{"url":"classes/ApiRoute.html","title":"class - ApiRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schemas/api-route.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                method\n                            \n                            \n                                    \n                                    \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'get'})@Prop({required: true, trim: true, lowercase: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/api-route.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '/'})@Prop({required: true, trim: true, lowercase: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/api-route.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema({ ...schemaOptions() })\nexport class ApiRoute {\n  @ApiProperty({ example: '/' })\n  @Prop({\n    required: true,\n    trim: true,\n    lowercase: true,\n  })\n  path: string;\n\n  @ApiProperty({\n    example: 'get',\n  })\n  @Prop({\n    required: true,\n    trim: true,\n    lowercase: true,\n  })\n  method: string;\n}\n\nexport const ApiRouteSchema = SchemaFactory.createForClass(ApiRoute);\n\nexport class IApiRoute extends ApiRoute {\n  id: string;\n}\n\nexport type ApiRouteDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiRouteDto.html":{"url":"classes/ApiRouteDto.html","title":"class - ApiRouteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiRouteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dtos/api-route.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                method\n                            \n                            \n                                    \n                                    \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'get'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dtos/api-route.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '/'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dtos/api-route.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ApiRouteDto {\n  @ApiProperty({ example: '/' })\n  @IsString()\n  path: string;\n\n  @ApiProperty({\n    example: 'get',\n  })\n  @IsString()\n  method: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                getReadiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Get('health')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getReadiness\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Get('readiness')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTagsEnum } from '@/_common/enums/api-tags.enum';\nimport { AppService } from '@/app.service';\nimport { Controller, Get, HttpCode, HttpStatus } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags(ApiTagsEnum.default)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @HttpCode(HttpStatus.OK)\n  @Get('health')\n  getHello() {\n    return this.appService.healthCheck();\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Get('readiness')\n  getReadiness() {\n    return this.appService.readinessCheck();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoanModule\n\nLoanModule\n\nAppModule -->\n\nLoanModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSendChampModule\n\nSendChampModule\n\nAppModule -->\n\nSendChampModule->AppModule\n\n\n\n\n\nTermiiModule\n\nTermiiModule\n\nAppModule -->\n\nTermiiModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoanModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SendChampModule\n                        \n                        \n                            TermiiModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { AllExceptionsFilter } from '@/_common/filters/all.exception.filter';\nimport { TransformResponseInterceptor } from '@/_common/interceptors/transform.interceptor';\nimport { ProxyMiddleware } from '@/_common/middleware/proxy.middleware';\nimport {\n  EnvironmentVariables,\n  validateEnv,\n} from '@/_common/validations/environment.validation';\nimport { AppController } from '@/app.controller';\nimport { AppService } from '@/app.service';\nimport { AuthModule } from '@/auth/auth.module';\nimport { MailModule } from '@/mail/mail.module';\nimport { RoleModule } from '@/role/role.module';\nimport { SendChampModule } from '@/sms/sendchamp/sendchamp.module';\nimport { TermiiModule } from '@/sms/termii/termii.module';\nimport { UserModule } from '@/user/user.module';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { SentryGlobalFilter, SentryModule } from '@sentry/nestjs/setup';\nimport { LoanModule } from './loan/loan.module';\n\n@Module({\n  imports: [\n    SentryModule.forRoot(),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      // On application start, validate the environment variables\n      validate: validateEnv,\n    }),\n    ThrottlerModule.forRoot({\n      throttlers: [\n        {\n          name: 'short',\n          ttl: 1000,\n          limit: 3,\n        },\n        {\n          name: 'medium',\n          ttl: 10000,\n          limit: 20,\n        },\n        {\n          name: 'long',\n          ttl: 60000,\n          limit: 100,\n        },\n      ],\n    }),\n    CacheModule.register({\n      isGlobal: true,\n    }),\n    MongooseModule.forRootAsync({\n      useFactory: async (\n        configService: ConfigService,\n      ) => {\n        const uri = configService.get('DATABASE_URL', { infer: true });\n\n        return {\n          uri,\n        };\n      },\n      inject: [ConfigService],\n    }),\n    MailModule,\n    AuthModule,\n    UserModule,\n    RoleModule,\n    SendChampModule,\n    TermiiModule,\n    LoanModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: TransformResponseInterceptor,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: SentryGlobalFilter,\n    },\n  ],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(ProxyMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                healthCheck\n                            \n                            \n                                    Async\n                                readinessCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, configService: ConfigService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \nhealthCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        readinessCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    readinessCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AppService.name)\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { responder } from '@/_common/helpers/responder.helper';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { MailService } from '@/mail/mail.service';\nimport {\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectConnection } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Connection } from 'mongoose';\n\nexport class ReadinessCheckResponseDto {\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty({ type: String, isArray: true })\n  reasons: string[];\n}\n\n@Injectable()\nexport class AppService {\n  private readonly logger = new Logger(AppService.name);\n\n  constructor(\n    @InjectConnection() private connection: Connection,\n    private readonly configService: ConfigService,\n    private readonly mailService: MailService,\n  ) {}\n\n  healthCheck() {\n    // debugger;\n    return responder.success('Live and running, God is good!', {\n      environment: this.configService.get('NODE_ENV', { infer: true }),\n      status: 'UP',\n      uptime: `${process.uptime()} seconds`,\n    });\n  }\n\n  // TODO: test connection to SES, S3\n  async readinessCheck(): Promise {\n    let status = 'UP';\n    const reasons = [];\n\n    // db check\n    try {\n      await this.connection.db.admin().ping();\n\n      reasons.push('DB OK');\n    } catch (error) {\n      status = 'DOWN';\n      reasons.push('Unable to connect with DB.');\n      this.logger.error(error);\n    }\n\n    // mailer check\n\n    try {\n      await this.mailService.send({\n        to: appProps().adminEmail,\n        subject: 'SES ping',\n        body: 'SES ping from readiness check',\n        throwError: true,\n      });\n\n      reasons.push('SES OK');\n    } catch (error) {\n      status = 'DOWN';\n      reasons.push('Unable to connect with SES.');\n      this.logger.error(error);\n    }\n\n    // if any checks fail, report an error\n    if (status !== 'UP') {\n      throw new InternalServerErrorException({ status, reasons });\n    }\n\n    return { status, reasons };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignRoleDto.html":{"url":"classes/AssignRoleDto.html","title":"class - AssignRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dtos/assign-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ArrayNotEmpty()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dtos/assign-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayNotEmpty, IsArray, IsString } from 'class-validator';\n\nexport class AssignRoleDto {\n  @IsArray()\n  @ArrayNotEmpty()\n  @IsString({ each: true })\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                changePassword\n                            \n                            \n                                    \n                                    \n                                deleteProfile\n                            \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                googleLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                logout\n                            \n                            \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    Async\n                                sendOtp\n                            \n                            \n                                    \n                                    Async\n                                setPassword\n                            \n                            \n                                    \n                                    \n                                updatePassword\n                            \n                            \n                                    \n                                    \n                                updateProfile\n                            \n                            \n                                    \n                                    Async\n                                verifyOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(body: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/change-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProfile(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/me')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: IUser, headers: Headers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/me')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        googleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    googleLogin(headers: Headers, body: GoogleLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/google')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            GoogleLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(headers: Headers, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')@UseGuards(LocalAuthGuard)@ApiBody({type: LoginDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseInterceptors(LogoutInterceptor)@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(body: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(headers: Headers, body: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOtp(headers: Headers, body: SendOtpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/otp/send')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SendOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPassword(headers: Headers, body: SetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/set-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(body: UpdatePasswordDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/update-password')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UpdatePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(body: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/me')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        verifyOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyOtp(body: VerifyOtpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/otp/verify')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            VerifyOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { GetUser } from '@/_common/decorators/get-user.decorator';\nimport { ApiTagsEnum } from '@/_common/enums/api-tags.enum';\nimport { LogoutInterceptor } from '@/_common/interceptors/logout.interceptor';\nimport { ChangePasswordDto } from '@/auth/dtos/change-password.dto';\nimport { GoogleLoginDto } from '@/auth/dtos/google-login.dto';\nimport { LoginDto } from '@/auth/dtos/login.dto';\nimport { RefreshTokenDto } from '@/auth/dtos/refresh-token.dto';\nimport { SetPasswordDto } from '@/auth/dtos/set-password.dto';\nimport { UpdatePasswordDto } from '@/auth/dtos/update-password.dto';\nimport { JwtAuthGuard } from '@/auth/guards/jwt-auth.guard';\nimport { LocalAuthGuard } from '@/auth/guards/local-auth.guard';\nimport { AuthService } from '@/auth/services/auth.service';\nimport { SendOtpDto } from '@/otp/dtos/send-otp.dto';\nimport { VerifyOtpDto } from '@/otp/dtos/verify-otp.dto';\nimport { OtpService } from '@/otp/otp.service';\nimport { CreateUserDto } from '@/user/dtos/create-user.dto';\nimport { UpdateUserDto } from '@/user/dtos/update-user.dto';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { UserService } from '@/user/user.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Logger,\n  Patch,\n  Post,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiTags } from '@nestjs/swagger';\n\n@Controller('auth')\n@ApiTags(ApiTagsEnum.authentication)\n@ApiBearerAuth()\nexport class AuthController {\n  private readonly logger = new Logger(AuthController.name);\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n    private readonly otpService: OtpService,\n  ) {}\n\n  @Post('/register')\n  async register(@Headers() headers: Headers, @Body() body: CreateUserDto) {\n    const userAgent = headers['user-agent'];\n    return this.userService.createUser(body, userAgent);\n  }\n\n  @Post('/google')\n  googleLogin(@Headers() headers: Headers, @Body() body: GoogleLoginDto) {\n    const userAgent = headers['user-agent'];\n\n    return this.authService.authenticateWithGoogle(body, userAgent);\n  }\n\n  @Post('/otp/send')\n  async sendOtp(@Headers() headers: Headers, @Body() body: SendOtpDto) {\n    const userAgent = headers['user-agent'];\n\n    return this.otpService.sendOtp(body, userAgent);\n  }\n\n  @Patch('/otp/verify')\n  async verifyOtp(@Body() body: VerifyOtpDto) {\n    return this.otpService.verifyOtp(body);\n  }\n\n  @Post('/set-password')\n  async setPassword(@Headers() headers: Headers, @Body() body: SetPasswordDto) {\n    const userAgent = headers['user-agent'];\n\n    return this.authService.setPassword(body, userAgent);\n  }\n\n  @Patch('/change-password')\n  changePassword(@Body() body: ChangePasswordDto) {\n    return this.userService.changePassword(body);\n  }\n\n  @Post('/login')\n  @UseGuards(LocalAuthGuard)\n  @ApiBody({\n    type: LoginDto,\n  })\n  async login(@Headers() headers: Headers, @GetUser() user: IUser) {\n    const userAgent = headers['user-agent'];\n\n    return this.authService.login(user, userAgent);\n  }\n\n  @Post('/refresh')\n  async refreshToken(@Body() body: RefreshTokenDto) {\n    return this.authService.refreshToken(body);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @UseInterceptors(LogoutInterceptor)\n  @Post('/logout')\n  logout() {\n    return this.authService.logout();\n  }\n\n  @Get('/me')\n  @UseGuards(JwtAuthGuard)\n  getProfile(@GetUser() user: IUser, @Headers() headers: Headers): IUser {\n    // TODO: how will this work on mobile\n    const userAgent = headers['user-agent'];\n    this.logger.log({ userAgent });\n    return user;\n  }\n\n  @Patch('/me')\n  @UseGuards(JwtAuthGuard)\n  updateProfile(@Body() body: UpdateUserDto, @GetUser() user: IUser) {\n    return this.userService.updateProfile(body, user);\n  }\n\n  @Delete('/me')\n  @UseGuards(JwtAuthGuard)\n  deleteProfile(@GetUser() user: IUser) {\n    return this.userService.deleteProfile(user);\n  }\n\n  @Patch('/update-password')\n  @UseGuards(JwtAuthGuard)\n  updatePassword(@Body() body: UpdatePasswordDto, @GetUser() user: IUser) {\n    return this.authService.updatePassword(body, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nGoogleModule\n\nGoogleModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nGoogleModule->AuthModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nTokenService \n\nTokenService \n\nTokenService  -->\n\nAuthModule->TokenService \n\n\n\n\n\nAnonymousStrategy\n\nAnonymousStrategy\n\nAuthModule -->\n\nAnonymousStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRoleGuard\n\nRoleGuard\n\nAuthModule -->\n\nRoleGuard->AuthModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAuthModule -->\n\nTokenService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnonymousStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            RoleGuard\n                        \n                        \n                            TokenService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GoogleModule\n                        \n                        \n                            OtpModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            TokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { AuthController } from '@/auth/auth.controller';\nimport { RoleGuard } from '@/auth/guards/role.guard';\nimport {\n  RefreshToken,\n  RefreshTokenSchema,\n} from '@/auth/schemas/refresh-token.schema';\nimport { AuthService } from '@/auth/services/auth.service';\nimport { TokenService } from '@/auth/services/token.service';\nimport { AnonymousStrategy } from '@/auth/strategies/anonymous.strategy';\nimport { JwtStrategy } from '@/auth/strategies/jwt.strategy';\nimport { LocalStrategy } from '@/auth/strategies/local.strategy';\nimport { GoogleModule } from '@/google/google.module';\nimport { OtpModule } from '@/otp/otp.module';\nimport { UserModule } from '@/user/user.module';\nimport { forwardRef, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    MongooseModule.forFeatureAsync([\n      {\n        name: RefreshToken.name,\n        useFactory: async () => {\n          const schema = RefreshTokenSchema;\n\n          schema.index(\n            { updatedAt: 1 },\n            { expireAfterSeconds: appProps().refreshTokenTll },\n          );\n\n          return schema;\n        },\n      },\n    ]),\n    JwtModule.registerAsync({\n      useFactory: async (\n        configService: ConfigService,\n      ) => {\n        const secret = configService.get('ACCESS_TOKEN_SECRET', {\n          infer: true,\n        });\n\n        return {\n          secret,\n          signOptions: {\n            expiresIn: appProps().accessTokenTll,\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    forwardRef(() => UserModule),\n    GoogleModule,\n    OtpModule,\n  ],\n  providers: [\n    AuthService,\n    TokenService,\n    LocalStrategy,\n    JwtStrategy,\n    AnonymousStrategy,\n    RoleGuard,\n  ],\n  controllers: [AuthController],\n  exports: [TokenService, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    \n                                expiresAt\n                            \n                            \n                                    \n                                expiresIn\n                            \n                            \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '10000ms'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'bearer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRefreshToken } from '@/auth/schemas/refresh-token.schema';\nimport { IRole } from '@/role/schemas/role.schema';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthPayload {\n  refreshToken?: string;\n\n  @ApiProperty({\n    example: 'bearer',\n  })\n  type: string;\n\n  accessToken: string;\n\n  @ApiProperty({\n    example: '10000ms',\n  })\n  expiresIn: string;\n\n  @ApiProperty({\n    example: new Date(),\n  })\n  expiresAt: string | Date;\n}\n\nexport class AuthSuccessResponse {\n  user?: IUser;\n  payload: AuthPayload;\n}\n\nexport class RefreshTokenPayload {\n  subject: IUser['id'];\n  jwtid: IRefreshToken['id'];\n}\n\nexport class AccessTokenPayload extends RefreshTokenPayload {\n  roles: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticateWithGoogle\n                            \n                            \n                                    Private\n                                buildResponsePayload\n                            \n                            \n                                    Private\n                                    Async\n                                createUserFromGoogle\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                setPassword\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, userService: UserService, tokenService: TokenService, googleService: GoogleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        googleService\n                                                  \n                                                        \n                                                                        GoogleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        authenticateWithGoogle\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithGoogle(body: GoogleLoginDto, userAgent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            GoogleLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildResponsePayload\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildResponsePayload(accessToken: string, expiresIn: string, refreshToken?: string, user?: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthSuccessResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createUserFromGoogle\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserFromGoogle(profile: TokenPayload, userAgent: string, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                        TokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, userAgent: string, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(body: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPassword(body: SetPasswordDto, userAgent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(body: UpdatePasswordDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UpdatePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthService.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/services/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { RefreshTokenDto } from '@/auth/dtos/refresh-token.dto';\nimport { SetPasswordDto } from '@/auth/dtos/set-password.dto';\nimport { UpdatePasswordDto } from '@/auth/dtos/update-password.dto';\nimport { AuthSuccessResponse } from '@/auth/dtos/auth.dto';\nimport { TokenService } from '@/auth/services/token.service';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { UserService } from '@/user/user.service';\nimport {\n  BadRequestException,\n  Inject,\n  Injectable,\n  Logger,\n  forwardRef,\n} from '@nestjs/common';\nimport { addHours, addMilliseconds } from 'date-fns';\nimport { GoogleLoginDto } from '@/auth/dtos/google-login.dto';\nimport { GoogleService } from '@/google/google.service';\nimport { ClientSession, Connection } from 'mongoose';\nimport { InjectConnection } from '@nestjs/mongoose';\nimport { TokenPayload } from 'google-auth-library';\nimport { SuccessMessages } from '@/_common/constants/success-messages.constant';\nimport { responder } from '@/_common/helpers/responder.helper';\n\n@Injectable()\nexport class AuthService {\n  private readonly logger = new Logger(AuthService.name);\n\n  constructor(\n    @InjectConnection() private readonly connection: Connection,\n    private readonly userService: UserService,\n    @Inject(forwardRef(() => TokenService))\n    private readonly tokenService: TokenService,\n    private readonly googleService: GoogleService,\n  ) {}\n\n  async setPassword(\n    body: SetPasswordDto,\n    userAgent: string,\n  ): Promise {\n    const session = await this.connection.startSession();\n\n    try {\n      session.startTransaction();\n      const user = await this.userService.setPassword(body, session);\n\n      const loginResponse = await this.login(user, userAgent);\n\n      await session.commitTransaction();\n\n      return loginResponse;\n    } catch (error) {\n      await session.abortTransaction();\n      throw new BadRequestException((error as Error)?.message);\n    } finally {\n      session.endSession();\n    }\n  }\n\n  async login(\n    user: IUser,\n    userAgent: string,\n    session: ClientSession = null,\n  ): Promise {\n    const refreshToken = await this.tokenService.generateRefreshToken(\n      user.id,\n      userAgent,\n      session,\n    );\n\n    const { jwtid } = await this.tokenService.decodeRefreshToken(refreshToken);\n\n    const { accessToken, expiresIn } =\n      await this.tokenService.generateAccessToken(user, jwtid);\n\n    return this.buildResponsePayload(\n      accessToken,\n      expiresIn,\n      refreshToken,\n      user,\n    );\n  }\n\n  async authenticateWithGoogle(\n    body: GoogleLoginDto,\n    userAgent: string,\n  ): Promise {\n    const session = await this.connection.startSession();\n    try {\n      session.startTransaction();\n      const profile = await this.googleService.getUserProfile(body.idToken);\n\n      const { email } = profile;\n\n      const existingUser = await this.userService.findByEmail(email, session);\n\n      let response: AuthSuccessResponse | IUser = null;\n\n      if (existingUser) {\n        this.logger.log('User already exists');\n        existingUser.id = existingUser.id;\n\n        response = await this.login(existingUser, userAgent, session);\n      } else {\n        response = await this.createUserFromGoogle(profile, userAgent, session);\n      }\n\n      await session.commitTransaction();\n\n      return response;\n    } catch (error) {\n      await session.abortTransaction();\n      throw new BadRequestException((error as Error)?.message);\n    } finally {\n      await session.endSession();\n    }\n  }\n\n  private async createUserFromGoogle(\n    profile: TokenPayload,\n    userAgent: string,\n    session: ClientSession = null,\n  ) {\n    const {\n      email,\n      family_name: lastName,\n      given_name: firstName,\n      picture: photo,\n      email_verified: emailVerified,\n    } = profile;\n\n    const user = await this.userService.createUser(\n      {\n        email,\n        firstName,\n        lastName,\n        emailVerified,\n        photo,\n        acceptTerms: true,\n      },\n      userAgent,\n      session,\n    );\n\n    return user;\n  }\n\n  async refreshToken(body: RefreshTokenDto) {\n    const { refreshToken } = body;\n\n    const { accessToken, expiresIn } =\n      await this.tokenService.createAccessTokenFromRefreshToken(refreshToken);\n\n    return this.buildResponsePayload(accessToken, expiresIn, refreshToken);\n  }\n\n  async updatePassword(body: UpdatePasswordDto, user: IUser) {\n    await this.userService.updatePassword(body, user);\n\n    return responder.success(SuccessMessages.PASSWORD_CHANGED);\n  }\n\n  async logout() {\n    // this.taskService.deleteInterval(CronIntervals.ping);\n    return true;\n  }\n\n  private buildResponsePayload(\n    accessToken: string,\n    expiresIn: string, // ms\n    refreshToken?: string,\n    user?: IUser,\n  ): AuthSuccessResponse {\n    // expires in is in milliseconds,\n\n    const expiresInNumber = +expiresIn.split('ms')[0];\n\n    let expiresAt = addHours(new Date(), 1);\n\n    expiresAt = addMilliseconds(expiresAt, expiresInNumber);\n\n    return {\n      ...(user && { user }),\n      payload: {\n        type: 'bearer',\n        accessToken,\n        expiresIn,\n        ...(refreshToken && { refreshToken }),\n        expiresAt,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthSuccessResponse.html":{"url":"classes/AuthSuccessResponse.html","title":"class - AuthSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                payload\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthPayload\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRefreshToken } from '@/auth/schemas/refresh-token.schema';\nimport { IRole } from '@/role/schemas/role.schema';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthPayload {\n  refreshToken?: string;\n\n  @ApiProperty({\n    example: 'bearer',\n  })\n  type: string;\n\n  accessToken: string;\n\n  @ApiProperty({\n    example: '10000ms',\n  })\n  expiresIn: string;\n\n  @ApiProperty({\n    example: new Date(),\n  })\n  expiresAt: string | Date;\n}\n\nexport class AuthSuccessResponse {\n  user?: IUser;\n  payload: AuthPayload;\n}\n\nexport class RefreshTokenPayload {\n  subject: IUser['id'];\n  jwtid: IRefreshToken['id'];\n}\n\nexport class AccessTokenPayload extends RefreshTokenPayload {\n  roles: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheManager: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/_common/services/cache.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/services/cache.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/services/cache.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { Injectable } from '@nestjs/common';\n\nimport { Inject } from '@nestjs/common';\nimport { Cache } from 'cache-manager';\n\n@Injectable()\nexport class CacheService {\n  constructor(@Inject(CACHE_MANAGER) private cacheManager: Cache) {}\n\n  set(key: string, value: unknown, ttl?: number) {\n    return this.cacheManager.set(key, value, ttl);\n  }\n\n  get(key: string) {\n    return this.cacheManager.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/change-password.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PickType(CreateUserDto, [\n  'email',\n] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Matches(PASSWORD_REGEX, {message: undefined})@FieldsMatch('password', {message: 'Confirm password must match password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/change-password.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Matches(PASSWORD_REGEX, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/change-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { PASSWORD_REGEX } from '@/_common/constants/regex.constant';\nimport { FieldsMatch } from '@/_common/validations/fields-match.validation';\nimport { CreateUserDto } from '@/user/dtos/create-user.dto';\nimport { PickType } from '@nestjs/swagger';\nimport { IsString, Matches } from 'class-validator';\n\nexport class ChangePasswordDto extends PickType(CreateUserDto, [\n  'email',\n] as const) {\n  @IsString()\n  @Matches(PASSWORD_REGEX, {\n    message: ErrorMessages.INVALID_PASSWORD,\n  })\n  password: string;\n\n  @IsString()\n  @Matches(PASSWORD_REGEX, {\n    message: ErrorMessages.INVALID_PASSWORD,\n  })\n  @FieldsMatch('password', { message: 'Confirm password must match password' })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLoanDto.html":{"url":"classes/CreateLoanDto.html","title":"class - CreateLoanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLoanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loan/dto/create-loan.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateLoanDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dtos/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                apiRoutes\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                operations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        apiRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dtos/create-role.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Manages all super admin role'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dtos/create-role.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Super Admin'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dtos/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        operations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dtos/create-role.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiRouteDto } from '@/role/dtos/api-route.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsArray, IsString, ValidateNested } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({\n    example: 'Super Admin',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    type: [ApiRouteDto],\n  })\n  @IsArray()\n  // @ArrayNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ApiRouteDto)\n  apiRoutes: Array;\n\n  @ApiProperty({\n    example: 'Manages all super admin role',\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    example: ['SUPER_ADMIN'],\n  })\n  @IsString({ each: true })\n  operations: string[];\n}\nexport { ApiRouteDto };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(EmailDto, MobileNumberDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                acceptTerms\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                referredBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acceptTerms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsIn(['undefined'], {message: 'The value must be true'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        referredBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EmailDto } from '@/_common/dtos/email.dto';\nimport { MobileNumberDto } from '@/_common/dtos/mobile-number.dto';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsIn, IsOptional, IsString } from 'class-validator';\n\nexport class CreateUserDto extends IntersectionType(EmailDto, MobileNumberDto) {\n  @IsString()\n  firstName: string;\n\n  @IsString()\n  lastName: string;\n\n  @IsIn([true], { message: 'The value must be true' })\n  acceptTerms: boolean;\n\n  @IsOptional()\n  @IsString()\n  @Transform(({ value }) =>\n    !!value?.trim() ? value?.trim()?.toUpperCase() : undefined,\n  )\n  referredBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropDownOption.html":{"url":"classes/DropDownOption.html","title":"class - DropDownOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/interfaces/dropdown.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/interfaces/dropdown.interface.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/interfaces/dropdown.interface.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DropDownOption {\n  @ApiProperty({\n    type: String,\n  })\n  label: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailDto.html":{"url":"classes/EmailDto.html","title":"class - EmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsEmail({}, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/email.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { Transform } from 'class-transformer';\nimport { IsEmail } from 'class-validator';\n\nexport class EmailDto {\n  @Transform(({ value }) => value?.toLowerCase()?.trim())\n  @IsEmail({}, { message: ErrorMessages.PROVIDE_VALID_EMAIL })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validations/environment.validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                ACCESS_KEY_AWS\n                            \n                            \n                                    \n                                ACCESS_TOKEN_SECRET\n                            \n                            \n                                    \n                                ADMIN_EMAIL\n                            \n                            \n                                    \n                                DATABASE_URL\n                            \n                            \n                                    \n                                MAIL_FROM\n                            \n                            \n                                    \n                                NODE_ENV\n                            \n                            \n                                    \n                                    \n                                PORT\n                            \n                            \n                                    \n                                REFRESH_TOKEN_SECRET\n                            \n                            \n                                    \n                                S3_BUCKET_AWS\n                            \n                            \n                                    \n                                    \n                                SECRET_KEY_AWS\n                            \n                            \n                                    \n                                SENDCHAMP_PUBLIC_KEY\n                            \n                            \n                                    \n                                SENTRY_AUTH_TOKEN\n                            \n                            \n                                    \n                                SENTRY_DSN\n                            \n                            \n                                    \n                                SUPPORT_EMAIL\n                            \n                            \n                                    \n                                TERMII_API_KEY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ACCESS_KEY_AWS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ACCESS_TOKEN_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ADMIN_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MAIL_FROM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvironmentEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        REFRESH_TOKEN_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        S3_BUCKET_AWS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SECRET_KEY_AWS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SENDCHAMP_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SENTRY_AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SENTRY_DSN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SUPPORT_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        TERMII_API_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/environment.validation.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EnvironmentEnum } from '@/_common/enums/environment.enum';\nimport { plainToClass } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsOptional,\n  IsString,\n  validateSync,\n} from 'class-validator';\n\nexport class EnvironmentVariables {\n  @IsString()\n  NODE_ENV: EnvironmentEnum;\n\n  @IsString()\n  DATABASE_URL: string;\n\n  @IsString()\n  ACCESS_TOKEN_SECRET: string;\n\n  @IsString()\n  REFRESH_TOKEN_SECRET: string;\n\n  @IsString()\n  MAIL_FROM: string;\n\n  @IsString()\n  S3_BUCKET_AWS: string;\n\n  @IsString()\n  SENTRY_AUTH_TOKEN: string;\n\n  @IsString()\n  SENDCHAMP_PUBLIC_KEY: string;\n\n  @IsString()\n  TERMII_API_KEY: string;\n\n  @IsEmail()\n  ADMIN_EMAIL: string;\n\n  @IsEmail()\n  SUPPORT_EMAIL: string;\n\n  @IsString()\n  SENTRY_DSN: string;\n\n  // this is optional, because we can read them off AWS and we don't need to explicity set them\n  @IsOptional()\n  @IsString()\n  ACCESS_KEY_AWS: string;\n\n  @IsOptional()\n  @IsString()\n  SECRET_KEY_AWS: string;\n\n  @IsOptional()\n  @IsInt()\n  PORT: number;\n}\n\nexport function validateEnv(config: Record) {\n  const validatedConfig = plainToClass(EnvironmentVariables, config, {\n    enableImplicitConversion: true,\n  });\n\n  const errors = validateSync(validatedConfig, {\n    skipMissingProperties: false,\n  });\n\n  if (errors.length > 0) {\n    throw new Error(errors.toString());\n  }\n\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorMessages.html":{"url":"classes/ErrorMessages.html","title":"class - ErrorMessages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/constants/error-messages.constant.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ALREADY_VERIFIED_OTP\n                            \n                            \n                                    Static\n                                    Readonly\n                                EMPTY_PAYLOAD\n                            \n                            \n                                    Static\n                                    Readonly\n                                EXPIRED_OTP_CODE\n                            \n                            \n                                    Static\n                                    Readonly\n                                EXPIRED_REFRESH_TOKEN\n                            \n                            \n                                    Static\n                                    Readonly\n                                INVALID_COLOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                INVALID_CREDENTIALS\n                            \n                            \n                                    Static\n                                    Readonly\n                                INVALID_ID\n                            \n                            \n                                    Static\n                                    Readonly\n                                INVALID_OTP_CODE\n                            \n                            \n                                    Static\n                                    Readonly\n                                INVALID_PASSWORD\n                            \n                            \n                                    Static\n                                    Readonly\n                                INVALID_REFRESH_TOKEN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MALFORMED_REFRESH_TOKEN\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTP_NOT_SENT\n                            \n                            \n                                    Static\n                                    Readonly\n                                PASSWORDS_DO_NOT_MATCH\n                            \n                            \n                                    Static\n                                    Readonly\n                                PASSWORDS_MATCH\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDE_VALID_EMAIL\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDE_VALID_MOBILE_NUMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                REFERRAL_NOT_FOUND\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST_OTP_CODE\n                            \n                            \n                                    Static\n                                    Readonly\n                                SORT_ORDER_ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                USER_NOT_FOUND\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                alreadyExist\n                            \n                            \n                                    Static\n                                notFound\n                            \n                            \n                                    Static\n                                otpCodeMismatch\n                            \n                            \n                                    Static\n                                routeDoesNotExist\n                            \n                            \n                                    Static\n                                sortField\n                            \n                            \n                                    Static\n                                userAlreadyExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ALREADY_VERIFIED_OTP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OTP code has already been verified'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        EMPTY_PAYLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Payload should not be empty'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        EXPIRED_OTP_CODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OTP code has expired, please request a new one'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        EXPIRED_REFRESH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Refresh token expired'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INVALID_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please provide RGB or HEX color'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INVALID_CREDENTIALS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid credentials'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INVALID_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid ID provided'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INVALID_OTP_CODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid OTP code'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INVALID_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password must be minimum eight characters, at least one uppercase, one lowercase and one number'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INVALID_REFRESH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Refresh token is invalid'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MALFORMED_REFRESH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Refresh token malformed'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OTP_NOT_SENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OTP code could not be sent, please try again later'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PASSWORDS_DO_NOT_MATCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password and confirm password do not match'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PASSWORDS_MATCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Old password is same as new password'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PROVIDE_VALID_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please provide a valid email address'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PROVIDE_VALID_MOBILE_NUMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please provide a valid mobile number'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REFERRAL_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Referral not found'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST_OTP_CODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please request for verification code'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SORT_ORDER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Sort order should either be asc or desc'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        USER_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'User not found'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/error-messages.constant.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        alreadyExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    alreadyExist(schema: string, key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/error-messages.constant.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        notFound\n                        \n                    \n                \n            \n            \n                \n                        \n                    notFound(schema: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/error-messages.constant.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        otpCodeMismatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpCodeMismatch(emailOrPhoneNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/error-messages.constant.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailOrPhoneNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Please provide the OTP code sent to your email\" | \"Please provide the OTP code sent to your mobile number\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        routeDoesNotExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    routeDoesNotExist(apiRoute: ApiRoute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/error-messages.constant.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiRoute\n                                            \n                                                            ApiRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        sortField\n                        \n                    \n                \n            \n            \n                \n                        \n                    sortField(fields: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/error-messages.constant.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                fields\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        userAlreadyExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    userAlreadyExist(emailOrPhoneNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/error-messages.constant.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailOrPhoneNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { resolveAuthType } from '@/_common/helpers/auth.helper';\nimport { OtpChannelEnum } from '@/otp/otp.enum';\nimport { ApiRoute } from '@/role/schemas/api-route.schema';\n\nexport class ErrorMessages {\n  static readonly PROVIDE_VALID_EMAIL = 'Please provide a valid email address';\n  static readonly PROVIDE_VALID_MOBILE_NUMBER =\n    'Please provide a valid mobile number';\n  static readonly EXPIRED_OTP_CODE =\n    'OTP code has expired, please request a new one';\n  static readonly INVALID_OTP_CODE = 'Invalid OTP code';\n  static readonly REQUEST_OTP_CODE = 'Please request for verification code';\n  static readonly ALREADY_VERIFIED_OTP = 'OTP code has already been verified';\n  static readonly OTP_NOT_SENT =\n    'OTP code could not be sent, please try again later';\n  static readonly INVALID_REFRESH_TOKEN = 'Refresh token is invalid';\n  static readonly MALFORMED_REFRESH_TOKEN = 'Refresh token malformed';\n  static readonly EXPIRED_REFRESH_TOKEN = 'Refresh token expired';\n  static readonly SORT_ORDER_ERROR = 'Sort order should either be asc or desc';\n  static readonly INVALID_ID = 'Invalid ID provided';\n  static readonly EMPTY_PAYLOAD = 'Payload should not be empty';\n  // static readonly PASSWORD_TOO_SHORT = 'Password is too short';\n  static readonly USER_NOT_FOUND = 'User not found';\n  static readonly INVALID_CREDENTIALS = 'Invalid credentials';\n  static readonly INVALID_COLOR = 'Please provide RGB or HEX color';\n  static readonly PASSWORDS_DO_NOT_MATCH =\n    'Password and confirm password do not match';\n  static readonly PASSWORDS_MATCH = 'Old password is same as new password';\n  static readonly REFERRAL_NOT_FOUND = 'Referral not found';\n  static readonly INVALID_PASSWORD =\n    'Password must be minimum eight characters, at least one uppercase, one lowercase and one number';\n\n  static otpCodeMismatch(emailOrPhoneNumber: string) {\n    const type = resolveAuthType(emailOrPhoneNumber);\n\n    if (type === OtpChannelEnum.EMAIL) {\n      return 'Please provide the OTP code sent to your email';\n    }\n\n    return 'Please provide the OTP code sent to your mobile number';\n  }\n\n  static userAlreadyExist(emailOrPhoneNumber: string): string {\n    const type = resolveAuthType(emailOrPhoneNumber);\n\n    if (type === OtpChannelEnum.EMAIL) {\n      return 'User with that email address already exists';\n    }\n\n    if (type === OtpChannelEnum.SMS) {\n      return 'User with that mobile number already exists';\n    }\n\n    return 'User already exists';\n  }\n\n  static notFound(schema: string, id: string) {\n    return `${schema} with id: ${id} not found`;\n  }\n\n  static sortField(fields = []) {\n    if (fields.length) {\n      return `Sort field should be one off ${fields.join(', ').trim()}`;\n    }\n\n    return `Invalid sort field passed`;\n  }\n\n  static alreadyExist(schema: string, key: string, value: string) {\n    return `${schema} with ${key}: ${value} already exist`;\n  }\n\n  static routeDoesNotExist(apiRoute: ApiRoute) {\n    return `Route ${apiRoute.method.toUpperCase()} ${\n      apiRoute.path\n    } does not exist`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldsMatchConstraint.html":{"url":"classes/FieldsMatchConstraint.html","title":"class - FieldsMatchConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldsMatchConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validations/fields-match.validation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/fields-match.validation.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/fields-match.validation.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'fieldsMatch', async: false })\nclass FieldsMatchConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    const relatedValue = (args.object as object)[relatedPropertyName];\n    return value === relatedValue;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    return `${args.property} must match ${relatedPropertyName}`;\n  }\n}\n\nexport function FieldsMatch(\n  property: string,\n  validationOptions?: ValidationOptions,\n) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [property],\n      validator: FieldsMatchConstraint,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersDto.html":{"url":"classes/GetUsersDto.html","title":"class - GetUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/get-users.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsInt()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsInt()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaginationDto } from '@/_common/dtos/response.dto';\n\nexport class GetUsersDto extends PaginationDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleLoginDto.html":{"url":"classes/GoogleLoginDto.html","title":"class - GoogleLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/google-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                idToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/google-login.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class GoogleLoginDto {\n  @IsString()\n  idToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GoogleModule.html":{"url":"modules/GoogleModule.html","title":"module - GoogleModule","body":"\n                   \n\n\n\n\n    Modules\n    GoogleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GoogleModule\n\n\n\ncluster_GoogleModule_providers\n\n\n\ncluster_GoogleModule_exports\n\n\n\n\nGoogleService \n\nGoogleService \n\n\n\nGoogleModule\n\nGoogleModule\n\nGoogleService  -->\n\nGoogleModule->GoogleService \n\n\n\n\n\nGoogleService\n\nGoogleService\n\nGoogleModule -->\n\nGoogleService->GoogleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/google/google.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GoogleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GoogleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GoogleService } from './google.service';\n\n@Module({\n  providers: [GoogleService],\n  exports: [GoogleService],\n})\nexport class GoogleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/google/google.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                oauth2Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserProfile(idToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/google/google.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        oauth2Client\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OAuth2Client()\n                    \n                \n                    \n                        \n                                Defined in src/google/google.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { OAuth2Client } from 'google-auth-library';\n\n@Injectable()\nexport class GoogleService {\n  private readonly oauth2Client = new OAuth2Client();\n\n  async getUserProfile(idToken: string) {\n    const ticket = await this.oauth2Client.verifyIdToken({\n      idToken,\n    });\n\n    const payload = ticket.getPayload();\n\n    if (!payload) {\n      throw new BadRequestException('Invalid token payload');\n    }\n\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IApiRoute.html":{"url":"classes/IApiRoute.html","title":"class - IApiRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IApiRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schemas/api-route.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ApiRoute\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                method\n                            \n                            \n                                    \n                                    \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/api-route.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'get'})@Prop({required: true, trim: true, lowercase: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ApiRoute\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiRoute:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '/'})@Prop({required: true, trim: true, lowercase: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ApiRoute\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiRoute:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema({ ...schemaOptions() })\nexport class ApiRoute {\n  @ApiProperty({ example: '/' })\n  @Prop({\n    required: true,\n    trim: true,\n    lowercase: true,\n  })\n  path: string;\n\n  @ApiProperty({\n    example: 'get',\n  })\n  @Prop({\n    required: true,\n    trim: true,\n    lowercase: true,\n  })\n  method: string;\n}\n\nexport const ApiRouteSchema = SchemaFactory.createForClass(ApiRoute);\n\nexport class IApiRoute extends ApiRoute {\n  id: string;\n}\n\nexport type ApiRouteDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ILoan.html":{"url":"classes/ILoan.html","title":"class - ILoan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ILoan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loan/schemas/loan.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Loan\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                loanAmount\n                            \n                            \n                                    \n                                loanStatus\n                            \n                            \n                                    \n                                reference\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true, lowercase: true, email: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Loan\n\n                            \n                        \n                    \n                        \n                                Defined in         Loan:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Loan\n\n                            \n                        \n                    \n                        \n                                Defined in         Loan:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Loan\n\n                            \n                        \n                    \n                        \n                                Defined in         Loan:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loanAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Loan\n\n                            \n                        \n                    \n                        \n                                Defined in         Loan:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loanStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoanStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Loan\n\n                            \n                        \n                    \n                        \n                                Defined in         Loan:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Loan\n\n                            \n                        \n                    \n                        \n                                Defined in         Loan:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Loan\n\n                            \n                        \n                    \n                        \n                                Defined in         Loan:34\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { enumValuesAsArray } from '@/_common/helpers/enum.helper';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { LoanStatusEnum } from '@/loan/loan.enum';\nimport { OtpChannelEnum } from '@/otp/otp.enum';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class Loan {\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  firstName: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  lastName: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n    lowercase: true,\n    email: true,\n  })\n  email: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  title: string;\n\n  @Prop({\n    required: true,\n  })\n  loanAmount: number;\n\n  @Prop({\n    required: true,\n    enum: enumValuesAsArray(OtpChannelEnum),\n    type: String,\n  })\n  loanStatus: LoanStatusEnum;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  reference: string;\n}\nexport class ILoan extends Loan {\n  id: string;\n}\n\nexport type LoanDocument = DocumentMeta;\n\nexport const LoanSchema = SchemaFactory.createForClass(Loan);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IOtp.html":{"url":"classes/IOtp.html","title":"class - IOtp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IOtp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/schemas/otp.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Otp\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    \n                                channel\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                isSent\n                            \n                            \n                                    \n                                isVerified\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                userAgent\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpChannelEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Otp\n\n                            \n                        \n                    \n                        \n                                Defined in         Otp:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, min: 6, max: 6, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Otp\n\n                            \n                        \n                    \n                        \n                                Defined in         Otp:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Otp\n\n                            \n                        \n                    \n                        \n                                Defined in         Otp:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Otp\n\n                            \n                        \n                    \n                        \n                                Defined in         Otp:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Otp\n\n                            \n                        \n                    \n                        \n                                Defined in         Otp:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Otp\n\n                            \n                        \n                    \n                        \n                                Defined in         Otp:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true, trim: true, sparse: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Otp\n\n                            \n                        \n                    \n                        \n                                Defined in         Otp:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { enumValuesAsArray } from '@/_common/helpers/enum.helper';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { OtpChannelEnum, OtpTypeEnum } from '@/otp/otp.enum';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class Otp {\n  @Prop({\n    unique: true,\n    trim: true,\n    sparse: true,\n  })\n  value: string;\n\n  @Prop({\n    required: true,\n    enum: enumValuesAsArray(OtpChannelEnum),\n    type: String,\n  })\n  channel: OtpChannelEnum;\n\n  @Prop({\n    required: true,\n    min: 6,\n    max: 6,\n    trim: true,\n  })\n  code: string;\n\n  @Prop({\n    required: true,\n  })\n  isVerified: boolean;\n\n  @Prop({\n    required: true,\n    enum: enumValuesAsArray(OtpTypeEnum),\n    type: String,\n  })\n  type: OtpTypeEnum;\n\n  @Prop({\n    required: true,\n    default: false,\n  })\n  isSent: boolean;\n\n  @Prop({\n    required: true,\n  })\n  userAgent: string;\n}\n\nexport class IOtp extends Otp {\n  id: string;\n}\n\nexport const OtpSchema = SchemaFactory.createForClass(Otp);\n\nexport type OtpDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRefreshToken.html":{"url":"interfaces/IRefreshToken.html","title":"interface - IRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/schemas/refresh-token.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            RefreshToken\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { User } from '@/user/schemas/user.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Schema as MongooseSchema } from 'mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class RefreshToken {\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: User.name,\n  })\n  user: User | string;\n\n  @Prop({\n    default: false,\n  })\n  isRevoked: boolean;\n\n  @Prop({\n    required: true,\n  })\n  expiresAt: Date;\n\n  @Prop()\n  userAgent?: string;\n}\n\nexport const RefreshTokenSchema = SchemaFactory.createForClass(RefreshToken);\n\nexport interface IRefreshToken extends RefreshToken {\n  id: string;\n}\n\nexport type RefreshTokenDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResponse.html":{"url":"interfaces/IResponse.html","title":"interface - IResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BYPASS_RESPONSE_TRANSFORM } from '@/_common/constants/decorator-keys.constant';\nimport {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface IResponse {\n  data: T;\n}\n\n@Injectable()\nexport class TransformResponseInterceptor\n  implements NestInterceptor>\n{\n  // private readonly logger = new Logger('TransformResponseInterceptor');\n\n  constructor(private readonly reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | any> {\n    const httpContext = context.switchToHttp();\n    const response = httpContext.getResponse();\n\n    const bypass = this.reflector.getAllAndOverride(\n      BYPASS_RESPONSE_TRANSFORM,\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (bypass) {\n      return next.handle();\n    }\n\n    const { statusCode: status } = response;\n\n    return next.handle().pipe(\n      map((responseData) => {\n        let data = responseData || null;\n        let message = 'Success';\n        let meta = null;\n\n        if (typeof responseData === 'string') {\n          message = 'Success';\n          data = responseData;\n        } else if (typeof responseData === 'boolean') {\n          message = 'Success';\n          data = responseData;\n        } else if (!responseData?.hasOwnProperty('message')) {\n          data = responseData?.data || responseData;\n          meta = responseData?.meta || null;\n        } else {\n          data = responseData?.data;\n          message = responseData?.message;\n          meta = responseData?.meta;\n        }\n\n        return {\n          message,\n          data: data ?? null,\n          status,\n          success: true,\n          ...(meta && { meta }),\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IRole.html":{"url":"classes/IRole.html","title":"class - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schemas/role.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Role\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                apiRoutes\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                operations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/role.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@Prop({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Role\n\n                            \n                        \n                    \n                        \n                                Defined in         Role:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'This have the super administrator rights'})@Prop({required: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Role\n\n                            \n                        \n                    \n                        \n                                Defined in         Role:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Super Admin'})@Prop({required: true, unique: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Role\n\n                            \n                        \n                    \n                        \n                                Defined in         Role:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        operations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Role\n\n                            \n                        \n                    \n                        \n                                Defined in         Role:59\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { Owner } from '@/_common/schemas/owner.schema';\nimport { ApiRoute } from '@/role/schemas/api-route.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema({ ...schemaOptions() })\nexport class Role extends Owner {\n  @ApiProperty({\n    example: 'Super Admin',\n  })\n  @Prop({\n    required: true,\n    unique: true,\n    trim: true,\n  })\n  name: string;\n\n  @ApiProperty({\n    example: 'This have the super administrator rights',\n  })\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  description: string;\n\n  @ApiProperty({\n    type: [ApiRoute],\n  })\n  @Prop({\n    type: [\n      {\n        path: {\n          type: String,\n          required: true,\n          trim: true,\n          lowercase: true,\n        },\n        method: {\n          type: String,\n          required: true,\n          trim: true,\n          lowercase: true,\n        },\n      },\n    ],\n  })\n  apiRoutes: Array;\n\n  @ApiProperty({\n    example: ['CAN_SET_ROLE'],\n  })\n  @Prop({\n    type: [String],\n    required: true,\n  })\n  operations: Array;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\nexport class IRole extends Role {\n  id: string;\n}\n\nexport type RoleDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IUser.html":{"url":"classes/IUser.html","title":"class - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            User\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                    Optional\n                                isSuperAdmin\n                            \n                            \n                                    \n                                    Optional\n                                acceptTerms\n                            \n                            \n                                    \n                                    Optional\n                                blocked\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                emailVerified\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    Optional\n                                fullName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                mobileNumber\n                            \n                            \n                                    \n                                mobileVerified\n                            \n                            \n                                    \n                                    Optional\n                                onboarded\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                passwordSet\n                            \n                            \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    \n                                    Optional\n                                pushToken\n                            \n                            \n                                    \n                                referralCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                referredBy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isSuperAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        acceptTerms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:116\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        blocked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({select: false, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:122\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true, lowercase: true, email: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:73\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true, trim: true, sparse: true, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mobileVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        onboarded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@ApiHideProperty()@Prop({select: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:129\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:53\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({trim: true, unique: true, sparse: true, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:108\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        pushToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:113\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true, trim: true, uppercase: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        referredBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@Prop({default: undefined, type: undefined, ref: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@Prop({type: undefined, sparse: true, default: undefined, unique: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:100\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { Role } from '@/role/schemas/role.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiHideProperty, ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { Schema as MongooseSchema } from 'mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class User {\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  firstName: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  lastName: string;\n\n  @Prop({\n    required: true,\n    unique: true,\n    trim: true,\n    lowercase: true,\n    email: true,\n  })\n  email: string;\n\n  @Prop({\n    unique: true,\n    trim: true,\n    uppercase: true,\n    required: true,\n  })\n  referralCode: string;\n\n  @Prop({\n    default: false,\n  })\n  emailVerified: boolean;\n\n  @Prop({\n    default: false,\n  })\n  mobileVerified: boolean;\n\n  @Prop({\n    default: false,\n  })\n  passwordSet: boolean;\n\n  @Prop({\n    unique: true,\n    trim: true,\n    sparse: true,\n    default: undefined,\n  })\n  mobileNumber?: string;\n\n  // this could be an object to track various state\n  @Prop({\n    default: false,\n  })\n  onboarded?: boolean;\n\n  // a derivate of the first and last name for easy search\n  @Prop({\n    trim: true,\n  })\n  fullName?: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  @Prop({\n    default: undefined,\n    type: MongooseSchema.Types.ObjectId,\n    ref: User.name,\n  })\n  referredBy?: User | string;\n\n  // a list of roles that the user has\n  @ApiProperty({\n    type: [String],\n  })\n  @Prop({\n    type: [\n      {\n        type: MongooseSchema.Types.ObjectId,\n        ref: Role.name,\n      },\n    ],\n    sparse: true,\n    default: undefined,\n    unique: false,\n  })\n  roles?: Array;\n\n  @Prop({\n    trim: true,\n    unique: true,\n    sparse: true,\n    default: undefined,\n  })\n  photo?: string;\n\n  @Prop({\n    default: undefined,\n  })\n  pushToken?: string;\n\n  @Prop()\n  acceptTerms?: boolean;\n\n  @Prop({\n    select: false,\n    default: undefined,\n  })\n  blocked?: boolean;\n\n  @Exclude()\n  @ApiHideProperty()\n  @Prop({\n    select: false,\n  })\n  password?: string;\n}\nexport class IUser extends User {\n  id: string;\n  isAdmin?: boolean;\n  isSuperAdmin?: boolean;\n}\n\nexport type UserDocument = DocumentMeta;\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto.html":{"url":"classes/IdDto.html","title":"class - IdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsValidId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/id.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsValidId } from '@/_common/validations/id.validation';\nimport { IsString } from 'class-validator';\n\nexport class IdDto {\n  @IsString()\n  @IsValidId()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsChannelValueConstraint.html":{"url":"classes/IsChannelValueConstraint.html","title":"class - IsChannelValueConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsChannelValueConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/dtos/send-otp.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/otp/dtos/send-otp.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/dtos/send-otp.dto.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/dtos/send-otp.dto.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { getInternationalPhoneNumber } from '@/_common/helpers/mobile.helper';\nimport { OtpChannelEnum, OtpTypeEnum } from '@/otp/otp.enum';\nimport { Transform } from 'class-transformer';\nimport {\n  isEmail,\n  IsEnum,\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  isMobilePhone,\n  ValidationOptions,\n  registerDecorator,\n} from 'class-validator';\n\n@ValidatorConstraint({ async: false })\nexport class IsChannelValueConstraint implements ValidatorConstraintInterface {\n  private errorMessage = '';\n\n  validate(value: any, args: ValidationArguments) {\n    try {\n      const object = args.object as any;\n\n      switch (object.channel) {\n        case OtpChannelEnum.EMAIL:\n          if (!isEmail(value)) {\n            throw new Error('Provide a valid email address');\n          }\n          break;\n\n        case OtpChannelEnum.SMS:\n          if (!isMobilePhone(value, 'en-NG')) {\n            throw new Error('Provide a valid Nigerian mobile number');\n          }\n          break;\n      }\n\n      return true;\n    } catch (error: unknown) {\n      this.errorMessage = (error as Error).message;\n      return false;\n    }\n  }\n\n  defaultMessage() {\n    return this.errorMessage;\n  }\n}\n\nexport function IsChannelValue(validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsChannelValueConstraint,\n    });\n  };\n}\n\nexport class SendOtpDto {\n  @Transform(({ value }) => value.toUpperCase())\n  @IsEnum(OtpTypeEnum)\n  type: OtpTypeEnum;\n\n  @Transform(({ value }) => value.toUpperCase())\n  @IsEnum(OtpChannelEnum)\n  channel: OtpChannelEnum;\n\n  @Transform(({ value, obj }) =>\n    obj.channel === OtpChannelEnum.SMS\n      ? getInternationalPhoneNumber(value)\n      : value,\n  )\n  @IsChannelValue()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UserService, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: AccessTokenPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            AccessTokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UserService } from '@/user/user.service';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { AccessTokenPayload } from '@/auth/dtos/auth.dto';\nimport { TokenService } from '@/auth/services/token.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    readonly configService: ConfigService,\n    private readonly userService: UserService,\n    private readonly tokenService: TokenService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('ACCESS_TOKEN_SECRET', {\n        infer: true,\n      }),\n    });\n  }\n\n  async validate(payload: AccessTokenPayload) {\n    const { subject: userId, jwtid: refreshTokenId } = payload;\n\n    const validRefreshToken =\n      await this.tokenService.getStoredValidRefreshTokenById(refreshTokenId);\n\n    if (!validRefreshToken) {\n      throw new UnauthorizedException();\n    }\n\n    const user = await this.userService.getById(userId);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Loan.html":{"url":"classes/Loan.html","title":"class - Loan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Loan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loan/schemas/loan.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                loanAmount\n                            \n                            \n                                    \n                                loanStatus\n                            \n                            \n                                    \n                                reference\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true, lowercase: true, email: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loanAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loanStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoanStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/loan/schemas/loan.schema.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { enumValuesAsArray } from '@/_common/helpers/enum.helper';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { LoanStatusEnum } from '@/loan/loan.enum';\nimport { OtpChannelEnum } from '@/otp/otp.enum';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class Loan {\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  firstName: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  lastName: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n    lowercase: true,\n    email: true,\n  })\n  email: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  title: string;\n\n  @Prop({\n    required: true,\n  })\n  loanAmount: number;\n\n  @Prop({\n    required: true,\n    enum: enumValuesAsArray(OtpChannelEnum),\n    type: String,\n  })\n  loanStatus: LoanStatusEnum;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  reference: string;\n}\nexport class ILoan extends Loan {\n  id: string;\n}\n\nexport type LoanDocument = DocumentMeta;\n\nexport const LoanSchema = SchemaFactory.createForClass(Loan);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoanController.html":{"url":"controllers/LoanController.html","title":"controller - LoanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loan/loan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                loan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllRoles\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createLoanDto: CreateLoanDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/loan/loan.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLoanDto\n                                            \n                                                            CreateLoanDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(undefined: IdDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/loan/loan.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRoles(query: PaginationDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@PaginatedModel(ILoan)\n                \n            \n\n                    \n                        \n                            Defined in src/loan/loan.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/loan/loan.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(undefined: IdDto, updateLoanDto: UpdateLoanDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/loan/loan.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLoanDto\n                                            \n                                                            UpdateLoanDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { GetUser } from '@/_common/decorators/get-user.decorator';\nimport { PaginatedModel } from '@/_common/decorators/pagination.decorator';\nimport { IdDto } from '@/_common/dtos/id.dto';\nimport { PaginationDto } from '@/_common/dtos/response.dto';\nimport { ApiTagsEnum } from '@/_common/enums/api-tags.enum';\nimport { JwtAuthGuard } from '@/auth/guards/jwt-auth.guard';\nimport { CreateLoanDto } from '@/loan/dto/create-loan.dto';\nimport { UpdateLoanDto } from '@/loan/dto/update-loan.dto';\nimport { LoanService } from '@/loan/loan.service';\nimport { ILoan } from '@/loan/schemas/loan.schema';\nimport { IUser } from '@/user/schemas/user.schema';\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@Controller('loan')\n@ApiTags(ApiTagsEnum.loan)\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard)\nexport class LoanController {\n  constructor(private readonly loanService: LoanService) {}\n\n  @Post()\n  create(@Body() createLoanDto: CreateLoanDto, @GetUser() user: IUser) {\n    return this.loanService.create(createLoanDto, user);\n  }\n\n  @Get(':id')\n  findOne(@Param() { id }: IdDto, @GetUser() user: IUser) {\n    return this.loanService.findOne(id, user);\n  }\n\n  @Patch(':id')\n  update(\n    @Param() { id }: IdDto,\n    @Body() updateLoanDto: UpdateLoanDto,\n    @GetUser() user: IUser,\n  ) {\n    return this.loanService.update(id, updateLoanDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @GetUser() user: IUser) {\n    return this.loanService.remove(id, user);\n  }\n\n  @Get('/')\n  @PaginatedModel(ILoan)\n  async getAllRoles(@Query() query: PaginationDto, @GetUser() user: IUser) {\n    return this.loanService.paginate(query, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoanModule.html":{"url":"modules/LoanModule.html","title":"module - LoanModule","body":"\n                   \n\n\n\n\n    Modules\n    LoanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoanModule\n\n\n\ncluster_LoanModule_providers\n\n\n\n\nLoanService\n\nLoanService\n\n\n\nLoanModule\n\nLoanModule\n\nLoanModule -->\n\nLoanService->LoanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/loan/loan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Loan, LoanSchema } from '@/loan/schemas/loan.schema';\nimport { LoanController } from '@/loan/loan.controller';\nimport { LoanService } from '@/loan/loan.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Loan.name,\n        schema: LoanSchema,\n      },\n    ]),\n  ],\n  controllers: [LoanController],\n  providers: [LoanService],\n})\nexport class LoanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoanService.html":{"url":"injectables/LoanService.html","title":"injectable - LoanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loan/loan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                paginate\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/loan/loan.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateLoanDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/loan/loan.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateLoanDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/loan/loan.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        paginate\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginate(query: PaginationDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/loan/loan.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/loan/loan.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateLoanDto: UpdateLoanDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/loan/loan.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLoanDto\n                                            \n                                                            UpdateLoanDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateLoanDto } from './dto/create-loan.dto';\nimport { UpdateLoanDto } from './dto/update-loan.dto';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { paginateAndSort } from '@/_common/helpers/filter.helper';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ILoan, Loan } from '@/loan/schemas/loan.schema';\nimport { FilterQuery, Model } from 'mongoose';\nimport { PaginationDto } from '@/_common/dtos/response.dto';\n\n@Injectable()\nexport class LoanService {\n  constructor(\n    @InjectModel(Loan.name)\n    private readonly model: Model,\n  ) {}\n\n  async create(body: CreateLoanDto, user: IUser) {\n    const role = await this.model.create({\n      ...body,\n      createdBy: user.id,\n    });\n\n    return role;\n  }\n\n  async paginate(query: PaginationDto, user: IUser) {\n    const filters: FilterQuery = {\n      createdBy: user.id,\n    };\n\n    if (query?.search) {\n      filters.title = new RegExp(query.search, 'i');\n    }\n\n    return paginateAndSort({\n      model: this.model,\n      filters,\n      page: query?.page,\n      limit: query?.limit,\n      options: {\n        lean: true,\n      },\n    });\n  }\n\n  async findOne(id: string, user: IUser) {\n    const loan = await this.model.findOne({\n      _id: id,\n      createdBy: user.id,\n    });\n\n    if (!loan) {\n      throw new NotFoundException(`Loan with id ${id} not found`);\n    }\n\n    return loan;\n  }\n\n  async update(id: string, updateLoanDto: UpdateLoanDto, user: IUser) {\n    const loan = await this.findOne(id, user);\n\n    loan.$set(updateLoanDto);\n\n    return loan.save();\n  }\n\n  async remove(id: string, user: IUser) {\n    const loan = await this.findOne(id, user);\n\n    await loan.deleteOne();\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserService } from '@/user/user.service';\nimport { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly userService: UserService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string) {\n    const user = await this.userService.validateUser(email, password);\n\n    const userObject = this.userService.stripSensitiveProps(user.toObject());\n\n    return userObject;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/login.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(ChangePasswordDto, [\n  'email',\n  'password',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangePasswordDto } from '@/auth/dtos/change-password.dto';\nimport { PickType } from '@nestjs/swagger';\n\nexport class LoginDto extends PickType(ChangePasswordDto, [\n  'email',\n  'password',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutInterceptor.html":{"url":"injectables/LogoutInterceptor.html","title":"injectable - LogoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/interceptors/logout.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Defined in src/_common/interceptors/logout.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                        \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/interceptors/logout.interceptor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TokenService } from '@/auth/services/token.service';\nimport {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { ExtractJwt } from 'passport-jwt';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LogoutInterceptor implements NestInterceptor {\n  constructor(private readonly tokenService: TokenService) {}\n\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise> {\n    const httpContext = context.switchToHttp();\n    const request: Request = httpContext.getRequest();\n\n    const token = ExtractJwt.fromAuthHeaderAsBearerToken()(request);\n\n    if (!token) {\n      return next.handle();\n    }\n\n    const decodedAccessToken = await this.tokenService.decodeAccessToken(token);\n\n    if (!decodedAccessToken) {\n      return next.handle();\n    }\n\n    const { jwtid: refreshTokenId } = decodedAccessToken;\n\n    const refreshToken = await this.tokenService.findById(refreshTokenId);\n\n    if (!refreshToken) {\n      return next.handle();\n    }\n\n    this.tokenService.deleteRefreshToken(refreshTokenId);\n\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { awsConfig } from '@/_common/config/environment.config';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { MailService } from '@/mail/mail.service';\nimport { SESClient, SendRawEmailCommand } from '@aws-sdk/client-ses';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Module, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (\n        configService: ConfigService,\n      ) => {\n        const from = configService.get('MAIL_FROM', {\n          infer: true,\n        });\n\n        const logger = new Logger('MailerModule');\n\n        try {\n          const transport = {\n            SES: {\n              ses: new SESClient(awsConfig()),\n              aws: { SendRawEmailCommand },\n            },\n          };\n\n          return {\n            transport,\n            defaults: {\n              from,\n            },\n            preview: false,\n            template: {\n              dir: process.cwd() + '/templates/mail/pages',\n              adapter: new HandlebarsAdapter(),\n              options: {\n                strict: true,\n              },\n            },\n            options: {\n              partials: {\n                dir: process.cwd() + '/templates/mail/partials',\n                options: {},\n              },\n            },\n          };\n        } catch (error) {\n          logger.error(\n            'Error configuring MailerModule',\n            (error as Error).stack,\n          );\n          throw error;\n        }\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailOtpDto.html":{"url":"classes/MailOtpDto.html","title":"class - MailOtpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailOtpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/dtos/mail-otp.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                expirationMinutes\n                            \n                            \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/dtos/mail-otp.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expirationMinutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/dtos/mail-otp.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/dtos/mail-otp.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from 'class-validator';\n\nexport class MailOtpDto {\n  @IsString()\n  to: string;\n\n  @IsString()\n  code: string;\n\n  @IsNumber()\n  expirationMinutes: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                from\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                sendOtp\n                            \n                            \n                                    Async\n                                sendWelcomeEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(payload: SendMailPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SendMailPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOtp(options: MailOtpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            MailOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendWelcomeEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendWelcomeEmail(to: string, fullName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fullName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configService.get('MAIL_FROM', { infer: true })\n                    \n                \n                    \n                        \n                                Defined in src/mail/mail.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(MailService.name)\n                    \n                \n                    \n                        \n                                Defined in src/mail/mail.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { MailOtpDto } from '@/mail/dtos/mail-otp.dto';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { validateOrReject } from 'class-validator';\n\ninterface SendMailPayload {\n  to: string;\n  subject: string;\n  body: string;\n  firstName?: string;\n  throwError?: boolean;\n}\n@Injectable()\nexport class MailService {\n  private readonly logger = new Logger(MailService.name);\n  private readonly from = this.configService.get('MAIL_FROM', { infer: true });\n\n  constructor(\n    private readonly mailerService: MailerService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async sendOtp(options: MailOtpDto) {\n    const subject = `${appProps().name} - Email Verification`;\n\n    await validateOrReject(options);\n\n    const { to, code: otp, expirationMinutes } = options;\n\n    return this.mailerService.sendMail({\n      to: to,\n      from: this.from,\n      subject,\n      template: 'send-otp',\n      context: {\n        subject,\n        otp,\n        expirationMinutes,\n        ...appProps(),\n      },\n    });\n  }\n\n  async sendWelcomeEmail(to: string, fullName: string) {\n    const subject = `Welcome to ${appProps().name}`;\n\n    return this.mailerService.sendMail({\n      to,\n      from: this.from,\n      subject,\n      template: 'welcome',\n      context: {\n        subject,\n        fullName,\n        ...appProps(),\n      },\n    });\n  }\n\n  async send(payload: SendMailPayload) {\n    const { to, subject, throwError, ...rest } = payload;\n\n    return await this.mailerService\n      .sendMail({\n        to,\n        from: this.from,\n        subject,\n        template: 'send-mail',\n        context: {\n          ...appProps(),\n          ...rest,\n        },\n      })\n      .then()\n      .catch((error) => {\n        this.logger.error(error?.message || error);\n\n        if (throwError) {\n          throw error;\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageDto.html":{"url":"classes/MessageDto.html","title":"class - MessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class MessageDto {\n  message: string;\n}\n\nexport class ApiResponse extends MessageDto {\n  data: T;\n}\n\nexport class PaginationDto {\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  limit?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  page?: number;\n}\n\nexport class PaginationMeta {\n  total: number;\n  page: number;\n  lastPage: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  limit: number;\n}\n\nexport class Pagination {\n  meta: PaginationMeta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MobileNumberDto.html":{"url":"classes/MobileNumberDto.html","title":"class - MobileNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MobileNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/mobile-number.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mobileNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Transform( => )@IsMobilePhone('en-NG', undefined, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/mobile-number.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { getInternationalPhoneNumber } from '@/_common/helpers/mobile.helper';\nimport { Transform } from 'class-transformer';\nimport { IsMobilePhone, IsOptional } from 'class-validator';\n\nexport class MobileNumberDto {\n  @IsOptional()\n  @Transform(({ value }) => getInternationalPhoneNumber(value))\n  @IsMobilePhone('en-NG', undefined, {\n    message: ErrorMessages.PROVIDE_VALID_MOBILE_NUMBER,\n  })\n  mobileNumber?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotEqualToConstraint.html":{"url":"classes/NotEqualToConstraint.html","title":"class - NotEqualToConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotEqualToConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validations/not-equal.validation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/not-equal.validation.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: string, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/not-equal.validation.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'notEqualTo', async: false })\nclass NotEqualToConstraint implements ValidatorConstraintInterface {\n  validate(value: string, args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    const relatedValue = (args.object as object)[relatedPropertyName];\n    return value !== relatedValue;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    return `${args.property} should not be equal to ${relatedPropertyName}`;\n  }\n}\n\nexport function NotEqualTo(\n  property: string,\n  validationOptions?: ValidationOptions,\n) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [property],\n      validator: NotEqualToConstraint,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionalAuthGuard.html":{"url":"injectables/OptionalAuthGuard.html","title":"injectable - OptionalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/optional-auth-guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard(['jwt', 'anonymous'])\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n// when you want it to use JWT if it's available, or just allow if jwt is not available. authenticated or not, you should rarely use this. except you have logic in your service to serve both authenticated and unauthenticated users, and logic to restrict their access\n@Injectable()\nexport class OptionalAuthGuard extends AuthGuard(['jwt', 'anonymous']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Otp.html":{"url":"classes/Otp.html","title":"class - Otp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Otp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/schemas/otp.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                channel\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                isSent\n                            \n                            \n                                    \n                                isVerified\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                userAgent\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpChannelEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, min: 6, max: 6, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true, trim: true, sparse: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/schemas/otp.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { enumValuesAsArray } from '@/_common/helpers/enum.helper';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { OtpChannelEnum, OtpTypeEnum } from '@/otp/otp.enum';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class Otp {\n  @Prop({\n    unique: true,\n    trim: true,\n    sparse: true,\n  })\n  value: string;\n\n  @Prop({\n    required: true,\n    enum: enumValuesAsArray(OtpChannelEnum),\n    type: String,\n  })\n  channel: OtpChannelEnum;\n\n  @Prop({\n    required: true,\n    min: 6,\n    max: 6,\n    trim: true,\n  })\n  code: string;\n\n  @Prop({\n    required: true,\n  })\n  isVerified: boolean;\n\n  @Prop({\n    required: true,\n    enum: enumValuesAsArray(OtpTypeEnum),\n    type: String,\n  })\n  type: OtpTypeEnum;\n\n  @Prop({\n    required: true,\n    default: false,\n  })\n  isSent: boolean;\n\n  @Prop({\n    required: true,\n  })\n  userAgent: string;\n}\n\nexport class IOtp extends Otp {\n  id: string;\n}\n\nexport const OtpSchema = SchemaFactory.createForClass(Otp);\n\nexport type OtpDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtpModule.html":{"url":"modules/OtpModule.html","title":"module - OtpModule","body":"\n                   \n\n\n\n\n    Modules\n    OtpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\ncluster_OtpModule_imports\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nOtpModule\n\nOtpModule\n\nOtpModule -->\n\nMailModule->OtpModule\n\n\n\n\n\nSmsModule\n\nSmsModule\n\nOtpModule -->\n\nSmsModule->OtpModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nOtpModule -->\n\nUserModule->OtpModule\n\n\n\n\n\nOtpService \n\nOtpService \n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/otp/otp.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OtpService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                        \n                            SmsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtpService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailModule } from '@/mail/mail.module';\nimport { OtpService } from '@/otp/otp.service';\nimport { Otp, OtpSchema } from '@/otp/schemas/otp.schema';\nimport { SmsModule } from '@/sms/sms.module';\nimport { UserModule } from '@/user/user.module';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Otp.name,\n        schema: OtpSchema,\n      },\n    ]),\n    MailModule,\n    UserModule,\n    SmsModule,\n  ],\n  providers: [OtpService],\n  exports: [OtpService],\n})\nexport class OtpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpService.html":{"url":"injectables/OtpService.html","title":"injectable - OtpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/otp.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expirationMinutes\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllForUser\n                            \n                            \n                                    Async\n                                deleteUsedOtp\n                            \n                            \n                                    Private\n                                getExpirationDate\n                            \n                            \n                                    Private\n                                isOtpExpired\n                            \n                            \n                                    Async\n                                sendOtp\n                            \n                            \n                                    Async\n                                validateIfOtpIsVerified\n                            \n                            \n                                    Private\n                                    Async\n                                validateSendOtp\n                            \n                            \n                                    Private\n                                    Async\n                                validateVerifyOtp\n                            \n                            \n                                    Async\n                                verifyOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model, mailService: MailService, userService: UserService, smsService: SmsService)\n                    \n                \n                        \n                            \n                                Defined in src/otp/otp.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smsService\n                                                  \n                                                        \n                                                                        SmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAllForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllForUser(user: IUser, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUsedOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUsedOtp(body: SendOtpDto, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SendOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getExpirationDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getExpirationDate(updatedAt: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                updatedAt\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    new Date()\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Date\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isOtpExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isOtpExpired(updatedAt: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:277\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedAt\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOtp(body: SendOtpDto, userAgent: string, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SendOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateIfOtpIsVerified\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateIfOtpIsVerified(body: SendOtpDto, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SendOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateSendOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSendOtp(body: SendOtpDto, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:223\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SendOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateVerifyOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateVerifyOtp(body: VerifyOtpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            VerifyOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyOtp(body: VerifyOtpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/otp/otp.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            VerifyOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expirationMinutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : appProps().otpExpirationSeconds / 60\n                    \n                \n                    \n                        \n                                Defined in src/otp/otp.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OtpService.name)\n                    \n                \n                    \n                        \n                                Defined in src/otp/otp.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { SuccessMessages } from '@/_common/constants/success-messages.constant';\nimport { MessageDto } from '@/_common/dtos/response.dto';\nimport { responder } from '@/_common/helpers/responder.helper';\nimport { generateRandomNumbers } from '@/_common/helpers/string.helper';\nimport { MailService } from '@/mail/mail.service';\nimport { SendOtpDto } from '@/otp/dtos/send-otp.dto';\nimport { VerifyOtpDto } from '@/otp/dtos/verify-otp.dto';\nimport { OtpChannelEnum, OtpTypeEnum } from '@/otp/otp.enum';\nimport { IOtp, Otp, OtpDocument } from '@/otp/schemas/otp.schema';\nimport { SmsService } from '@/sms/sms.service';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { UserService } from '@/user/user.service';\nimport {\n  BadRequestException,\n  Inject,\n  Injectable,\n  Logger,\n  forwardRef,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ClientSession, DeleteResult, Model } from 'mongoose';\n\n@Injectable()\nexport class OtpService {\n  private readonly logger = new Logger(OtpService.name);\n\n  private readonly expirationMinutes = appProps().otpExpirationSeconds / 60;\n\n  constructor(\n    @InjectModel(Otp.name) private readonly model: Model,\n    private readonly mailService: MailService,\n    @Inject(forwardRef(() => UserService))\n    private readonly userService: UserService,\n    private readonly smsService: SmsService,\n  ) {}\n\n  async sendOtp(\n    body: SendOtpDto,\n    userAgent: string,\n    session: ClientSession = null,\n  ): Promise {\n    await this.validateSendOtp(body, session);\n\n    let otpDocument = await this.model.findOne(body, null, {\n      lean: false,\n      session,\n    });\n\n    // If otp does not exits or expired, generate a new one otherwise resend existing\n    const code =\n      !otpDocument || this.isOtpExpired(otpDocument?.updatedAt)\n        ? generateRandomNumbers()\n        : otpDocument.code;\n\n    //TODO: Check how this will work on mobile\n    if (otpDocument) {\n      otpDocument.code = code;\n      otpDocument.isSent = false;\n      otpDocument.isVerified = false;\n      otpDocument.userAgent = userAgent;\n\n      await otpDocument.save({ session });\n    } else {\n      const otpDocuments = await this.model.create(\n        [\n          {\n            value: body.value,\n            isVerified: false,\n            isSent: false,\n            code: code,\n            channel: body.channel,\n            type: body.type,\n            userAgent,\n          },\n        ],\n        { session },\n      );\n\n      otpDocument = otpDocuments[0];\n    }\n\n    const expirationMinutes = this.expirationMinutes;\n\n    switch (body.channel) {\n      case OtpChannelEnum.EMAIL:\n        await this.mailService.sendOtp({\n          to: otpDocument.value,\n          code: otpDocument.code,\n          expirationMinutes,\n        });\n        break;\n\n      case OtpChannelEnum.SMS:\n        await this.smsService.send({\n          to: otpDocument.value,\n          message: `Your Slot OTP is ${otpDocument.code}. It will expire in ${expirationMinutes} minutes.`,\n        });\n        break;\n    }\n\n    await otpDocument.updateOne({ isSent: true });\n\n    return responder.success(\n      SuccessMessages.otpSent(otpDocument.value, otpDocument.channel),\n    );\n  }\n\n  async verifyOtp(body: VerifyOtpDto): Promise {\n    const otpDocument = await this.validateVerifyOtp(body);\n\n    otpDocument.isVerified = true;\n\n    await otpDocument.save();\n\n    return responder.success(\n      SuccessMessages.otpVerified(body.value, body.channel),\n    );\n  }\n\n  async deleteUsedOtp(body: SendOtpDto, session: ClientSession = null) {\n    try {\n      await this.model.findOneAndDelete(body, { session });\n    } catch (error) {\n      this.logger.error((error as Error)?.message || error);\n    }\n  }\n\n  async validateIfOtpIsVerified(\n    body: SendOtpDto,\n    session: ClientSession = null,\n  ): Promise {\n    const otp = await this.model.findOne({ ...body, isVerified: true }, null, {\n      session,\n    });\n\n    if (!otp) {\n      switch (body.channel) {\n        case OtpChannelEnum.EMAIL:\n          throw new BadRequestException(\n            'OTP verification via email is required',\n          );\n\n        case OtpChannelEnum.SMS:\n          throw new BadRequestException(\n            'OTP verification via mobile verification is required',\n          );\n\n        default:\n          throw new BadRequestException('Invalid OTP channel');\n      }\n    }\n\n    return otp?.toObject();\n  }\n\n  async deleteAllForUser(\n    user: IUser,\n    session: ClientSession = null,\n  ): Promise {\n    return this.model.deleteMany(\n      {\n        $or: [\n          {\n            value: user.email,\n            channel: OtpChannelEnum.EMAIL,\n          },\n          {\n            value: user.mobileNumber,\n            channel: OtpChannelEnum.SMS,\n          },\n        ],\n      },\n      { session },\n    );\n  }\n\n  private getExpirationDate(updatedAt: Date = new Date()): Date {\n    const expires = new Date(updatedAt);\n\n    expires.setTime(\n      updatedAt.getTime() + appProps().otpExpirationSeconds * 1000,\n    );\n\n    return expires;\n  }\n\n  private async validateVerifyOtp(body: VerifyOtpDto) {\n    const otpDocument = (await this.model.findOne(\n      {\n        channel: body.channel,\n        type: body.type,\n        value: body.value,\n      },\n      null,\n      { lean: false },\n    )) as OtpDocument;\n\n    if (!otpDocument) {\n      throw new BadRequestException(ErrorMessages.REQUEST_OTP_CODE);\n    }\n\n    if (this.isOtpExpired(otpDocument?.updatedAt)) {\n      throw new BadRequestException(ErrorMessages.EXPIRED_OTP_CODE);\n    }\n\n    if (otpDocument.code !== body.code) {\n      throw new BadRequestException(ErrorMessages.otpCodeMismatch(body.value));\n    }\n\n    if (otpDocument.isVerified) {\n      throw new BadRequestException(ErrorMessages.ALREADY_VERIFIED_OTP);\n    }\n\n    if (!otpDocument.isSent) {\n      throw new BadRequestException(ErrorMessages.OTP_NOT_SENT);\n    }\n\n    return otpDocument;\n  }\n\n  private async validateSendOtp(\n    body: SendOtpDto,\n    session: ClientSession = null,\n  ) {\n    if (body.type == OtpTypeEnum.REGISTRATION) {\n      let user = null;\n\n      user = await this.userService.model.findOne(\n        {\n          [body.channel === OtpChannelEnum.EMAIL ? 'email' : 'mobileNumber']:\n            body.value,\n          password: { $exists: false },\n        },\n        null,\n        { session },\n      );\n\n      if (!user) {\n        throw new BadRequestException('Please start the registration process');\n      }\n    }\n\n    if (body.type == OtpTypeEnum.CHANGE_PASSWORD) {\n      const user = await this.userService.model.findOne(\n        {\n          email: body.value,\n          password: {\n            $exists: true,\n          },\n        },\n        null,\n        { session },\n      );\n\n      if (!user) {\n        throw new BadRequestException(ErrorMessages.USER_NOT_FOUND);\n      }\n    }\n\n    if (body.type == OtpTypeEnum.UPDATE_PROFILE) {\n      let user = null;\n\n      user = await (body.channel === OtpChannelEnum.EMAIL\n        ? this.userService.findByEmail(body.value, session)\n        : this.userService.findByMobileNumber(body.value, session));\n\n      if (user) {\n        throw new BadRequestException(\n          ErrorMessages.userAlreadyExist(body.value),\n        );\n      }\n    }\n  }\n\n  private isOtpExpired(updatedAt: Date): boolean {\n    const expirationDate = this.getExpirationDate(updatedAt);\n\n    return new Date() > expirationDate;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Owner.html":{"url":"injectables/Owner.html","title":"injectable - Owner","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Owner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/schemas/owner.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@Prop({type: undefined, ref: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/schemas/owner.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@Prop({type: undefined, ref: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/schemas/owner.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { User } from '@/user/schemas/user.schema';\nimport { Injectable } from '@nestjs/common';\nimport { Prop } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Schema as MongooseSchema } from 'mongoose';\n\n// please make sure ref matches User.name but pass it as string here to avoid dependency injection\n// don't use User.name directly here\n@Injectable()\nexport class Owner {\n  @ApiProperty({\n    type: String,\n  })\n  @Prop({\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'user',\n  })\n  createdBy?: User | string;\n\n  @ApiProperty({\n    type: String,\n  })\n  @Prop({\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'user',\n  })\n  updatedBy?: User | string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginationMeta\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class MessageDto {\n  message: string;\n}\n\nexport class ApiResponse extends MessageDto {\n  data: T;\n}\n\nexport class PaginationDto {\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  limit?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  page?: number;\n}\n\nexport class PaginationMeta {\n  total: number;\n  page: number;\n  lastPage: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  limit: number;\n}\n\nexport class Pagination {\n  meta: PaginationMeta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class MessageDto {\n  message: string;\n}\n\nexport class ApiResponse extends MessageDto {\n  data: T;\n}\n\nexport class PaginationDto {\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  limit?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  page?: number;\n}\n\nexport class PaginationMeta {\n  total: number;\n  page: number;\n  lastPage: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  limit: number;\n}\n\nexport class Pagination {\n  meta: PaginationMeta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationMeta.html":{"url":"classes/PaginationMeta.html","title":"class - PaginationMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dtos/response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasNextPage\n                            \n                            \n                                hasPreviousPage\n                            \n                            \n                                lastPage\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/dtos/response.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class MessageDto {\n  message: string;\n}\n\nexport class ApiResponse extends MessageDto {\n  data: T;\n}\n\nexport class PaginationDto {\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  limit?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt()\n  page?: number;\n}\n\nexport class PaginationMeta {\n  total: number;\n  page: number;\n  lastPage: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  limit: number;\n}\n\nexport class Pagination {\n  meta: PaginationMeta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadExistsPipe.html":{"url":"classes/PayloadExistsPipe.html","title":"class - PayloadExistsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadExistsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validations/payload-exists.validation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/payload-exists.validation.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\n\nInjectable();\nexport class PayloadExistsPipe implements PipeTransform {\n  transform(payload: any) {\n    if (!Object.keys(payload).length) {\n      throw new BadRequestException(ErrorMessages.EMPTY_PAYLOAD);\n    }\n\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProxyMiddleware.html":{"url":"injectables/ProxyMiddleware.html","title":"injectable - ProxyMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProxyMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middleware/proxy.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/middleware/proxy.middleware.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { createProxyMiddleware } from 'http-proxy-middleware';\n\n@Injectable()\nexport class ProxyMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    if (req.url.startsWith('/external-images')) {\n      createProxyMiddleware({\n        target: 'https://img.shields.io',\n        changeOrigin: true,\n        pathRewrite: {\n          '^/external-images': '',\n        },\n      })(req, res, next);\n    } else {\n      next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadinessCheckResponseDto.html":{"url":"classes/ReadinessCheckResponseDto.html","title":"class - ReadinessCheckResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadinessCheckResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                reasons\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reasons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { responder } from '@/_common/helpers/responder.helper';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { MailService } from '@/mail/mail.service';\nimport {\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectConnection } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Connection } from 'mongoose';\n\nexport class ReadinessCheckResponseDto {\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty({ type: String, isArray: true })\n  reasons: string[];\n}\n\n@Injectable()\nexport class AppService {\n  private readonly logger = new Logger(AppService.name);\n\n  constructor(\n    @InjectConnection() private connection: Connection,\n    private readonly configService: ConfigService,\n    private readonly mailService: MailService,\n  ) {}\n\n  healthCheck() {\n    // debugger;\n    return responder.success('Live and running, God is good!', {\n      environment: this.configService.get('NODE_ENV', { infer: true }),\n      status: 'UP',\n      uptime: `${process.uptime()} seconds`,\n    });\n  }\n\n  // TODO: test connection to SES, S3\n  async readinessCheck(): Promise {\n    let status = 'UP';\n    const reasons = [];\n\n    // db check\n    try {\n      await this.connection.db.admin().ping();\n\n      reasons.push('DB OK');\n    } catch (error) {\n      status = 'DOWN';\n      reasons.push('Unable to connect with DB.');\n      this.logger.error(error);\n    }\n\n    // mailer check\n\n    try {\n      await this.mailService.send({\n        to: appProps().adminEmail,\n        subject: 'SES ping',\n        body: 'SES ping from readiness check',\n        throwError: true,\n      });\n\n      reasons.push('SES OK');\n    } catch (error) {\n      status = 'DOWN';\n      reasons.push('Unable to connect with SES.');\n      this.logger.error(error);\n    }\n\n    // if any checks fail, report an error\n    if (status !== 'UP') {\n      throw new InternalServerErrorException({ status, reasons });\n    }\n\n    return { status, reasons };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedirectMiddleware.html":{"url":"injectables/RedirectMiddleware.html","title":"injectable - RedirectMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedirectMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middleware/redirect.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/middleware/redirect.middleware.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { join } from 'path';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class RedirectMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    if (req.path === '/documentation') {\n      res.sendFile(join(process.cwd(), 'documentation', 'index.html'));\n    } else {\n      next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshToken.html":{"url":"classes/RefreshToken.html","title":"class - RefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/schemas/refresh-token.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                expiresAt\n                            \n                            \n                                    \n                                isRevoked\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                    Optional\n                                userAgent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schemas/refresh-token.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isRevoked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schemas/refresh-token.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schemas/refresh-token.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schemas/refresh-token.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { User } from '@/user/schemas/user.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Schema as MongooseSchema } from 'mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class RefreshToken {\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    ref: User.name,\n  })\n  user: User | string;\n\n  @Prop({\n    default: false,\n  })\n  isRevoked: boolean;\n\n  @Prop({\n    required: true,\n  })\n  expiresAt: Date;\n\n  @Prop()\n  userAgent?: string;\n}\n\nexport const RefreshTokenSchema = SchemaFactory.createForClass(RefreshToken);\n\nexport interface IRefreshToken extends RefreshToken {\n  id: string;\n}\n\nexport type RefreshTokenDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/refresh-token.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class RefreshTokenDto {\n  @ApiProperty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenPayload.html":{"url":"classes/RefreshTokenPayload.html","title":"class - RefreshTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtid\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        jwtid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IRefreshToken['id']\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser['id']\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRefreshToken } from '@/auth/schemas/refresh-token.schema';\nimport { IRole } from '@/role/schemas/role.schema';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthPayload {\n  refreshToken?: string;\n\n  @ApiProperty({\n    example: 'bearer',\n  })\n  type: string;\n\n  accessToken: string;\n\n  @ApiProperty({\n    example: '10000ms',\n  })\n  expiresIn: string;\n\n  @ApiProperty({\n    example: new Date(),\n  })\n  expiresAt: string | Date;\n}\n\nexport class AuthSuccessResponse {\n  user?: IUser;\n  payload: AuthPayload;\n}\n\nexport class RefreshTokenPayload {\n  subject: IUser['id'];\n  jwtid: IRefreshToken['id'];\n}\n\nexport class AccessTokenPayload extends RefreshTokenPayload {\n  roles: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiRoutes\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                operations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/role.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'This have the super administrator rights'})@Prop({required: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/role.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Super Admin'})@Prop({required: true, unique: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/role.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        operations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schemas/role.schema.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { Owner } from '@/_common/schemas/owner.schema';\nimport { ApiRoute } from '@/role/schemas/api-route.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema({ ...schemaOptions() })\nexport class Role extends Owner {\n  @ApiProperty({\n    example: 'Super Admin',\n  })\n  @Prop({\n    required: true,\n    unique: true,\n    trim: true,\n  })\n  name: string;\n\n  @ApiProperty({\n    example: 'This have the super administrator rights',\n  })\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  description: string;\n\n  @ApiProperty({\n    type: [ApiRoute],\n  })\n  @Prop({\n    type: [\n      {\n        path: {\n          type: String,\n          required: true,\n          trim: true,\n          lowercase: true,\n        },\n        method: {\n          type: String,\n          required: true,\n          trim: true,\n          lowercase: true,\n        },\n      },\n    ],\n  })\n  apiRoutes: Array;\n\n  @ApiProperty({\n    example: ['CAN_SET_ROLE'],\n  })\n  @Prop({\n    type: [String],\n    required: true,\n  })\n  operations: Array;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\nexport class IRole extends Role {\n  id: string;\n}\n\nexport type RoleDocument = DocumentMeta;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiRoutes\n                            \n                            \n                                    \n                                    \n                                assignRoles\n                            \n                            \n                                    \n                                    \n                                createRole\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllRoles\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getRoleById\n                            \n                            \n                                    \n                                    \n                                removeRoles\n                            \n                            \n                                    \n                                    \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    apiRoutes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/routes')@ApiOkResponse({description: 'Routes', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        assignRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignRoles(undefined: IdDto, body: AssignRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/user/:id/assign')@ApiOkResponse({description: 'User', type: User})\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(body: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOkResponse({description: 'Role', type: IRole})\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRoles(query: PaginationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@PaginatedModel(IRole)\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getRoleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleById(undefined: IdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({description: 'Role', type: IRole})\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        removeRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRoles(undefined: IdDto, body: AssignRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/user/:id/remove')@ApiOkResponse({description: 'User', type: User})\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRole(undefined: IdDto, body: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@ApiOkResponse({description: 'Role', type: IRole})\n                \n            \n\n                    \n                        \n                            Defined in src/role/role.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { GetUser } from '@/_common/decorators/get-user.decorator';\nimport { PaginatedModel } from '@/_common/decorators/pagination.decorator';\nimport { IdDto } from '@/_common/dtos/id.dto';\nimport { PaginationDto } from '@/_common/dtos/response.dto';\nimport { ApiTagsEnum } from '@/_common/enums/api-tags.enum';\nimport { RoleGuard } from '@/auth/guards/role.guard';\nimport { AssignRoleDto } from '@/role/dtos/assign-role.dto';\nimport { ApiRouteDto, CreateRoleDto } from '@/role/dtos/create-role.dto';\nimport { UpdateRoleDto } from '@/role/dtos/update-role.dto';\nimport { RoleService } from '@/role/role.service';\nimport { IRole } from '@/role/schemas/role.schema';\nimport { IUser, User } from '@/user/schemas/user.schema';\nimport {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('/roles')\n@ApiTags(ApiTagsEnum.role)\n@ApiBearerAuth()\n@UseGuards(RoleGuard)\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @Get('/routes')\n  @ApiOkResponse({\n    description: 'Routes',\n    type: [ApiRouteDto],\n  })\n  apiRoutes() {\n    return this.roleService.apiRoutes();\n  }\n\n  @Post('/')\n  @ApiOkResponse({\n    description: 'Role',\n    type: IRole,\n  })\n  createRole(@Body() body: CreateRoleDto, @GetUser() user: IUser) {\n    return this.roleService.createRole(body, user);\n  }\n\n  @Patch('/:id')\n  @ApiOkResponse({\n    description: 'Role',\n    type: IRole,\n  })\n  updateRole(\n    @Param() { id }: IdDto,\n    @Body() body: UpdateRoleDto,\n    @GetUser() user: IUser,\n  ) {\n    return this.roleService.update(id, body, user);\n  }\n\n  @Patch('/user/:id/assign')\n  @ApiOkResponse({\n    description: 'User',\n    type: User,\n  })\n  assignRoles(\n    @Param() { id }: IdDto,\n    @Body() body: AssignRoleDto,\n    @GetUser() user: IUser,\n  ) {\n    return this.roleService.assignRoles(id, body, user);\n  }\n\n  @Patch('/user/:id/remove')\n  @ApiOkResponse({\n    description: 'User',\n    type: User,\n  })\n  removeRoles(\n    @Param() { id }: IdDto,\n    @Body() body: AssignRoleDto,\n    @GetUser() user: IUser,\n  ) {\n    return this.roleService.removeRoles(id, body, user);\n  }\n\n  @Get('/')\n  @PaginatedModel(IRole)\n  async getAllRoles(@Query() query: PaginationDto) {\n    return this.roleService.paginate(query);\n  }\n\n  @Get('/:id')\n  @ApiOkResponse({\n    description: 'Role',\n    type: IRole,\n  })\n  async getRoleById(@Param() { id }: IdDto) {\n    return this.roleService.getById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleGuard.html":{"url":"injectables/RoleGuard.html","title":"injectable - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/role.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            JwtAuthGuard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                newLogger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/role.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Inherited from         JwtAuthGuard\n\n                        \n                    \n                    \n                        \n                                Defined in         JwtAuthGuard:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        newLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RoleGuard.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/guards/role.guard.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { JwtAuthGuard } from '@/auth/guards/jwt-auth.guard';\nimport { RoleService } from '@/role/role.service';\nimport {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  Logger,\n} from '@nestjs/common';\n\n//  RoleGuard already extends JwtAuthGuard\n@Injectable()\nexport class RoleGuard extends JwtAuthGuard {\n  private readonly newLogger = new Logger(RoleGuard.name);\n\n  constructor(private readonly roleService: RoleService) {\n    super();\n  }\n\n  async canActivate(context: ExecutionContext) {\n    try {\n      const args = context.getArgs()[0];\n\n      const path = args?.route?.path || '';\n      const method = args?.route?.stack[0]?.method || '';\n\n      await super.canActivate(context);\n\n      const { user } = args;\n\n      const roleIds: Array = (user?.roles || []).map((item) =>\n        item?.id?.toString(),\n      );\n\n      const roles = await Promise.all(\n        roleIds.map((role) => this.roleService.getById(role)),\n      );\n\n      const allowed = roles.some((role) =>\n        role.apiRoutes.some(\n          (route) => route.path === path && route.method === method,\n        ),\n      );\n\n      if (!allowed) {\n        throw new ForbiddenException(\n          `You are not allowed to perform ${method?.toUpperCase()} on ${path}`,\n        );\n      }\n\n      return allowed;\n    } catch (error) {\n      this.newLogger.error(error, 'Role guard failed');\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nUserModule->RoleModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RoleController } from '@/role/role.controller';\nimport { Role, RoleSchema } from '@/role/schemas/role.schema';\nimport { RoleService } from '@/role/role.service';\nimport { UserModule } from '@/user/user.module';\nimport { Global, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ApiRoute, ApiRouteSchema } from '@/role/schemas/api-route.schema';\n\n@Global()\n@Module({\n  controllers: [RoleController],\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]),\n    MongooseModule.forFeature([\n      { name: ApiRoute.name, schema: ApiRouteSchema },\n    ]),\n    UserModule,\n  ],\n  providers: [RoleService],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                apiRoutes\n                            \n                            \n                                    Async\n                                assignRoles\n                            \n                            \n                                    Async\n                                createRole\n                            \n                            \n                                    Private\n                                    Async\n                                findRoleByName\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Private\n                                mapApiRoutes\n                            \n                            \n                                    Async\n                                paginate\n                            \n                            \n                                    Async\n                                removeRoles\n                            \n                            \n                                    Async\n                                setApiRoutes\n                            \n                            \n                                    Async\n                                syncApiRoutes\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                validateRoutes\n                            \n                            \n                                    Private\n                                    Async\n                                validateUpdateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model, apiRouteModel: Model, userService: UserService, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiRouteModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        apiRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    apiRoutes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        assignRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignRoles(id: string, body: AssignRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(body: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        findRoleByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRoleByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:238\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapApiRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapApiRoutes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:244\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        paginate\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginate(query: PaginationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRoles(id: string, body: AssignRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setApiRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    setApiRoutes(availableRoutes: Array)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                availableRoutes\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncApiRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncApiRoutes(apiRoutes: ApiRouteDto[], session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                apiRoutes\n                                            \n                                                        ApiRouteDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, body: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateRoutes(apiRoutes: Array)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiRoutes\n                                            \n                                                            Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateUpdateRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUpdateRole(id: string, body: UpdateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/role/role.service.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RoleService.name)\n                    \n                \n                    \n                        \n                                Defined in src/role/role.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { CreateRoleDto } from '@/role/dtos/create-role.dto';\nimport { UpdateRoleDto } from '@/role/dtos/update-role.dto';\nimport { IRole, Role, RoleDocument } from '@/role/schemas/role.schema';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { ApiRouteDto } from '@/role/dtos/api-route.dto';\nimport { AssignRoleDto } from '@/role/dtos/assign-role.dto';\nimport { ApiRoute } from '@/role/schemas/api-route.schema';\nimport { UserService } from '@/user/user.service';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { ClientSession, Connection, Model } from 'mongoose';\nimport { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { paginateAndSort } from '@/_common/helpers/filter.helper';\nimport { PaginationDto } from '@/_common/dtos/response.dto';\n\n@Injectable()\nexport class RoleService {\n  private readonly logger = new Logger(RoleService.name);\n  constructor(\n    @InjectModel(Role.name)\n    private readonly model: Model,\n    @InjectModel(ApiRoute.name)\n    private readonly apiRouteModel: Model,\n    private readonly userService: UserService,\n    @InjectConnection() private readonly connection: Connection,\n  ) {}\n\n  async setApiRoutes(availableRoutes: Array) {\n    const session = await this.connection.startSession();\n\n    try {\n      session.startTransaction();\n\n      await this.apiRouteModel.deleteMany({}, { session });\n\n      const inserted = await this.apiRouteModel.insertMany(availableRoutes, {\n        session,\n      });\n\n      const apiRoutes = inserted.map(this.mapApiRoutes());\n\n      await this.syncApiRoutes(apiRoutes, session);\n\n      await session.commitTransaction();\n    } catch (error) {\n      await session.abortTransaction();\n\n      this.logger.error(error);\n    } finally {\n      await session.endSession();\n    }\n  }\n\n  async apiRoutes() {\n    const routes = await this.apiRouteModel.find().lean().exec();\n\n    return routes.map(this.mapApiRoutes());\n  }\n\n  async syncApiRoutes(apiRoutes: ApiRouteDto[], session: ClientSession = null) {\n    const roles = (await this.model.find({}, null, {\n      lean: false,\n      session,\n    })) as Array;\n\n    if (!apiRoutes.length || !roles.length) {\n      this.logger.log('No API routes or roles found');\n      return [];\n    }\n\n    const rolesPromise$: Array> = [];\n\n    for (const role of roles) {\n      const isValidRoutes = role.apiRoutes.every((apiRoute) => {\n        return apiRoutes.some(\n          (route) =>\n            route.method === apiRoute.method && route.path === apiRoute.path,\n        );\n      });\n\n      if (isValidRoutes) {\n        continue;\n      }\n\n      role.apiRoutes = role.apiRoutes.filter((apiRoute) => {\n        return apiRoutes.some(\n          (route) =>\n            route.method === apiRoute.method && route.path === apiRoute.path,\n        );\n      });\n\n      rolesPromise$.push(\n        role.save({\n          session,\n        }),\n      );\n    }\n\n    if (!rolesPromise$.length) {\n      this.logger.log('All roles are in sync');\n      return [];\n    }\n\n    const saved = await Promise.all(rolesPromise$);\n\n    this.logger.log('These roles were updated:', saved);\n  }\n\n  async createRole(body: CreateRoleDto, user: IUser) {\n    await this.validateRoutes(body.apiRoutes);\n\n    const role = await this.findRoleByName(body.name);\n\n    if (role) {\n      throw new BadRequestException(\n        ErrorMessages.alreadyExist(Role.name, 'name', body.name),\n      );\n    }\n\n    return this.model.create({\n      ...body,\n      createdBy: user.id,\n    });\n  }\n\n  async update(id: string, body: UpdateRoleDto, user: IUser) {\n    const existingRole = await this.validateUpdateRole(id, body);\n\n    Object.assign(existingRole, {\n      ...body,\n      updatedBy: user?.id || existingRole?.updatedBy,\n    });\n\n    return existingRole.save();\n  }\n\n  async getById(id: string) {\n    const role = await this.model.findById(id);\n\n    if (!role) {\n      return null;\n    }\n\n    const roleObject = role.toObject();\n\n    return {\n      ...roleObject,\n      apiRoutes: roleObject.apiRoutes.map(this.mapApiRoutes()),\n    };\n  }\n\n  async paginate(query: PaginationDto) {\n    const { data, meta } = await paginateAndSort({\n      model: this.model,\n      filters: {\n        name: new RegExp(query.search, 'i'),\n      },\n      page: query?.page,\n      limit: query?.limit,\n      options: {\n        lean: true,\n      },\n    });\n\n    return {\n      data: data.map((role) => {\n        return {\n          ...role,\n          apiRoutes: role.apiRoutes.map(this.mapApiRoutes()),\n        };\n      }),\n      meta,\n    };\n  }\n\n  async assignRoles(id: string, body: AssignRoleDto, user: IUser) {\n    for (const role of body.roles) {\n      await this.getById(role);\n    }\n\n    return this.userService.assignRoles(id, body.roles, user);\n  }\n\n  async removeRoles(id: string, body: AssignRoleDto, user: IUser) {\n    for (const role of body.roles) {\n      await this.getById(role);\n    }\n\n    return this.userService.removeRoles(id, body.roles, user);\n  }\n\n  private async validateUpdateRole(id: string, body: UpdateRoleDto) {\n    if (body?.apiRoutes?.length > 0) {\n      await this.validateRoutes(body.apiRoutes);\n    }\n\n    const existingRole = await this.model.findById(id, null, {\n      lean: false,\n    });\n\n    if (!existingRole) {\n      throw new BadRequestException('Role not found');\n    }\n\n    if (\n      body?.name &&\n      body?.name?.toLowerCase() !== existingRole?.name?.toLowerCase()\n    ) {\n      const role = await this.findRoleByName(body.name);\n\n      if (role) {\n        throw new BadRequestException(\n          ErrorMessages.alreadyExist(Role.name, 'name', body.name),\n        );\n      }\n    }\n\n    return existingRole;\n  }\n\n  private async validateRoutes(apiRoutes: Array) {\n    for (const apiRoute of apiRoutes) {\n      const availableRoutes = await this.apiRoutes();\n\n      const index = availableRoutes.findIndex(\n        (route) =>\n          route.method === apiRoute.method && route.path === apiRoute.path,\n      );\n\n      if (index === -1) {\n        throw new BadRequestException(\n          ErrorMessages.routeDoesNotExist(apiRoute),\n        );\n      }\n    }\n  }\n\n  private async findRoleByName(name: string) {\n    return this.model.findOne({\n      name: new RegExp(`^${name}$`, 'i'), //case insensitive full match\n    });\n  }\n\n  private mapApiRoutes(): (value: ApiRoute) => {\n    path: string;\n    method: string;\n  } {\n    return ({ path, method }) => ({ path, method });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SendChampController.html":{"url":"controllers/SendChampController.html","title":"controller - SendChampController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SendChampController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sendchamp/sendchamp.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sendchamp\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                processsendChampHook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        processsendChampHook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processsendChampHook(body: SendchampWebhookEvent, headers: Headers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/webhook')@HttpCode(HttpStatus.OK)@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/sms/sendchamp/sendchamp.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SendchampWebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Headers,\n  HttpCode,\n  HttpStatus,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiExcludeEndpoint, ApiTags } from '@nestjs/swagger';\nimport { SendChampService } from '@/sms/sendchamp/sendchamp.service';\nimport { SendchampWebhookEvent } from '@/sms/sendchamp/sendchamp.interface';\nimport { ApiTagsEnum } from '@/_common/enums/api-tags.enum';\n\n@Controller('sendchamp')\n@ApiTags(ApiTagsEnum.sendchamp)\n@ApiBearerAuth()\nexport class SendChampController {\n  constructor(private readonly sendChampService: SendChampService) {}\n\n  @Post('/webhook')\n  @HttpCode(HttpStatus.OK)\n  @ApiExcludeEndpoint()\n  async processsendChampHook(\n    @Body() body: SendchampWebhookEvent,\n    @Headers() headers: Headers,\n  ) {\n    console.log(JSON.stringify(headers, null, 2));\n    return this.sendChampService.processWebhook(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendChampError.html":{"url":"interfaces/SendChampError.html","title":"interface - SendChampError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendChampError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sendchamp/sendchamp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatusCode } from 'axios';\n\nexport interface SendChampError {\n  message: string;\n  errors: string;\n  status: number;\n  success: boolean;\n}\n\nexport interface SendChampSuccess {\n  status: 'success';\n  errors: null;\n  code: HttpStatusCode;\n  message: string;\n  data: T;\n}\n\nexport type SendChampSmsSent =\n  | {\n      id: string;\n      phone_number: string;\n      reference: string;\n      status: 'processing';\n    }\n  | {\n      business_id: string;\n      total_contacts: number;\n      created_at: string;\n      updated_at: string;\n    };\n\nexport enum SendChampSmsRouteEnum {\n  DND = 'dnd',\n  NON_DND = 'non_dnd',\n  INTERNATIONAL = 'international',\n}\n\nexport interface SendChampSmsWalletBalance {\n  business_name: string;\n  wallet_balance: string;\n}\n\nexport interface SendchampWebhookEvent {\n  service: string;\n  status: string;\n  phone_number: string;\n  message: string;\n  sms_uid: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SendChampModule.html":{"url":"modules/SendChampModule.html","title":"module - SendChampModule","body":"\n                   \n\n\n\n\n    Modules\n    SendChampModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SendChampModule\n\n\n\ncluster_SendChampModule_providers\n\n\n\ncluster_SendChampModule_exports\n\n\n\n\nSendChampService \n\nSendChampService \n\n\n\nSendChampModule\n\nSendChampModule\n\nSendChampService  -->\n\nSendChampModule->SendChampService \n\n\n\n\n\nSendChampService\n\nSendChampService\n\nSendChampModule -->\n\nSendChampService->SendChampModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sms/sendchamp/sendchamp.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SendChampService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SendChampController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SendChampService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SendChampService } from './sendchamp.service';\nimport { HttpModule } from '@nestjs/axios';\nimport { SendChampController } from '@/sms/sendchamp/sendchamp.controller';\n\n@Module({\n  controllers: [SendChampController],\n  imports: [HttpModule],\n  providers: [SendChampService],\n  exports: [SendChampService],\n})\nexport class SendChampModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SendChampService.html":{"url":"injectables/SendChampService.html","title":"injectable - SendChampService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SendChampService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sendchamp/sendchamp.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                sendChampUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Async\n                                processWebhook\n                            \n                            \n                                    Private\n                                requestConfig\n                            \n                            \n                                    Private\n                                sendChampAuthorization\n                            \n                            \n                                    Async\n                                sendSms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/sms/sendchamp/sendchamp.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBalance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/sendchamp/sendchamp.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processWebhook(event: SendchampWebhookEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/sendchamp/sendchamp.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            SendchampWebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestConfig(Authorization?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/sendchamp/sendchamp.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Authorization\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AxiosRequestConfig\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendChampAuthorization\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendChampAuthorization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/sendchamp/sendchamp.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendSms\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSms(to: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/sendchamp/sendchamp.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SendChampService.name)\n                    \n                \n                    \n                        \n                                Defined in src/sms/sendchamp/sendchamp.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sendChampUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.sendchamp.com/api/v1/'\n                    \n                \n                    \n                        \n                                Defined in src/sms/sendchamp/sendchamp.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { handleAxiosError } from '@/_common/helpers/http.helper';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport {\n  SendChampSuccess,\n  SendChampSmsWalletBalance,\n  SendChampSmsSent,\n  SendChampSmsRouteEnum,\n  SendchampWebhookEvent,\n} from '@/sms/sendchamp/sendchamp.interface';\nimport { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosRequestConfig } from 'axios';\nimport { catchError, lastValueFrom, map } from 'rxjs';\n\n@Injectable()\nexport class SendChampService {\n  private readonly logger = new Logger(SendChampService.name);\n  private readonly sendChampUrl = 'https://api.sendchamp.com/api/v1/';\n\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async getBalance() {\n    try {\n      const response = await lastValueFrom(\n        this.httpService\n          .post>(\n            this.sendChampUrl + 'wallet/wallet_balance',\n            null,\n            {\n              ...this.requestConfig(this.sendChampAuthorization()),\n            },\n          )\n          .pipe(\n            map(({ data }) => {\n              return data;\n            }),\n            catchError(handleAxiosError),\n          ),\n      );\n\n      return +response?.data?.wallet_balance || 0;\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  async sendSms(to: string, message: string) {\n    return await lastValueFrom(\n      this.httpService\n        .post>(\n          this.sendChampUrl + 'sms/send',\n          {\n            to,\n            message,\n            sender_name: 'SAlert',\n            route: SendChampSmsRouteEnum.DND,\n          },\n          {\n            ...this.requestConfig(this.sendChampAuthorization()),\n          },\n        )\n        .pipe(\n          map(({ data }) => {\n            return data;\n          }),\n          catchError(handleAxiosError),\n        ),\n    );\n  }\n\n  async processWebhook(event: SendchampWebhookEvent) {\n    this.logger.log(`Processing webhook event`, event);\n\n    return true;\n\n    // const secretHash = this.configService.get('FLUTTERWAVE_SECRET_HASH', {\n    //   infer: true,\n    // });\n\n    // if (!signature || signature !== secretHash) {\n    //   throw new UnauthorizedException();\n    // }\n\n    // let processed = false;\n\n    // switch (event.event) {\n    //   case 'charge.completed':\n    //     // processed = await this.subscriptionService.flutterwaveChargeComplete(\n    //     //   event.data,\n    //     // );\n    //     break;\n\n    //   default:\n    //     throw new BadRequestException('Unhandled payment event');\n    // }\n\n    // return processed;\n  }\n\n  private sendChampAuthorization() {\n    return `Bearer ${this.configService.get('SENDCHAMP_PUBLIC_KEY')}`;\n  }\n\n  private requestConfig(Authorization?: string): AxiosRequestConfig {\n    return {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        ...(!!Authorization && { Authorization }),\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendChampSmsWalletBalance.html":{"url":"interfaces/SendChampSmsWalletBalance.html","title":"interface - SendChampSmsWalletBalance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendChampSmsWalletBalance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sendchamp/sendchamp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            business_name\n                                        \n                                \n                                \n                                        \n                                            wallet_balance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        business_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        business_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallet_balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallet_balance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatusCode } from 'axios';\n\nexport interface SendChampError {\n  message: string;\n  errors: string;\n  status: number;\n  success: boolean;\n}\n\nexport interface SendChampSuccess {\n  status: 'success';\n  errors: null;\n  code: HttpStatusCode;\n  message: string;\n  data: T;\n}\n\nexport type SendChampSmsSent =\n  | {\n      id: string;\n      phone_number: string;\n      reference: string;\n      status: 'processing';\n    }\n  | {\n      business_id: string;\n      total_contacts: number;\n      created_at: string;\n      updated_at: string;\n    };\n\nexport enum SendChampSmsRouteEnum {\n  DND = 'dnd',\n  NON_DND = 'non_dnd',\n  INTERNATIONAL = 'international',\n}\n\nexport interface SendChampSmsWalletBalance {\n  business_name: string;\n  wallet_balance: string;\n}\n\nexport interface SendchampWebhookEvent {\n  service: string;\n  status: string;\n  phone_number: string;\n  message: string;\n  sms_uid: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendChampSuccess.html":{"url":"interfaces/SendChampSuccess.html","title":"interface - SendChampSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendChampSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sendchamp/sendchamp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:     HttpStatusCode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatusCode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatusCode } from 'axios';\n\nexport interface SendChampError {\n  message: string;\n  errors: string;\n  status: number;\n  success: boolean;\n}\n\nexport interface SendChampSuccess {\n  status: 'success';\n  errors: null;\n  code: HttpStatusCode;\n  message: string;\n  data: T;\n}\n\nexport type SendChampSmsSent =\n  | {\n      id: string;\n      phone_number: string;\n      reference: string;\n      status: 'processing';\n    }\n  | {\n      business_id: string;\n      total_contacts: number;\n      created_at: string;\n      updated_at: string;\n    };\n\nexport enum SendChampSmsRouteEnum {\n  DND = 'dnd',\n  NON_DND = 'non_dnd',\n  INTERNATIONAL = 'international',\n}\n\nexport interface SendChampSmsWalletBalance {\n  business_name: string;\n  wallet_balance: string;\n}\n\nexport interface SendchampWebhookEvent {\n  service: string;\n  status: string;\n  phone_number: string;\n  message: string;\n  sms_uid: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendMailPayload.html":{"url":"interfaces/SendMailPayload.html","title":"interface - SendMailPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendMailPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            throwError\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        throwError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        throwError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport { MailOtpDto } from '@/mail/dtos/mail-otp.dto';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { validateOrReject } from 'class-validator';\n\ninterface SendMailPayload {\n  to: string;\n  subject: string;\n  body: string;\n  firstName?: string;\n  throwError?: boolean;\n}\n@Injectable()\nexport class MailService {\n  private readonly logger = new Logger(MailService.name);\n  private readonly from = this.configService.get('MAIL_FROM', { infer: true });\n\n  constructor(\n    private readonly mailerService: MailerService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async sendOtp(options: MailOtpDto) {\n    const subject = `${appProps().name} - Email Verification`;\n\n    await validateOrReject(options);\n\n    const { to, code: otp, expirationMinutes } = options;\n\n    return this.mailerService.sendMail({\n      to: to,\n      from: this.from,\n      subject,\n      template: 'send-otp',\n      context: {\n        subject,\n        otp,\n        expirationMinutes,\n        ...appProps(),\n      },\n    });\n  }\n\n  async sendWelcomeEmail(to: string, fullName: string) {\n    const subject = `Welcome to ${appProps().name}`;\n\n    return this.mailerService.sendMail({\n      to,\n      from: this.from,\n      subject,\n      template: 'welcome',\n      context: {\n        subject,\n        fullName,\n        ...appProps(),\n      },\n    });\n  }\n\n  async send(payload: SendMailPayload) {\n    const { to, subject, throwError, ...rest } = payload;\n\n    return await this.mailerService\n      .sendMail({\n        to,\n        from: this.from,\n        subject,\n        template: 'send-mail',\n        context: {\n          ...appProps(),\n          ...rest,\n        },\n      })\n      .then()\n      .catch((error) => {\n        this.logger.error(error?.message || error);\n\n        if (throwError) {\n          throw error;\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendOtpDto.html":{"url":"classes/SendOtpDto.html","title":"class - SendOtpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendOtpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/dtos/send-otp.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                channel\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpChannelEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsEnum(OtpChannelEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/dtos/send-otp.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsEnum(OtpTypeEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/dtos/send-otp.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsChannelValue()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/dtos/send-otp.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { getInternationalPhoneNumber } from '@/_common/helpers/mobile.helper';\nimport { OtpChannelEnum, OtpTypeEnum } from '@/otp/otp.enum';\nimport { Transform } from 'class-transformer';\nimport {\n  isEmail,\n  IsEnum,\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  isMobilePhone,\n  ValidationOptions,\n  registerDecorator,\n} from 'class-validator';\n\n@ValidatorConstraint({ async: false })\nexport class IsChannelValueConstraint implements ValidatorConstraintInterface {\n  private errorMessage = '';\n\n  validate(value: any, args: ValidationArguments) {\n    try {\n      const object = args.object as any;\n\n      switch (object.channel) {\n        case OtpChannelEnum.EMAIL:\n          if (!isEmail(value)) {\n            throw new Error('Provide a valid email address');\n          }\n          break;\n\n        case OtpChannelEnum.SMS:\n          if (!isMobilePhone(value, 'en-NG')) {\n            throw new Error('Provide a valid Nigerian mobile number');\n          }\n          break;\n      }\n\n      return true;\n    } catch (error: unknown) {\n      this.errorMessage = (error as Error).message;\n      return false;\n    }\n  }\n\n  defaultMessage() {\n    return this.errorMessage;\n  }\n}\n\nexport function IsChannelValue(validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsChannelValueConstraint,\n    });\n  };\n}\n\nexport class SendOtpDto {\n  @Transform(({ value }) => value.toUpperCase())\n  @IsEnum(OtpTypeEnum)\n  type: OtpTypeEnum;\n\n  @Transform(({ value }) => value.toUpperCase())\n  @IsEnum(OtpChannelEnum)\n  channel: OtpChannelEnum;\n\n  @Transform(({ value, obj }) =>\n    obj.channel === OtpChannelEnum.SMS\n      ? getInternationalPhoneNumber(value)\n      : value,\n  )\n  @IsChannelValue()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendchampWebhookEvent.html":{"url":"interfaces/SendchampWebhookEvent.html","title":"interface - SendchampWebhookEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendchampWebhookEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sendchamp/sendchamp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            phone_number\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            sms_uid\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone_number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sms_uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sms_uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatusCode } from 'axios';\n\nexport interface SendChampError {\n  message: string;\n  errors: string;\n  status: number;\n  success: boolean;\n}\n\nexport interface SendChampSuccess {\n  status: 'success';\n  errors: null;\n  code: HttpStatusCode;\n  message: string;\n  data: T;\n}\n\nexport type SendChampSmsSent =\n  | {\n      id: string;\n      phone_number: string;\n      reference: string;\n      status: 'processing';\n    }\n  | {\n      business_id: string;\n      total_contacts: number;\n      created_at: string;\n      updated_at: string;\n    };\n\nexport enum SendChampSmsRouteEnum {\n  DND = 'dnd',\n  NON_DND = 'non_dnd',\n  INTERNATIONAL = 'international',\n}\n\nexport interface SendChampSmsWalletBalance {\n  business_name: string;\n  wallet_balance: string;\n}\n\nexport interface SendchampWebhookEvent {\n  service: string;\n  status: string;\n  phone_number: string;\n  message: string;\n  sms_uid: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPasswordDto.html":{"url":"classes/SetPasswordDto.html","title":"class - SetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/set-password.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ChangePasswordDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Matches(PASSWORD_REGEX, {message: undefined})@FieldsMatch('password', {message: 'Confirm password must match password'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ChangePasswordDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ChangePasswordDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Matches(PASSWORD_REGEX, {message: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ChangePasswordDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ChangePasswordDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangePasswordDto } from '@/auth/dtos/change-password.dto';\n\nexport class SetPasswordDto extends ChangePasswordDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SmsModule.html":{"url":"modules/SmsModule.html","title":"module - SmsModule","body":"\n                   \n\n\n\n\n    Modules\n    SmsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmsModule\n\n\n\ncluster_SmsModule_providers\n\n\n\ncluster_SmsModule_exports\n\n\n\ncluster_SmsModule_imports\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSmsModule\n\nSmsModule\n\nSmsModule -->\n\nMailModule->SmsModule\n\n\n\n\n\nSendChampModule\n\nSendChampModule\n\nSmsModule -->\n\nSendChampModule->SmsModule\n\n\n\n\n\nTermiiModule\n\nTermiiModule\n\nSmsModule -->\n\nTermiiModule->SmsModule\n\n\n\n\n\nSmsService \n\nSmsService \n\nSmsService  -->\n\nSmsModule->SmsService \n\n\n\n\n\nSmsService\n\nSmsService\n\nSmsModule -->\n\nSmsService->SmsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sms/sms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SmsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                        \n                            SendChampModule\n                        \n                        \n                            TermiiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SmsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailModule } from '@/mail/mail.module';\nimport { SmsService } from '@/sms/sms.service';\nimport { SendChampModule } from '@/sms/sendchamp/sendchamp.module';\nimport { TermiiModule } from '@/sms/termii/termii.module';\n\n@Module({\n  imports: [MailModule, SendChampModule, TermiiModule],\n  providers: [SmsService],\n  exports: [SmsService],\n})\nexport class SmsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmsService.html":{"url":"injectables/SmsService.html","title":"injectable - SmsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attempt\n                            \n                            \n                                    Private\n                                    Readonly\n                                costOfOneMessage\n                            \n                            \n                                    Private\n                                delay\n                            \n                            \n                                    Private\n                                    Readonly\n                                lengthOfOneMessage\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxRetries\n                            \n                            \n                                    Private\n                                retryService\n                            \n                            \n                                    Private\n                                sendChampCanSend\n                            \n                            \n                                    Private\n                                    Readonly\n                                smsSuccessMessage\n                            \n                            \n                                    Private\n                                termiiCanSend\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                insufficientCreditAlert\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailService: MailService, sendChampService: SendChampService, termiiService: TermiiService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/sms/sms.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sendChampService\n                                                  \n                                                        \n                                                                        SendChampService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        termiiService\n                                                  \n                                                        \n                                                                        TermiiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insufficientCreditAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    insufficientCreditAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/sms.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/sms.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        attempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        costOfOneMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        lengthOfOneMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SmsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        maxRetries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        retryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SmsProviderEnum | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendChampCanSend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        smsSuccessMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMS sent successfully!'\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        termiiCanSend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/sms/sms.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { EnvironmentEnum } from '@/_common/enums/environment.enum';\nimport { sleep } from '@/_common/helpers/promises.helper';\nimport { MailService } from '@/mail/mail.service';\nimport { SendChampService } from '@/sms/sendchamp/sendchamp.service';\nimport { TermiiService } from '@/sms/termii/termii.service';\nimport {\n  Injectable,\n  Logger,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nenum ErrorEnum {\n  INSUFFICIENT_BALANCE = 'INSUFFICIENT_BALANCE',\n}\n\nenum SmsProviderEnum {\n  SENDCHAMP = 'SENDCHAMP',\n  TERMII = 'TERMII',\n}\n\n@Injectable()\nexport class SmsService {\n  private readonly logger = new Logger(SmsService.name);\n  private readonly lengthOfOneMessage = 160;\n  private readonly costOfOneMessage = 4;\n  private readonly smsSuccessMessage = 'SMS sent successfully!';\n  private readonly maxRetries = 6;\n  private sendChampCanSend = false;\n  private termiiCanSend = false;\n  private retryService: SmsProviderEnum | null = null;\n  private attempt = 0;\n  private delay = 1000;\n\n  constructor(\n    private readonly mailService: MailService,\n    private readonly sendChampService: SendChampService,\n    private readonly termiiService: TermiiService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async send({ to, message }: { to: string; message: string }) {\n    try {\n      const environment = this.configService.get('NODE_ENV', {\n        infer: true,\n      });\n\n      // Mock for development so we don't waste credit\n      if (environment !== EnvironmentEnum.prod) {\n        return this.smsSuccessMessage;\n      }\n\n      if (!this.attempt) {\n        const [sendChampBalance, termiiBalance] = await Promise.all([\n          this.sendChampService.getBalance(),\n          this.termiiService.getBalance(),\n        ]);\n\n        const messageCount = Math.ceil(\n          message.length / this.lengthOfOneMessage,\n        );\n\n        const smsPrice = this.costOfOneMessage * messageCount;\n\n        this.termiiCanSend = termiiBalance > smsPrice;\n        this.sendChampCanSend = sendChampBalance > smsPrice;\n\n        this.retryService = this.sendChampCanSend\n          ? SmsProviderEnum.SENDCHAMP\n          : this.termiiCanSend\n            ? SmsProviderEnum.TERMII\n            : null;\n\n        this.logger.log({\n          smsPrice,\n          sendChampBalance,\n          termiiBalance,\n          sendChampCanSend: this.sendChampCanSend,\n          termiiCanSend: this.termiiCanSend,\n          retryService: this.retryService,\n        });\n\n        if (!this.retryService) {\n          throw new Error(ErrorEnum.INSUFFICIENT_BALANCE);\n        }\n      }\n\n      if (\n        this.sendChampCanSend &&\n        this.retryService === SmsProviderEnum.SENDCHAMP\n      ) {\n        const response = await this.sendChampService\n          .sendSms(to, message)\n          .catch(() => {\n            this.retryService = this.termiiCanSend\n              ? SmsProviderEnum.TERMII\n              : SmsProviderEnum.SENDCHAMP;\n          });\n\n        this.logger.log({ sendchamp: response });\n        return this.smsSuccessMessage;\n      }\n\n      if (this.termiiCanSend && this.retryService === SmsProviderEnum.TERMII) {\n        const response = await this.termiiService\n          .sendSms(to, message)\n          .catch(() => {\n            this.retryService = this.sendChampCanSend\n              ? SmsProviderEnum.SENDCHAMP\n              : SmsProviderEnum.TERMII;\n          });\n\n        this.logger.log({ termii: response });\n        return this.smsSuccessMessage;\n      }\n    } catch (error) {\n      this.logger.error(error);\n\n      const errorMessage = (error as any)?.message || 'Failed to send SMS';\n\n      if (errorMessage === ErrorEnum.INSUFFICIENT_BALANCE) {\n        this.insufficientCreditAlert();\n\n        throw new UnprocessableEntityException(\n          'Insufficient balance to send SMS',\n        );\n      }\n\n      if (this.attempt \n        this.logger.error(\n          error?.message || 'failed to send insufficient credit mail',\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SortQueryConstraint.html":{"url":"injectables/SortQueryConstraint.html","title":"injectable - SortQueryConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SortQueryConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validations/sort-query.validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/sort-query.validation.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(sort: string, validationArguments: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/sort-query.validation.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationArguments\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/sort-query.validation.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { Injectable } from '@nestjs/common';\nimport {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'sort-constraint', async: false })\n@Injectable()\nexport class SortQueryConstraint implements ValidatorConstraintInterface {\n  private errorMessage = '';\n\n  validate(sort: string, validationArguments: ValidationArguments) {\n    try {\n      const { constraints: fields } = validationArguments;\n\n      const [fieldName, sortOrder] = sort.split(',');\n\n      if (\n        !sort.endsWith(',asc') &&\n        !sort.endsWith(',ASC') &&\n        !sort.endsWith(',desc') &&\n        !sortOrder.endsWith(',DESC')\n      ) {\n        throw new Error(ErrorMessages.SORT_ORDER_ERROR);\n      }\n\n      if (!fields.includes(fieldName)) {\n        throw new Error(ErrorMessages.sortField(fields));\n      }\n\n      return true;\n    } catch (error: unknown) {\n      this.errorMessage = (error as Error).message;\n      return false;\n    }\n  }\n\n  defaultMessage() {\n    return this.errorMessage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessMessages.html":{"url":"classes/SuccessMessages.html","title":"class - SuccessMessages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/constants/success-messages.constant.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                PASSWORD_CHANGED\n                            \n                            \n                                    Static\n                                    Readonly\n                                SUBSCRIBED\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                otpSent\n                            \n                            \n                                    Static\n                                otpVerified\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PASSWORD_CHANGED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password changed'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/success-messages.constant.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SUBSCRIBED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Thanks for subscribing!'\n                    \n                \n                    \n                        \n                                Defined in src/_common/constants/success-messages.constant.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        otpSent\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSent(emailOrPhoneNumber: string, type: OtpChannelEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/success-messages.constant.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailOrPhoneNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            OtpChannelEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        otpVerified\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpVerified(emailOrPhoneNumber: string, type: OtpChannelEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/constants/success-messages.constant.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailOrPhoneNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            OtpChannelEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  maskEmailAddress,\n  maskPhoneNumber,\n} from '@/_common/helpers/string.helper';\nimport { OtpChannelEnum } from '@/otp/otp.enum';\n\nexport class SuccessMessages {\n  public static otpSent(\n    emailOrPhoneNumber: string,\n    type: OtpChannelEnum,\n  ): string {\n    return type === OtpChannelEnum.EMAIL\n      ? `We have sent a verification code to ${maskEmailAddress(\n          emailOrPhoneNumber,\n        )}`\n      : `We have sent a verification code to ${maskPhoneNumber(\n          emailOrPhoneNumber,\n        )}`;\n  }\n\n  public static otpVerified(emailOrPhoneNumber: string, type: OtpChannelEnum) {\n    return type === OtpChannelEnum.EMAIL\n      ? `We have verified ${maskEmailAddress(emailOrPhoneNumber)}`\n      : `We have verified ${maskPhoneNumber(emailOrPhoneNumber)}`;\n  }\n\n  public static readonly PASSWORD_CHANGED = 'Password changed';\n  public static readonly SUBSCRIBED = 'Thanks for subscribing!';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TermiiBalanceSuccess.html":{"url":"interfaces/TermiiBalanceSuccess.html","title":"interface - TermiiBalanceSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TermiiBalanceSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/termii/termii.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TermiiSmsSuccess {\n  code: 'ok';\n  balance: number;\n  message_id: string;\n  message: string;\n  user: string;\n}\n\nexport interface TermiiBalanceSuccess {\n  application: string;\n  balance: number;\n  currency: 'NGN';\n  user: string;\n}\n\nexport enum TermiiSmsChannelEnum {\n  GENERIC = 'generic',\n  DND = 'dnd',\n  WHATSAPP = 'whatsapp',\n}\n\nexport enum TermiiSmsTypeEnum {\n  PLAIN = 'plain',\n}\n\nexport interface TermiiWebhookEvent {\n  event: 'charge.completed';\n  data: TermiiSmsSuccess;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TermiiController.html":{"url":"controllers/TermiiController.html","title":"controller - TermiiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TermiiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/termii/termii.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                termii\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                processWebhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        processWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processWebhook(body: TermiiWebhookEvent, headers: Headers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/webhook')@HttpCode(HttpStatus.OK)@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/sms/termii/termii.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            TermiiWebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                        Headers\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Headers,\n  HttpCode,\n  HttpStatus,\n  Post,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiExcludeEndpoint, ApiTags } from '@nestjs/swagger';\nimport { TermiiWebhookEvent } from '@/sms/termii/termii.interface';\nimport { TermiiService } from '@/sms/termii/termii.service';\nimport { ApiTagsEnum } from '@/_common/enums/api-tags.enum';\n\n@Controller('termii')\n@ApiTags(ApiTagsEnum.termii)\n@ApiBearerAuth()\nexport class TermiiController {\n  constructor(private readonly termiiService: TermiiService) {}\n\n  @Post('/webhook')\n  @HttpCode(HttpStatus.OK)\n  @ApiExcludeEndpoint()\n  async processWebhook(\n    @Body() body: TermiiWebhookEvent,\n    @Headers() headers: Headers,\n  ) {\n    console.log(JSON.stringify(headers, null, 2));\n    return this.termiiService.processWebhook(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TermiiModule.html":{"url":"modules/TermiiModule.html","title":"module - TermiiModule","body":"\n                   \n\n\n\n\n    Modules\n    TermiiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TermiiModule\n\n\n\ncluster_TermiiModule_exports\n\n\n\ncluster_TermiiModule_providers\n\n\n\n\nTermiiService \n\nTermiiService \n\n\n\nTermiiModule\n\nTermiiModule\n\nTermiiService  -->\n\nTermiiModule->TermiiService \n\n\n\n\n\nTermiiService\n\nTermiiService\n\nTermiiModule -->\n\nTermiiService->TermiiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sms/termii/termii.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TermiiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TermiiController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TermiiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { TermiiService } from '@/sms/termii/termii.service';\nimport { TermiiController } from '@/sms/termii/termii.controller';\n\n@Module({\n  controllers: [TermiiController],\n  imports: [HttpModule],\n  providers: [TermiiService],\n  exports: [TermiiService],\n})\nexport class TermiiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TermiiService.html":{"url":"injectables/TermiiService.html","title":"injectable - TermiiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TermiiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/termii/termii.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                termiiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Async\n                                processWebhook\n                            \n                            \n                                    Private\n                                requestConfig\n                            \n                            \n                                    Private\n                                sendChampAuthorization\n                            \n                            \n                                    Async\n                                sendSms\n                            \n                            \n                                    Private\n                                termiiApiKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/sms/termii/termii.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBalance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/termii/termii.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processWebhook(event: TermiiWebhookEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/termii/termii.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            TermiiWebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestConfig(Authorization?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/termii/termii.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Authorization\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AxiosRequestConfig\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendChampAuthorization\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendChampAuthorization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/termii/termii.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendSms\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSms(to: string, sms: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/termii/termii.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sms\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        termiiApiKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    termiiApiKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sms/termii/termii.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TermiiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/sms/termii/termii.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        termiiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://v3.api.termii.com/api/'\n                    \n                \n                    \n                        \n                                Defined in src/sms/termii/termii.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { handleAxiosError } from '@/_common/helpers/http.helper';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport {\n  TermiiBalanceSuccess,\n  TermiiSmsChannelEnum,\n  TermiiSmsSuccess,\n  TermiiSmsTypeEnum,\n  TermiiWebhookEvent,\n} from '@/sms/termii/termii.interface';\nimport { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosRequestConfig } from 'axios';\nimport { lastValueFrom, map, catchError } from 'rxjs';\n\n@Injectable()\nexport class TermiiService {\n  private readonly logger = new Logger(TermiiService.name);\n  private readonly termiiUrl = 'https://v3.api.termii.com/api/';\n\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async getBalance() {\n    try {\n      const response = await lastValueFrom(\n        this.httpService\n          .get(this.termiiUrl + 'get-balance', {\n            params: {\n              api_key: this.termiiApiKey(),\n            },\n          })\n          .pipe(\n            map(({ data }) => {\n              return data;\n            }),\n            catchError(handleAxiosError),\n          ),\n      );\n\n      this.logger.log(response);\n\n      return +response?.balance || 0;\n    } catch (error) {\n      this.logger.error(error);\n\n      return 0;\n    }\n  }\n\n  async sendSms(to: string, sms: string) {\n    return await lastValueFrom(\n      this.httpService\n        .post(this.termiiUrl + 'sms/send', {\n          api_key: this.termiiApiKey(),\n          to,\n          from: 'fastbeep',\n          sms,\n          type: TermiiSmsTypeEnum.PLAIN,\n          channel: TermiiSmsChannelEnum.GENERIC,\n        })\n        .pipe(\n          map(({ data }) => {\n            this.logger.log({ data });\n            return data;\n          }),\n          catchError(handleAxiosError),\n        ),\n    );\n  }\n\n  async processWebhook(event: TermiiWebhookEvent) {\n    this.logger.log(`Processing webhook event`, event);\n\n    return true;\n\n    // const secretHash = this.configService.get('FLUTTERWAVE_SECRET_HASH', {\n    //   infer: true,\n    // });\n\n    // if (!signature || signature !== secretHash) {\n    //   throw new UnauthorizedException();\n    // }\n\n    // let processed = false;\n\n    // switch (event.event) {\n    //   case 'charge.completed':\n    //     // processed = await this.subscriptionService.flutterwaveChargeComplete(\n    //     //   event.data,\n    //     // );\n    //     break;\n\n    //   default:\n    //     throw new BadRequestException('Unhandled payment event');\n    // }\n\n    // return processed;\n  }\n\n  private sendChampAuthorization() {\n    return `Bearer ${this.configService.get('SENDCHAMP_PUBLIC_KEY')}`;\n  }\n\n  private requestConfig(Authorization?: string): AxiosRequestConfig {\n    return {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        ...(!!Authorization && { Authorization }),\n      },\n    };\n  }\n\n  private termiiApiKey() {\n    return this.configService.get('TERMII_API_KEY', { infer: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TermiiSmsSuccess.html":{"url":"interfaces/TermiiSmsSuccess.html","title":"interface - TermiiSmsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TermiiSmsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/termii/termii.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            message_id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TermiiSmsSuccess {\n  code: 'ok';\n  balance: number;\n  message_id: string;\n  message: string;\n  user: string;\n}\n\nexport interface TermiiBalanceSuccess {\n  application: string;\n  balance: number;\n  currency: 'NGN';\n  user: string;\n}\n\nexport enum TermiiSmsChannelEnum {\n  GENERIC = 'generic',\n  DND = 'dnd',\n  WHATSAPP = 'whatsapp',\n}\n\nexport enum TermiiSmsTypeEnum {\n  PLAIN = 'plain',\n}\n\nexport interface TermiiWebhookEvent {\n  event: 'charge.completed';\n  data: TermiiSmsSuccess;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TermiiWebhookEvent.html":{"url":"interfaces/TermiiWebhookEvent.html","title":"interface - TermiiWebhookEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TermiiWebhookEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/termii/termii.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         TermiiSmsSuccess\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TermiiSmsSuccess\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TermiiSmsSuccess {\n  code: 'ok';\n  balance: number;\n  message_id: string;\n  message: string;\n  user: string;\n}\n\nexport interface TermiiBalanceSuccess {\n  application: string;\n  balance: number;\n  currency: 'NGN';\n  user: string;\n}\n\nexport enum TermiiSmsChannelEnum {\n  GENERIC = 'generic',\n  DND = 'dnd',\n  WHATSAPP = 'whatsapp',\n}\n\nexport enum TermiiSmsTypeEnum {\n  PLAIN = 'plain',\n}\n\nexport interface TermiiWebhookEvent {\n  event: 'charge.completed';\n  data: TermiiSmsSuccess;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccessTokenFromRefreshToken\n                            \n                            \n                                    Async\n                                decodeAccessToken\n                            \n                            \n                                    Async\n                                decodeRefreshToken\n                            \n                            \n                                    Async\n                                deleteRefreshToken\n                            \n                            \n                                    Async\n                                deleteRefreshTokenByUserId\n                            \n                            \n                                    Public\n                                findById\n                            \n                            \n                                    Async\n                                generateAccessToken\n                            \n                            \n                                    Private\n                                generateExpires\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Private\n                                    Async\n                                getStoredTokenFromRefreshTokenPayload\n                            \n                            \n                                    Public\n                                getStoredValidRefreshTokenById\n                            \n                            \n                                    Private\n                                    Async\n                                getUserFromRefreshTokenPayload\n                            \n                            \n                                    Async\n                                resolveRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model, jwtService: JwtService, configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/token.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAccessTokenFromRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccessTokenFromRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        decodeAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        decodeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRefreshToken(refreshTokenId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteRefreshTokenByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRefreshTokenByUserId(userId: string, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessToken(user: IUser, refreshTokenId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshTokenId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateExpires\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateExpires()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:228\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRefreshToken(userId: IUser, userAgent: string, session: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStoredTokenFromRefreshTokenPayload\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStoredTokenFromRefreshTokenPayload(payload: RefreshTokenPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RefreshTokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getStoredValidRefreshTokenById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStoredValidRefreshTokenById(refreshTokenId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getUserFromRefreshTokenPayload\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFromRefreshTokenPayload(payload: RefreshTokenPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            RefreshTokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resolveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveRefreshToken(encoded: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/token.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encoded\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SignOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    issuer: appProps().baseUrl,\n    audience: appProps().name,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/auth/services/token.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { appProps } from '@/_common/config/app-props.constant';\nimport { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { EnvironmentVariables } from '@/_common/validations/environment.validation';\nimport {\n  AuthSuccessResponse,\n  RefreshTokenPayload,\n  AccessTokenPayload,\n} from '@/auth/dtos/auth.dto';\nimport { RefreshToken } from '@/auth/schemas/refresh-token.schema';\nimport { IUser } from '@/user/schemas/user.schema';\nimport { UserService } from '@/user/user.service';\nimport {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService, JwtSignOptions, JwtVerifyOptions } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SignOptions, TokenExpiredError } from 'jsonwebtoken';\nimport { ClientSession, Model } from 'mongoose';\n\n@Injectable()\nexport class TokenService {\n  private readonly baseOptions: SignOptions = {\n    issuer: appProps().baseUrl,\n    audience: appProps().name,\n  };\n\n  constructor(\n    @InjectModel(RefreshToken.name)\n    private readonly model: Model,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    @Inject(forwardRef(() => UserService))\n    private readonly userService: UserService,\n  ) {}\n\n  public findById(id: string) {\n    return this.model.findById(id);\n  }\n\n  async generateRefreshToken(\n    userId: IUser['id'],\n    userAgent: string,\n    session: ClientSession = null,\n  ) {\n    const expires = this.generateExpires();\n\n    //TODO: Check how this will work on mobile\n    let token = await this.model.findOne(\n      {\n        user: userId,\n        userAgent,\n      },\n      null,\n      { session },\n    );\n\n    if (!token) {\n      const tokens = await this.model.create(\n        [\n          {\n            user: userId,\n            userAgent,\n            expiresAt: expires,\n          },\n        ],\n        {\n          session,\n        },\n      );\n\n      token = tokens[0];\n    } else {\n      token.expiresAt = expires;\n      token = await token.save({ session });\n    }\n\n    const payload = { subject: String(userId), jwtid: String(token.id) };\n\n    const options: JwtSignOptions = {\n      ...this.baseOptions,\n      expiresIn: appProps().refreshTokenTll,\n      secret: this.configService.get('REFRESH_TOKEN_SECRET', { infer: true }),\n    };\n\n    return this.jwtService.signAsync(payload, options);\n  }\n\n  async generateAccessToken(\n    user: IUser,\n    refreshTokenId: string,\n  ): Promise\n  > {\n    const payload = {\n      subject: String(user.id),\n      jwtid: refreshTokenId,\n      roles: user.roles,\n    };\n\n    const opts: SignOptions = {\n      ...this.baseOptions,\n    };\n\n    const accessToken = await this.jwtService.signAsync(payload, opts);\n\n    const accessTokenTtl = appProps().accessTokenTll * 1000 + 'ms';\n\n    // we return expiresIn in milliseconds\n    return { accessToken, expiresIn: accessTokenTtl };\n  }\n\n  async resolveRefreshToken(encoded: string) {\n    const payload = await this.decodeRefreshToken(encoded);\n    const token = await this.getStoredTokenFromRefreshTokenPayload(payload);\n\n    if (!token) {\n      throw new UnprocessableEntityException(\n        ErrorMessages.INVALID_REFRESH_TOKEN,\n      );\n    }\n\n    const user = await this.getUserFromRefreshTokenPayload(payload);\n\n    if (!user) {\n      throw new UnprocessableEntityException(\n        ErrorMessages.MALFORMED_REFRESH_TOKEN,\n      );\n    }\n\n    return { user, token };\n  }\n\n  async createAccessTokenFromRefreshToken(refreshToken: string) {\n    const { user, token } = await this.resolveRefreshToken(refreshToken);\n\n    token.expiresAt = this.generateExpires();\n\n    await token.save();\n\n    const { accessToken, expiresIn } = await this.generateAccessToken(\n      user,\n      token._id.toString(),\n    );\n\n    return { user, accessToken, expiresIn };\n  }\n\n  async decodeRefreshToken(refreshToken: string): Promise {\n    try {\n      const options: JwtVerifyOptions = {\n        ...this.baseOptions,\n        secret: this.configService.get('REFRESH_TOKEN_SECRET', {\n          infer: true,\n        }),\n      };\n\n      return await this.jwtService.verifyAsync(refreshToken, options);\n    } catch (e) {\n      if (e instanceof TokenExpiredError) {\n        throw new UnprocessableEntityException(\n          ErrorMessages.EXPIRED_REFRESH_TOKEN,\n        );\n      } else {\n        throw new UnprocessableEntityException(\n          ErrorMessages.MALFORMED_REFRESH_TOKEN,\n        );\n      }\n    }\n  }\n\n  async decodeAccessToken(accessToken: string): Promise {\n    try {\n      return await this.jwtService.verifyAsync(accessToken);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public getStoredValidRefreshTokenById(refreshTokenId: string) {\n    return this.model.findOne({\n      _id: refreshTokenId,\n      isRevoked: false,\n      expiresAt: { $gte: new Date() },\n    });\n  }\n\n  async deleteRefreshToken(refreshTokenId: string) {\n    return this.model.findByIdAndDelete(refreshTokenId);\n  }\n\n  async deleteRefreshTokenByUserId(\n    userId: string,\n    session: ClientSession = null,\n  ): Promise {\n    return this.model.deleteMany({ user: userId }, { session });\n  }\n\n  private async getUserFromRefreshTokenPayload(payload: RefreshTokenPayload) {\n    const subId = payload.subject;\n\n    if (!subId) {\n      throw new UnprocessableEntityException(\n        ErrorMessages.MALFORMED_REFRESH_TOKEN,\n      );\n    }\n\n    return this.userService.getById(subId);\n  }\n\n  private async getStoredTokenFromRefreshTokenPayload(\n    payload: RefreshTokenPayload,\n  ) {\n    const tokenId = payload.jwtid;\n\n    if (!tokenId) {\n      throw new UnprocessableEntityException(\n        ErrorMessages.MALFORMED_REFRESH_TOKEN,\n      );\n    }\n\n    return this.getStoredValidRefreshTokenById(tokenId);\n  }\n\n  private generateExpires() {\n    const ttl = appProps().refreshTokenTll * 1000; // needs to be in milliseconds\n\n    const expires = new Date();\n    expires.setTime(expires.getTime() + ttl);\n\n    return expires;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformResponseInterceptor.html":{"url":"injectables/TransformResponseInterceptor.html","title":"injectable - TransformResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/_common/interceptors/transform.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/interceptors/transform.interceptor.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BYPASS_RESPONSE_TRANSFORM } from '@/_common/constants/decorator-keys.constant';\nimport {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface IResponse {\n  data: T;\n}\n\n@Injectable()\nexport class TransformResponseInterceptor\n  implements NestInterceptor>\n{\n  // private readonly logger = new Logger('TransformResponseInterceptor');\n\n  constructor(private readonly reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | any> {\n    const httpContext = context.switchToHttp();\n    const response = httpContext.getResponse();\n\n    const bypass = this.reflector.getAllAndOverride(\n      BYPASS_RESPONSE_TRANSFORM,\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (bypass) {\n      return next.handle();\n    }\n\n    const { statusCode: status } = response;\n\n    return next.handle().pipe(\n      map((responseData) => {\n        let data = responseData || null;\n        let message = 'Success';\n        let meta = null;\n\n        if (typeof responseData === 'string') {\n          message = 'Success';\n          data = responseData;\n        } else if (typeof responseData === 'boolean') {\n          message = 'Success';\n          data = responseData;\n        } else if (!responseData?.hasOwnProperty('message')) {\n          data = responseData?.data || responseData;\n          meta = responseData?.meta || null;\n        } else {\n          data = responseData?.data;\n          message = responseData?.message;\n          meta = responseData?.meta;\n        }\n\n        return {\n          message,\n          data: data ?? null,\n          status,\n          success: true,\n          ...(meta && { meta }),\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLoanDto.html":{"url":"classes/UpdateLoanDto.html","title":"class - UpdateLoanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLoanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loan/dto/update-loan.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLoanDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateLoanDto } from './create-loan.dto';\n\nexport class UpdateLoanDto extends PartialType(CreateLoanDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/update-password.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(ChangePasswordDto, [\n  'password',\n  'confirmPassword',\n] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Matches(PASSWORD_REGEX, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/update-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { PASSWORD_REGEX } from '@/_common/constants/regex.constant';\nimport { ChangePasswordDto } from '@/auth/dtos/change-password.dto';\nimport { PickType } from '@nestjs/swagger';\nimport { IsString, Matches } from 'class-validator';\n\nexport class UpdatePasswordDto extends PickType(ChangePasswordDto, [\n  'password',\n  'confirmPassword',\n] as const) {\n  @IsString()\n  @Matches(PASSWORD_REGEX, {\n    message: ErrorMessages.INVALID_PASSWORD,\n  })\n  oldPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dtos/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateRoleDto } from '@/role/dtos/create-role.dto';\nimport { PartialType } from '@nestjs/swagger';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CreateUserDto, ['referredBy', 'acceptTerms'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                activeCar\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                onboarded\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                pushToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        activeCar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        onboarded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        pushToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '@/user/dtos/create-user.dto';\nimport { OmitType, PartialType } from '@nestjs/swagger';\nimport { IsBoolean, IsOptional, IsString, IsUrl } from 'class-validator';\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(CreateUserDto, ['referredBy', 'acceptTerms'] as const),\n) {\n  @IsOptional()\n  @IsString()\n  pushToken?: string;\n\n  @IsOptional()\n  @IsString()\n  activeCar?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  onboarded?: boolean;\n\n  @IsOptional()\n  @IsUrl()\n  photo?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                acceptTerms\n                            \n                            \n                                    \n                                    Optional\n                                blocked\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                emailVerified\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    Optional\n                                fullName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                mobileNumber\n                            \n                            \n                                    \n                                mobileVerified\n                            \n                            \n                                    \n                                    Optional\n                                onboarded\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                passwordSet\n                            \n                            \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    \n                                    Optional\n                                pushToken\n                            \n                            \n                                    \n                                referralCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                referredBy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        acceptTerms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        blocked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({select: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true, lowercase: true, email: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true, trim: true, sparse: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mobileVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        onboarded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@ApiHideProperty()@Prop({select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({trim: true, unique: true, sparse: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        pushToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true, trim: true, uppercase: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        referredBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@Prop({default: undefined, type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@Prop({type: undefined, sparse: true, default: undefined, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:100\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import schemaOptions from '@/_common/constants/schema.constant';\nimport { DocumentMeta } from '@/_common/interfaces/document.interface';\nimport { Role } from '@/role/schemas/role.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiHideProperty, ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { Schema as MongooseSchema } from 'mongoose';\n\n@Schema({ ...schemaOptions() })\nexport class User {\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  firstName: string;\n\n  @Prop({\n    required: true,\n    trim: true,\n  })\n  lastName: string;\n\n  @Prop({\n    required: true,\n    unique: true,\n    trim: true,\n    lowercase: true,\n    email: true,\n  })\n  email: string;\n\n  @Prop({\n    unique: true,\n    trim: true,\n    uppercase: true,\n    required: true,\n  })\n  referralCode: string;\n\n  @Prop({\n    default: false,\n  })\n  emailVerified: boolean;\n\n  @Prop({\n    default: false,\n  })\n  mobileVerified: boolean;\n\n  @Prop({\n    default: false,\n  })\n  passwordSet: boolean;\n\n  @Prop({\n    unique: true,\n    trim: true,\n    sparse: true,\n    default: undefined,\n  })\n  mobileNumber?: string;\n\n  // this could be an object to track various state\n  @Prop({\n    default: false,\n  })\n  onboarded?: boolean;\n\n  // a derivate of the first and last name for easy search\n  @Prop({\n    trim: true,\n  })\n  fullName?: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  @Prop({\n    default: undefined,\n    type: MongooseSchema.Types.ObjectId,\n    ref: User.name,\n  })\n  referredBy?: User | string;\n\n  // a list of roles that the user has\n  @ApiProperty({\n    type: [String],\n  })\n  @Prop({\n    type: [\n      {\n        type: MongooseSchema.Types.ObjectId,\n        ref: Role.name,\n      },\n    ],\n    sparse: true,\n    default: undefined,\n    unique: false,\n  })\n  roles?: Array;\n\n  @Prop({\n    trim: true,\n    unique: true,\n    sparse: true,\n    default: undefined,\n  })\n  photo?: string;\n\n  @Prop({\n    default: undefined,\n  })\n  pushToken?: string;\n\n  @Prop()\n  acceptTerms?: boolean;\n\n  @Prop({\n    select: false,\n    default: undefined,\n  })\n  blocked?: boolean;\n\n  @Exclude()\n  @ApiHideProperty()\n  @Prop({\n    select: false,\n  })\n  password?: string;\n}\nexport class IUser extends User {\n  id: string;\n  isAdmin?: boolean;\n  isSuperAdmin?: boolean;\n}\n\nexport type UserDocument = DocumentMeta;\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                blockUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    Async\n                                unblockUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        blockUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    blockUser(undefined: IdDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/block/:id')@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(query: PaginationDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@PaginatedModel(User)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        unblockUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    unblockUser(undefined: IdDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/unblock/:id')@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { GetUser } from '@/_common/decorators/get-user.decorator';\nimport { PaginatedModel } from '@/_common/decorators/pagination.decorator';\nimport { IdDto } from '@/_common/dtos/id.dto';\nimport { PaginationDto } from '@/_common/dtos/response.dto';\nimport { ApiTagsEnum } from '@/_common/enums/api-tags.enum';\nimport { RoleGuard } from '@/auth/guards/role.guard';\nimport { IUser, User } from '@/user/schemas/user.schema';\nimport { UserService } from '@/user/user.service';\nimport {\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOkResponse,\n  ApiTags,\n  PickType,\n} from '@nestjs/swagger';\n\n@Controller('user')\n@ApiTags(ApiTagsEnum.user)\n@ApiBearerAuth()\n@UseGuards(RoleGuard)\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get('/')\n  @PaginatedModel(User)\n  async getUsers(@Query() query: PaginationDto, @GetUser() user: IUser) {\n    return this.userService.paginate(query, user);\n  }\n\n  @Patch('/block/:id')\n  @ApiOkResponse({\n    type: PickType(User, ['blocked']),\n  })\n  async blockUser(@Param() { id }: IdDto, @GetUser() user: IUser) {\n    return this.userService.blockUser(id, user);\n  }\n\n  @Patch('/unblock/:id')\n  @ApiOkResponse({\n    type: PickType(User, ['blocked']),\n  })\n  async unblockUser(@Param() { id }: IdDto, @GetUser() user: IUser) {\n    return this.userService.unblockUser(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nMailModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { titleCase } from '@/_common/helpers/string.helper';\nimport { AuthModule } from '@/auth/auth.module';\nimport { MailModule } from '@/mail/mail.module';\nimport { OtpModule } from '@/otp/otp.module';\nimport { User, UserSchema } from '@/user/schemas/user.schema';\nimport { UserController } from '@/user/user.controller';\nimport { UserService } from '@/user/user.service';\nimport { forwardRef, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { genSalt, hashSync } from 'bcryptjs';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: async () => {\n          const schema = UserSchema;\n\n          schema.pre('save', async function () {\n            if (this.isModified('firstName') || this.isModified('lastName')) {\n              const fullName = [this.firstName, this.lastName].join(' ').trim();\n              this.fullName = titleCase(fullName);\n              this.firstName = titleCase(this.firstName);\n              this.lastName = titleCase(this.lastName);\n            }\n\n            if (this.isModified('password')) {\n              const salt = await genSalt(10);\n              const hash = await hashSync(this.password, salt);\n              this.password = hash;\n              this.passwordSet = !!this.password;\n            }\n          });\n\n          return schema;\n        },\n      },\n    ]),\n    MailModule,\n    forwardRef(() => OtpModule),\n    forwardRef(() => AuthModule),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidIdConstraint.html":{"url":"injectables/ValidIdConstraint.html","title":"injectable - ValidIdConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidIdConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validations/id.validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/id.validation.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/id.validation.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/id.validation.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { Injectable } from '@nestjs/common';\nimport {\n  isMongoId,\n  registerDecorator,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'id-constraint', async: false })\n@Injectable()\nclass ValidIdConstraint implements ValidatorConstraintInterface {\n  private errorMessage = '';\n\n  validate(id: string) {\n    try {\n      if (!!id && !isMongoId(id)) {\n        throw new Error(ErrorMessages.INVALID_ID);\n      }\n\n      return true;\n    } catch (error: unknown) {\n      this.errorMessage = (error as Error).message;\n      return false;\n    }\n  }\n\n  defaultMessage() {\n    return this.errorMessage;\n  }\n}\n\nexport function IsValidId(validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: ValidIdConstraint,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidMobileNumber.html":{"url":"injectables/ValidMobileNumber.html","title":"injectable - ValidMobileNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidMobileNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validations/mobile.validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/mobile.validation.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(mobileNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validations/mobile.validation.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mobileNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/_common/validations/mobile.validation.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { validMobileNumber } from '@/_common/helpers/mobile.helper';\nimport { Injectable } from '@nestjs/common';\nimport {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'mobile-number-constraint', async: false })\n@Injectable()\n// mark as deprecated\nexport class ValidMobileNumber implements ValidatorConstraintInterface {\n  private errorMessage = '';\n\n  validate(mobileNumber: string) {\n    try {\n      if (!mobileNumber || !validMobileNumber(mobileNumber)) {\n        throw new Error(ErrorMessages.PROVIDE_VALID_MOBILE_NUMBER);\n      }\n\n      return true;\n    } catch (error: any) {\n      this.errorMessage = error.message;\n      return false;\n    }\n  }\n\n  defaultMessage() {\n    return this.errorMessage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyOtpDto.html":{"url":"classes/VerifyOtpDto.html","title":"class - VerifyOtpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyOtpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/dtos/verify-otp.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SendOtpDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                channel\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123456'})@Matches(OTP_REGEX, '', {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/dtos/verify-otp.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpChannelEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsEnum(OtpChannelEnum)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SendOtpDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SendOtpDto:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OtpTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsEnum(OtpTypeEnum)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SendOtpDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SendOtpDto:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsChannelValue()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SendOtpDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SendOtpDto:76\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Matches } from 'class-validator';\nimport { SendOtpDto } from './send-otp.dto';\nimport { ErrorMessages } from '@/_common/constants/error-messages.constant';\nimport { OTP_REGEX } from '@/_common/constants/regex.constant';\n\nexport class VerifyOtpDto extends SendOtpDto {\n  @ApiProperty({\n    example: '123456',\n  })\n  @Matches(OTP_REGEX, '', {\n    message: ErrorMessages.INVALID_OTP_CODE,\n  })\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyOtpQueryDto.html":{"url":"classes/VerifyOtpQueryDto.html","title":"class - VerifyOtpQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyOtpQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/dtos/verify-otp-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/otp/dtos/verify-otp-query.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class VerifyOtpQueryDto {\n  @IsString()\n  hash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/_common/config/app-props.constant.ts\n            \n            function\n            appProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/cors.config.ts\n            \n            function\n            getAllowedOrigins\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/cors.config.ts\n            \n            function\n            setupCors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/environment.config.ts\n            \n            function\n            awsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/environment.config.ts\n            \n            function\n            isDev\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/environment.config.ts\n            \n            function\n            isInAws\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/environment.config.ts\n            \n            function\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/environment.config.ts\n            \n            function\n            isTesting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/routes.config.ts\n            \n            function\n            syncRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/sentry.config.ts\n            \n            function\n            sentryConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/swagger.config.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/config/validation.config.ts\n            \n            function\n            setupValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/cache.constant.ts\n            \n            variable\n            cacheKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/decorator-keys.constant.ts\n            \n            variable\n            BYPASS_RESPONSE_TRANSFORM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/decorator-keys.constant.ts\n            \n            variable\n            OPTIONAL_GUARD_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/decorator-keys.constant.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/constants/error-messages.constant.ts\n            \n            class\n            ErrorMessages\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                        src/_common/constants/regex.constant.ts\n            \n            variable\n            AMBIGUOUS_CHARACTERS_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/regex.constant.ts\n            \n            variable\n            OTP_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/regex.constant.ts\n            \n            variable\n            PASSWORD_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/regex.constant.ts\n            \n            variable\n            SUB_DOMAIN_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/constants/schema.constant.ts\n            \n            function\n            schemaOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/constants/success-messages.constant.ts\n            \n            class\n            SuccessMessages\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/_common/decorators/bypass-response-transform.decorator.ts\n            \n            variable\n            BypassResponseTransform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/decorators/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/decorators/pagination.decorator.ts\n            \n            variable\n            PaginatedModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/dtos/email.dto.ts\n            \n            class\n            EmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/dtos/id.dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/dtos/mobile-number.dto.ts\n            \n            class\n            MobileNumberDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/dtos/response.dto.ts\n            \n            class\n            ApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/dtos/response.dto.ts\n            \n            class\n            MessageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/dtos/response.dto.ts\n            \n            class\n            Pagination\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/dtos/response.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/dtos/response.dto.ts\n            \n            class\n            PaginationMeta\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/_common/filters/all.exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/_common/helpers/auth.helper.ts\n            \n            variable\n            resolveAuthType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/base64.helper.ts\n            \n            variable\n            decodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/base64.helper.ts\n            \n            variable\n            encodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/date.helper.ts\n            \n            variable\n            formatDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/date.helper.ts\n            \n            variable\n            getNow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/date.helper.ts\n            \n            variable\n            longDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/date.helper.ts\n            \n            variable\n            mediumDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/enum.helper.ts\n            \n            variable\n            enumValuesAsArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/enum.helper.ts\n            \n            variable\n            enumValuesExcept\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/enum.helper.ts\n            \n            variable\n            selectFromEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            aggregatePaginateAndSort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            arrayDifference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            arraysEqual\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            dateRangeFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            emptyObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            numberRangeFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            paginateAndSort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            timeRangeFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            transformBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            transformDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            variable\n            transformRecordsForDownload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            type alias\n            AggregatePaginateAndSort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/filter.helper.ts\n            \n            type alias\n            PaginateAndSort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/http.helper.ts\n            \n            variable\n            handleAxiosError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/mobile.helper.ts\n            \n            variable\n            getInternationalPhoneNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/mobile.helper.ts\n            \n            variable\n            validMobileNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/promises.helper.ts\n            \n            variable\n            sleep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/responder.helper.ts\n            \n            variable\n            responder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/string.helper.ts\n            \n            variable\n            camelCaseToReadable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/string.helper.ts\n            \n            variable\n            generateRandomNumbers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/string.helper.ts\n            \n            variable\n            generateRandomStrings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/string.helper.ts\n            \n            variable\n            maskEmailAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/string.helper.ts\n            \n            variable\n            maskPhoneNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/string.helper.ts\n            \n            variable\n            sentenceCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/string.helper.ts\n            \n            variable\n            titleCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/uploads.helper.ts\n            \n            variable\n            getReadableStream\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/_common/helpers/validation.helper.ts\n            \n            function\n            validateUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/interceptors/logout.interceptor.ts\n            \n            injectable\n            LogoutInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/interceptors/transform.interceptor.ts\n            \n            interface\n            IResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/_common/interfaces/document.interface.ts\n            \n            type alias\n            DocumentMeta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/interfaces/dropdown.interface.ts\n            \n            class\n            DropDownOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/middleware/proxy.middleware.ts\n            \n            injectable\n            ProxyMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/middleware/redirect.middleware.ts\n            \n            injectable\n            RedirectMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/schemas/owner.schema.ts\n            \n            injectable\n            Owner\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/services/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/validations/environment.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/_common/validations/environment.validation.ts\n            \n            function\n            validateEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/validations/fields-match.validation.ts\n            \n            class\n            FieldsMatchConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/_common/validations/fields-match.validation.ts\n            \n            function\n            FieldsMatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/validations/id.validation.ts\n            \n            injectable\n            ValidIdConstraint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/_common/validations/id.validation.ts\n            \n            function\n            IsValidId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/validations/mobile.validation.ts\n            \n            injectable\n            ValidMobileNumber\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/validations/not-equal.validation.ts\n            \n            class\n            NotEqualToConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/_common/validations/not-equal.validation.ts\n            \n            function\n            NotEqualTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/validations/payload-exists.validation.ts\n            \n            class\n            PayloadExistsPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/validations/sort-query.validation.ts\n            \n            injectable\n            SortQueryConstraint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ReadinessCheckResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.dto.ts\n            \n            class\n            AccessTokenPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.dto.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.dto.ts\n            \n            class\n            AuthSuccessResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.dto.ts\n            \n            class\n            RefreshTokenPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/google-login.dto.ts\n            \n            class\n            GoogleLoginDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/set-password.dto.ts\n            \n            class\n            SetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/update-password.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/optional-auth-guard.ts\n            \n            injectable\n            OptionalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/role.guard.ts\n            \n            injectable\n            RoleGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/schemas/refresh-token.schema.ts\n            \n            class\n            RefreshToken\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/schemas/refresh-token.schema.ts\n            \n            interface\n            IRefreshToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/auth/schemas/refresh-token.schema.ts\n            \n            variable\n            RefreshTokenSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/schemas/refresh-token.schema.ts\n            \n            type alias\n            RefreshTokenDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/services/token.service.ts\n            \n            injectable\n            TokenService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/auth/strategies/anonymous.strategy.ts\n            \n            injectable\n            AnonymousStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/google/google.service.ts\n            \n            injectable\n            GoogleService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/loan/dto/create-loan.dto.ts\n            \n            class\n            CreateLoanDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/loan/dto/update-loan.dto.ts\n            \n            class\n            UpdateLoanDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/loan/loan.controller.ts\n            \n            controller\n            LoanController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/loan/loan.service.ts\n            \n            injectable\n            LoanService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/loan/schemas/loan.schema.ts\n            \n            class\n            ILoan\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/loan/schemas/loan.schema.ts\n            \n            class\n            Loan\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/loan/schemas/loan.schema.ts\n            \n            variable\n            LoanSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/loan/schemas/loan.schema.ts\n            \n            type alias\n            LoanDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/dtos/mail-otp.dto.ts\n            \n            class\n            MailOtpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            interface\n            SendMailPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/otp/dtos/send-otp.dto.ts\n            \n            class\n            IsChannelValueConstraint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/otp/dtos/send-otp.dto.ts\n            \n            class\n            SendOtpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/otp/dtos/send-otp.dto.ts\n            \n            function\n            IsChannelValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/otp/dtos/verify-otp-query.dto.ts\n            \n            class\n            VerifyOtpQueryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/otp/dtos/verify-otp.dto.ts\n            \n            class\n            VerifyOtpDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/otp/otp.service.ts\n            \n            injectable\n            OtpService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/otp/schemas/otp.schema.ts\n            \n            class\n            IOtp\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/otp/schemas/otp.schema.ts\n            \n            class\n            Otp\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/otp/schemas/otp.schema.ts\n            \n            variable\n            OtpSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/otp/schemas/otp.schema.ts\n            \n            type alias\n            OtpDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/dtos/api-route.dto.ts\n            \n            class\n            ApiRouteDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/dtos/assign-role.dto.ts\n            \n            class\n            AssignRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/role/dtos/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/role/dtos/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/role/schemas/api-route.schema.ts\n            \n            class\n            ApiRoute\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/schemas/api-route.schema.ts\n            \n            class\n            IApiRoute\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/role/schemas/api-route.schema.ts\n            \n            variable\n            ApiRouteSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/role/schemas/api-route.schema.ts\n            \n            type alias\n            ApiRouteDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/schemas/role.schema.ts\n            \n            class\n            IRole\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/role/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/role/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/role/schemas/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sms/sendchamp/sendchamp.controller.ts\n            \n            controller\n            SendChampController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sms/sendchamp/sendchamp.interface.ts\n            \n            interface\n            SendChampError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/sms/sendchamp/sendchamp.interface.ts\n            \n            interface\n            SendChampSmsWalletBalance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sms/sendchamp/sendchamp.interface.ts\n            \n            interface\n            SendChampSuccess\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/sms/sendchamp/sendchamp.interface.ts\n            \n            interface\n            SendchampWebhookEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/sms/sendchamp/sendchamp.interface.ts\n            \n            type alias\n            SendChampSmsSent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sms/sendchamp/sendchamp.service.ts\n            \n            injectable\n            SendChampService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/sms/sms.service.ts\n            \n            injectable\n            SmsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/sms/termii/termii.controller.ts\n            \n            controller\n            TermiiController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sms/termii/termii.interface.ts\n            \n            interface\n            TermiiBalanceSuccess\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/sms/termii/termii.interface.ts\n            \n            interface\n            TermiiSmsSuccess\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/sms/termii/termii.interface.ts\n            \n            interface\n            TermiiWebhookEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sms/termii/termii.service.ts\n            \n            injectable\n            TermiiService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dtos/get-users.dto.ts\n            \n            class\n            GetUsersDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            class\n            IUser\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/user/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/user/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/27)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-ses : ^3.714.0\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/axios : ^3.0.3\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.4.1\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.4.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.10\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.6\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @sentry/cli : ^2.39.1\n        \n            @sentry/nestjs : ^8.47.0\n        \n            @sentry/profiling-node : ^8.47.0\n        \n            axios : ^1.7.4\n        \n            bcryptjs : ^2.4.3\n        \n            cache-manager : ^5.5.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            date-fns : ^3.6.0\n        \n            google-auth-library : ^9.15.0\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^7.1.0\n        \n            http-proxy-middleware : ^3.0.3\n        \n            mongoose : ^8.8.3\n        \n            nodemailer : ^6.9.13\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTagsEnum   (src/.../api-tags.enum.ts)\n                        \n                        \n                            EnvironmentEnum   (src/.../environment.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../sms.service.ts)\n                        \n                        \n                            GenderEnum   (src/.../user.enum.ts)\n                        \n                        \n                            LoanStatusEnum   (src/.../loan.enum.ts)\n                        \n                        \n                            OtpChannelEnum   (src/.../otp.enum.ts)\n                        \n                        \n                            OtpTypeEnum   (src/.../otp.enum.ts)\n                        \n                        \n                            SendChampSmsRouteEnum   (src/.../sendchamp.interface.ts)\n                        \n                        \n                            SmsProviderEnum   (src/.../sms.service.ts)\n                        \n                        \n                            TermiiSmsChannelEnum   (src/.../termii.interface.ts)\n                        \n                        \n                            TermiiSmsTypeEnum   (src/.../termii.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/enums/api-tags.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTagsEnum\n                    \n                \n                        \n                            \n                                 authentication\n                            \n                        \n                        \n                            \n                                Value : Authentication\n                            \n                        \n                        \n                            \n                                 otp\n                            \n                        \n                        \n                            \n                                Value : OTP\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n                        \n                            \n                                 role\n                            \n                        \n                        \n                            \n                                Value : Role\n                            \n                        \n                        \n                            \n                                 default\n                            \n                        \n                        \n                            \n                                Value : Default\n                            \n                        \n                        \n                            \n                                 termii\n                            \n                        \n                        \n                            \n                                Value : Termii\n                            \n                        \n                        \n                            \n                                 sendchamp\n                            \n                        \n                        \n                            \n                                Value : Sendchamp\n                            \n                        \n                        \n                            \n                                 loan\n                            \n                        \n                        \n                            \n                                Value : Loan\n                            \n                        \n            \n        \n\n    src/_common/enums/environment.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EnvironmentEnum\n                    \n                \n                        \n                            \n                                 dev\n                            \n                        \n                        \n                            \n                                Value : dev\n                            \n                        \n                        \n                            \n                                 testing\n                            \n                        \n                        \n                            \n                                Value : testing\n                            \n                        \n                        \n                            \n                                 prod\n                            \n                        \n                        \n                            \n                                Value : prod\n                            \n                        \n            \n        \n\n    src/sms/sms.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 INSUFFICIENT_BALANCE\n                            \n                        \n                        \n                            \n                                Value : INSUFFICIENT_BALANCE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SmsProviderEnum\n                    \n                \n                        \n                            \n                                 SENDCHAMP\n                            \n                        \n                        \n                            \n                                Value : SENDCHAMP\n                            \n                        \n                        \n                            \n                                 TERMII\n                            \n                        \n                        \n                            \n                                Value : TERMII\n                            \n                        \n            \n        \n\n    src/user/user.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GenderEnum\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n            \n        \n\n    src/loan/loan.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LoanStatusEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : APPROVED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n                        \n                            \n                                 DISBURSED\n                            \n                        \n                        \n                            \n                                Value : DISBURSED\n                            \n                        \n                        \n                            \n                                 REPAID\n                            \n                        \n                        \n                            \n                                Value : REPAID\n                            \n                        \n            \n        \n\n    src/otp/otp.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OtpChannelEnum\n                    \n                \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL\n                            \n                        \n                        \n                            \n                                 SMS\n                            \n                        \n                        \n                            \n                                Value : SMS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OtpTypeEnum\n                    \n                \n                        \n                            \n                                 REGISTRATION\n                            \n                        \n                        \n                            \n                                Value : REGISTRATION\n                            \n                        \n                        \n                            \n                                 CHANGE_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : CHANGE_PASSWORD\n                            \n                        \n                        \n                            \n                                 UPDATE_PROFILE\n                            \n                        \n                        \n                            \n                                Value : UPDATE_PROFILE\n                            \n                        \n                        \n                            \n                                 UPDATE_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : UPDATE_PASSWORD\n                            \n                        \n                        \n                            \n                                 DELETE_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : DELETE_ACCOUNT\n                            \n                        \n            \n        \n\n    src/sms/sendchamp/sendchamp.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        SendChampSmsRouteEnum\n                    \n                \n                        \n                            \n                                 DND\n                            \n                        \n                        \n                            \n                                Value : dnd\n                            \n                        \n                        \n                            \n                                 NON_DND\n                            \n                        \n                        \n                            \n                                Value : non_dnd\n                            \n                        \n                        \n                            \n                                 INTERNATIONAL\n                            \n                        \n                        \n                            \n                                Value : international\n                            \n                        \n            \n        \n\n    src/sms/termii/termii.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        TermiiSmsChannelEnum\n                    \n                \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : generic\n                            \n                        \n                        \n                            \n                                 DND\n                            \n                        \n                        \n                            \n                                Value : dnd\n                            \n                        \n                        \n                            \n                                 WHATSAPP\n                            \n                        \n                        \n                            \n                                Value : whatsapp\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TermiiSmsTypeEnum\n                    \n                \n                        \n                            \n                                 PLAIN\n                            \n                        \n                        \n                            \n                                Value : plain\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appProps   (src/.../app-props.constant.ts)\n                        \n                        \n                            awsConfig   (src/.../environment.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            FieldsMatch   (src/.../fields-match.validation.ts)\n                        \n                        \n                            getAllowedOrigins   (src/.../cors.config.ts)\n                        \n                        \n                            IsChannelValue   (src/.../send-otp.dto.ts)\n                        \n                        \n                            isDev   (src/.../environment.config.ts)\n                        \n                        \n                            isInAws   (src/.../environment.config.ts)\n                        \n                        \n                            isProd   (src/.../environment.config.ts)\n                        \n                        \n                            isTesting   (src/.../environment.config.ts)\n                        \n                        \n                            IsValidId   (src/.../id.validation.ts)\n                        \n                        \n                            NotEqualTo   (src/.../not-equal.validation.ts)\n                        \n                        \n                            schemaOptions   (src/.../schema.constant.ts)\n                        \n                        \n                            sentryConfig   (src/.../sentry.config.ts)\n                        \n                        \n                            setupCors   (src/.../cors.config.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.config.ts)\n                        \n                        \n                            setupValidation   (src/.../validation.config.ts)\n                        \n                        \n                            syncRoutes   (src/.../routes.config.ts)\n                        \n                        \n                            validateEnv   (src/.../environment.validation.ts)\n                        \n                        \n                            validateUrl   (src/.../validation.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/config/app-props.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appProps\n                        \n                    \n                \n            \n            \n                \nappProps()\n                \n            \n\n\n\n\n        \n    \n    src/_common/config/environment.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        awsConfig\n                        \n                    \n                \n            \n            \n                \nawsConfig()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDev\n                        \n                    \n                \n            \n            \n                \nisDev()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInAws\n                        \n                    \n                \n            \n            \n                \nisInAws()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n            \n                \nisProd()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTesting\n                        \n                    \n                \n            \n            \n                \nisTesting()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/_common/validations/fields-match.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FieldsMatch\n                        \n                    \n                \n            \n            \n                \nFieldsMatch(property: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                property\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/config/cors.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAllowedOrigins\n                        \n                    \n                \n            \n            \n                \ngetAllowedOrigins()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCors\n                        \n                    \n                \n            \n            \n                \nsetupCors(app)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/otp/dtos/send-otp.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsChannelValue\n                        \n                    \n                \n            \n            \n                \nIsChannelValue(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/validations/id.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsValidId\n                        \n                    \n                \n            \n            \n                \nIsValidId(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/validations/not-equal.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotEqualTo\n                        \n                    \n                \n            \n            \n                \nNotEqualTo(property: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                property\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/constants/schema.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schemaOptions\n                        \n                    \n                \n            \n            \n                \nschemaOptions()\n                \n            \n\n\n\n\n        \n    \n    src/_common/config/sentry.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sentryConfig\n                        \n                    \n                \n            \n            \n                \nsentryConfig()\n                \n            \n\n\n\n\n        \n    \n    src/_common/config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/config/validation.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupValidation\n                        \n                    \n                \n            \n            \n                \nsetupValidation(app)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/config/routes.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        syncRoutes\n                        \n                    \n                \n            \n            \n                \nsyncRoutes(app)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/validations/environment.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateEnv\n                        \n                    \n                \n            \n            \n                \nvalidateEnv(config: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/_common/helpers/validation.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateUrl\n                        \n                    \n                \n            \n            \n                \nvalidateUrl()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run startTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GoogleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SendChampModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SmsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TermiiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GoogleModule\n\n\n\ncluster_GoogleModule_exports\n\n\n\ncluster_GoogleModule_providers\n\n\n\ncluster_LoanModule\n\n\n\ncluster_LoanModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_imports\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SendChampModule\n\n\n\ncluster_SendChampModule_exports\n\n\n\ncluster_SendChampModule_providers\n\n\n\ncluster_SmsModule\n\n\n\ncluster_SmsModule_exports\n\n\n\ncluster_SmsModule_providers\n\n\n\ncluster_TermiiModule\n\n\n\ncluster_TermiiModule_exports\n\n\n\ncluster_TermiiModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nTokenService \n\nTokenService \n\nTokenService  -->\n\nAuthModule->TokenService \n\n\n\n\n\nLoanModule\n\nLoanModule\n\nAppModule -->\n\nLoanModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nMailModule->UserModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nOtpModule -->\n\nMailModule->OtpModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nSmsModule\n\nSmsModule\n\nSmsModule -->\n\nMailModule->SmsModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nSendChampModule\n\nSendChampModule\n\nAppModule -->\n\nSendChampModule->AppModule\n\n\n\nSmsModule -->\n\nSendChampModule->SmsModule\n\n\n\n\n\nSendChampService \n\nSendChampService \n\nSendChampService  -->\n\nSendChampModule->SendChampService \n\n\n\n\n\nTermiiModule\n\nTermiiModule\n\nAppModule -->\n\nTermiiModule->AppModule\n\n\n\nSmsModule -->\n\nTermiiModule->SmsModule\n\n\n\n\n\nTermiiService \n\nTermiiService \n\nTermiiService  -->\n\nTermiiModule->TermiiService \n\n\n\nRoleModule -->\n\nUserModule->RoleModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nOtpModule -->\n\nUserModule->OtpModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nGoogleModule\n\nGoogleModule\n\nAuthModule -->\n\nGoogleModule->AuthModule\n\n\n\n\n\nGoogleService \n\nGoogleService \n\nGoogleService  -->\n\nGoogleModule->GoogleService \n\n\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\n\n\nOtpService \n\nOtpService \n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nAnonymousStrategy\n\nAnonymousStrategy\n\nAuthModule -->\n\nAnonymousStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRoleGuard\n\nRoleGuard\n\nAuthModule -->\n\nRoleGuard->AuthModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nAuthModule -->\n\nTokenService->AuthModule\n\n\n\n\n\nGoogleService\n\nGoogleService\n\nGoogleModule -->\n\nGoogleService->GoogleModule\n\n\n\n\n\nLoanService\n\nLoanService\n\nLoanModule -->\n\nLoanService->LoanModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\nOtpModule -->\n\nSmsModule->OtpModule\n\n\n\n\n\nSmsService \n\nSmsService \n\nSmsService  -->\n\nSmsModule->SmsService \n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSendChampService\n\nSendChampService\n\nSendChampModule -->\n\nSendChampService->SendChampModule\n\n\n\n\n\nSmsService\n\nSmsService\n\nSmsModule -->\n\nSmsService->SmsModule\n\n\n\n\n\nTermiiService\n\nTermiiService\n\nTermiiModule -->\n\nTermiiService->TermiiModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    52 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AggregatePaginateAndSort   (src/.../filter.helper.ts)\n                        \n                        \n                            ApiRouteDocument   (src/.../api-route.schema.ts)\n                        \n                        \n                            DocumentMeta   (src/.../document.interface.ts)\n                        \n                        \n                            LoanDocument   (src/.../loan.schema.ts)\n                        \n                        \n                            OtpDocument   (src/.../otp.schema.ts)\n                        \n                        \n                            PaginateAndSort   (src/.../filter.helper.ts)\n                        \n                        \n                            RefreshTokenDocument   (src/.../refresh-token.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SendChampSmsSent   (src/.../sendchamp.interface.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/helpers/filter.helper.ts\n    \n    \n        \n            \n                \n                    \n                    AggregatePaginateAndSort\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PaginateAndSort\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/role/schemas/api-route.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ApiRouteDocument\n                \n            \n            \n                \n                            DocumentMeta\n\n                \n            \n        \n    \n    src/_common/interfaces/document.interface.ts\n    \n    \n        \n            \n                \n                    \n                    DocumentMeta\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/loan/schemas/loan.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoanDocument\n                \n            \n            \n                \n                            DocumentMeta\n\n                \n            \n        \n    \n    src/otp/schemas/otp.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OtpDocument\n                \n            \n            \n                \n                            DocumentMeta\n\n                \n            \n        \n    \n    src/auth/schemas/refresh-token.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RefreshTokenDocument\n                \n            \n            \n                \n                            DocumentMeta\n\n                \n            \n        \n    \n    src/role/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            DocumentMeta\n\n                \n            \n        \n    \n    src/sms/sendchamp/sendchamp.interface.ts\n    \n    \n        \n            \n                \n                    \n                    SendChampSmsSent\n                \n            \n            \n                \n                        literal type | literal type\n\n                \n            \n        \n    \n    src/user/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            DocumentMeta\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            aggregatePaginateAndSort   (src/.../filter.helper.ts)\n                        \n                        \n                            AMBIGUOUS_CHARACTERS_REGEX   (src/.../regex.constant.ts)\n                        \n                        \n                            ApiRouteSchema   (src/.../api-route.schema.ts)\n                        \n                        \n                            arrayDifference   (src/.../filter.helper.ts)\n                        \n                        \n                            arraysEqual   (src/.../filter.helper.ts)\n                        \n                        \n                            BYPASS_RESPONSE_TRANSFORM   (src/.../decorator-keys.constant.ts)\n                        \n                        \n                            BypassResponseTransform   (src/.../bypass-response-transform.decorator.ts)\n                        \n                        \n                            cacheKeys   (src/.../cache.constant.ts)\n                        \n                        \n                            camelCaseToReadable   (src/.../string.helper.ts)\n                        \n                        \n                            dateRangeFilter   (src/.../filter.helper.ts)\n                        \n                        \n                            decodeBase64   (src/.../base64.helper.ts)\n                        \n                        \n                            emptyObject   (src/.../filter.helper.ts)\n                        \n                        \n                            encodeBase64   (src/.../base64.helper.ts)\n                        \n                        \n                            enumValuesAsArray   (src/.../enum.helper.ts)\n                        \n                        \n                            enumValuesExcept   (src/.../enum.helper.ts)\n                        \n                        \n                            formatDate   (src/.../date.helper.ts)\n                        \n                        \n                            generateRandomNumbers   (src/.../string.helper.ts)\n                        \n                        \n                            generateRandomStrings   (src/.../string.helper.ts)\n                        \n                        \n                            getInternationalPhoneNumber   (src/.../mobile.helper.ts)\n                        \n                        \n                            getNow   (src/.../date.helper.ts)\n                        \n                        \n                            getReadableStream   (src/.../uploads.helper.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            handleAxiosError   (src/.../http.helper.ts)\n                        \n                        \n                            LoanSchema   (src/.../loan.schema.ts)\n                        \n                        \n                            longDate   (src/.../date.helper.ts)\n                        \n                        \n                            maskEmailAddress   (src/.../string.helper.ts)\n                        \n                        \n                            maskPhoneNumber   (src/.../string.helper.ts)\n                        \n                        \n                            mediumDate   (src/.../date.helper.ts)\n                        \n                        \n                            numberRangeFilter   (src/.../filter.helper.ts)\n                        \n                        \n                            OPTIONAL_GUARD_KEY   (src/.../decorator-keys.constant.ts)\n                        \n                        \n                            OTP_REGEX   (src/.../regex.constant.ts)\n                        \n                        \n                            OtpSchema   (src/.../otp.schema.ts)\n                        \n                        \n                            paginateAndSort   (src/.../filter.helper.ts)\n                        \n                        \n                            PaginatedModel   (src/.../pagination.decorator.ts)\n                        \n                        \n                            PASSWORD_REGEX   (src/.../regex.constant.ts)\n                        \n                        \n                            RefreshTokenSchema   (src/.../refresh-token.schema.ts)\n                        \n                        \n                            resolveAuthType   (src/.../auth.helper.ts)\n                        \n                        \n                            responder   (src/.../responder.helper.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../decorator-keys.constant.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            selectFromEnum   (src/.../enum.helper.ts)\n                        \n                        \n                            sentenceCase   (src/.../string.helper.ts)\n                        \n                        \n                            sleep   (src/.../promises.helper.ts)\n                        \n                        \n                            SUB_DOMAIN_REGEX   (src/.../regex.constant.ts)\n                        \n                        \n                            timeRangeFilter   (src/.../filter.helper.ts)\n                        \n                        \n                            titleCase   (src/.../string.helper.ts)\n                        \n                        \n                            transformBoolean   (src/.../filter.helper.ts)\n                        \n                        \n                            transformDoc   (src/.../filter.helper.ts)\n                        \n                        \n                            transformRecordsForDownload   (src/.../filter.helper.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            validMobileNumber   (src/.../mobile.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/helpers/filter.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        aggregatePaginateAndSort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  params: AggregatePaginateAndSort,\n) => {\n  const {\n    model,\n    pipeline = [],\n    sort = '',\n    filters = {},\n    page = 1,\n    limit = 10,\n  } = params;\n\n  if (isNotEmptyObject(filters)) {\n    pipeline.push({\n      $match: filters,\n    });\n  }\n\n  if (sort) {\n    const [columnName, order] = sort.split(',');\n\n    pipeline.push({\n      $sort: {\n        [columnName]: order === 'asc' ? 1 : -1,\n      },\n    });\n  }\n\n  if (page) {\n    pipeline.push({\n      $skip: (page - 1) * limit,\n    });\n  }\n\n  if (limit) {\n    pipeline.push({\n      $limit: limit,\n    });\n  }\n\n  const dataPromise = model.aggregate(pipeline);\n\n  const countPipeline = [...pipeline]; // copy the pipeline\n  countPipeline.push({ $count: 'total' });\n\n  const totalPromise = model.aggregate(countPipeline);\n\n  return Promise.all([dataPromise, totalPromise]).then(\n    ([data, [totalResult]]) => {\n      const total = totalResult ? totalResult.total : 0;\n      const lastPage = Math.ceil(total / limit);\n      const hasNextPage = page  1;\n\n      const meta: PaginationMeta = {\n        total,\n        page,\n        lastPage,\n        hasNextPage,\n        hasPreviousPage,\n        limit,\n      };\n\n      return {\n        data: data.map(transformDoc) as T[],\n        meta,\n      };\n    },\n  );\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrayDifference\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr1: string[], arr2: string[]) => {\n  return arr1.filter((item) => !arr2.includes(item));\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arraysEqual\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr1: string[], arr2: string[]) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateRangeFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (minDate: Date, maxDate: Date, key: string) => {\n  if (minDate && !maxDate) {\n    return {\n      [key]: {\n        $gte: startOfDay(minDate),\n      },\n    };\n  }\n\n  if (maxDate && !minDate) {\n    return {\n      [key]: {\n        $lte: endOfDay(maxDate),\n      },\n    };\n  }\n\n  if (minDate && maxDate) {\n    return {\n      [key]: {\n        $gte: startOfDay(minDate),\n        $lte: endOfDay(maxDate),\n      },\n    };\n  }\n\n  return {};\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyObject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj: Record) => {\n  return Object.keys(obj).length === 0 && obj.constructor === Object;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberRangeFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (min: number, max: number, key: string) => {\n  if (min && !max) {\n    return {\n      [key]: {\n        $gte: min,\n      },\n    };\n  }\n\n  if (max && !min) {\n    return {\n      [key]: {\n        $lte: max,\n      },\n    };\n  }\n\n  if (min && max) {\n    return {\n      [key]: {\n        $gte: min,\n        $lte: max,\n      },\n    };\n  }\n\n  return {};\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginateAndSort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (params: PaginateAndSort) => {\n  const {\n    model,\n    sort = 'createdAt,desc',\n    filters = {},\n    page = 1,\n    limit = 50,\n    projection = null,\n    options = null,\n    populate = null,\n  } = params;\n\n  const query = model.find(filters, projection, options);\n\n  if (populate) {\n    query.populate(populate);\n  }\n\n  if (sort) {\n    const [columnName, order] = sort.split(',');\n\n    query.sort({\n      [columnName]: order as SortOrder,\n    });\n  }\n\n  const dataPromise = query\n    .skip((page - 1) * limit)\n    .limit(limit)\n    .exec();\n\n  const totalPromise = model.countDocuments(filters);\n\n  return Promise.all([dataPromise, totalPromise]).then(([data, total]) => {\n    const lastPage = Math.ceil(total / limit);\n    const hasNextPage = page  1;\n\n    const meta: PaginationMeta = {\n      total,\n      page,\n      lastPage,\n      hasNextPage,\n      hasPreviousPage,\n      limit,\n    };\n\n    return {\n      data: data.map(transformDoc) as T[],\n      meta,\n    };\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeRangeFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (minDate: Date, maxDate: Date, key: string) => {\n  if (minDate && !maxDate) {\n    return {\n      [key]: {\n        $gte: minDate,\n      },\n      // $expr: {\n      //   $and: [\n      //     { $gte: [{ $hour: `$${key}` }, minDate.getHours() - 1] },\n      //     { $gte: [{ $minute: `$${key}` }, minDate.getMinutes()] },\n      //   ],\n      // },\n    };\n  }\n\n  if (maxDate && !minDate) {\n    return {\n      $expr: {\n        $and: [\n          { $lte: [{ $hour: `$${key}` }, maxDate.getHours() - 1] },\n          { $lte: [{ $minute: `$${key}` }, maxDate.getMinutes()] },\n        ],\n      },\n    };\n  }\n\n  if (minDate && maxDate) {\n    return {\n      $expr: {\n        $and: [\n          // MIN\n          { $gte: [{ $hour: `$${key}` }, minDate.getHours() - 1] },\n          { $gte: [{ $minute: `$${key}` }, minDate.getMinutes()] },\n\n          // MAX\n          { $lte: [{ $hour: `$${key}` }, maxDate.getHours() - 1] },\n          { $lte: [{ $minute: `$${key}` }, maxDate.getMinutes()] },\n        ],\n      },\n    };\n  }\n\n  return {};\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return ({ value }) => {\n    const transformed = value?.toLowerCase();\n\n    return ['true', 'false'].includes(transformed)\n      ? transformed === 'true'\n      : undefined;\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformDoc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (doc: T): T => {\n  if (!doc) {\n    return null;\n  }\n\n  if ((doc as any)?.isDeleted) {\n    return null;\n  }\n\n  delete (doc as any).isDeleted;\n\n  if ((doc as any)?._id) {\n    (doc as any).id = (doc as any)?._id?.toString();\n    delete (doc as any)._id;\n  }\n\n  return doc;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformRecordsForDownload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  data: T[],\n  keys: (keyof T)[],\n) => {\n  return data.map((item) => {\n    const readableItem: Record = {};\n\n    for (const key of keys) {\n      if (item.hasOwnProperty(key)) {\n        if (['createdAt', 'updatedAt'].includes(key as string)) {\n          item[key as string] = longDate(item[key as string]);\n        }\n\n        readableItem[camelCaseToReadable(key as string)] = item[key];\n      }\n    }\n\n    return readableItem;\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/constants/regex.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AMBIGUOUS_CHARACTERS_REGEX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /[IiLlOo10\\s]/g\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTP_REGEX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '^[0-9]{6}$'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PASSWORD_REGEX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?:.*[^\\w\\s])?[a-zA-Z\\d!@#$%^&*+\\-.,:;<>{}=|\\\\/()__+\"'?~]{8,}$/\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SUB_DOMAIN_REGEX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^[a-zA-Z0-9-]+$/\n                    \n                \n\n\n        \n    \n\n    src/role/schemas/api-route.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiRouteSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ApiRoute)\n                    \n                \n\n\n        \n    \n\n    src/_common/constants/decorator-keys.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BYPASS_RESPONSE_TRANSFORM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bypassResponseTransform'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPTIONAL_GUARD_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'optional_guard'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/bypass-response-transform.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BypassResponseTransform\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(BYPASS_RESPONSE_TRANSFORM, true)\n                    \n                \n\n\n        \n    \n\n    src/_common/constants/cache.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cacheKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiRoutes: 'apiRoutes',\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/string.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        camelCaseToReadable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (str: string): string => {\n  return str\n    .replace(/([A-Z])/g, ' $1') // Insert a space before all capital letters\n    .replace(/^./, (firstChar) => firstChar.toUpperCase()); // Capitalize the first letter\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (length = 6) => {\n  const digits = '0123456789';\n  let otp = '';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomStrings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (length = 6) => {\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789';\n  let seed = '';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maskEmailAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (emailAddress: string) => {\n  if (!emailAddress) {\n    return '';\n  }\n\n  const [firstPart, lastPart] = emailAddress.split('@');\n\n  const nChar = firstPart.length > 3 ? 3 : firstPart.length - 1;\n\n  const firstNChars = firstPart.substring(0, nChar);\n\n  const lastChar = firstPart.charAt(firstPart.length - 1);\n\n  const numberOfAsterisks = firstPart.length - firstNChars.length - 1;\n\n  const asterisks = '*'.repeat(numberOfAsterisks);\n\n  return `${firstNChars + asterisks + lastChar + '@' + lastPart}`;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maskPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (phoneNumber: string) => {\n  if (!phoneNumber) {\n    return '';\n  }\n\n  const total = phoneNumber.length;\n  const nChar = 6;\n  const lastNChar = 3;\n  const toBeMasked = total - nChar - lastNChar;\n  const asterisks = '*'.repeat(toBeMasked);\n\n  return (\n    phoneNumber.substring(0, nChar) +\n    asterisks +\n    phoneNumber.substr(total - lastNChar)\n  );\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sentenceCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (sentence: string) => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (sentence: string) => {\n  return sentence\n    .split(' ')\n    .map((word) => sentenceCase(word))\n    .join(' ');\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/base64.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decodeBase64\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (base64: string): T => {\n  const decoded = Buffer.from(base64, 'base64').toString('ascii');\n\n  return JSON.parse(decoded);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeBase64\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (payload: T): string => {\n  return Buffer.from(JSON.stringify(payload)).toString('base64');\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/enum.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enumValuesAsArray\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (enumValue: T): string[] => {\n  if (!enumValue) {\n    return [];\n  }\n  return [...Object.values(enumValue)];\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enumValuesExcept\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  enumObject: T,\n  except: string,\n): string[] => {\n  return enumValuesAsArray(enumObject).filter((item) => item !== except);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFromEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (theEnum: T, addEmpty = false) => {\n  const selectOptions = [];\n\n  addEmpty && selectOptions.push({ label: '--Select--', value: '' });\n\n  for (const [key, value] of Object.entries(\n    theEnum as unknown as ArrayLike,\n  )) {\n    selectOptions.push({\n      label: titleCase(key.replaceAll('_', ' ')),\n      value,\n    });\n  }\n\n  return [...selectOptions] as DropDownOption[];\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/date.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (date: Date | null) => {\n  if (!date) {\n    return null;\n  }\n\n  const dateObj = new Date(date);\n\n  if (!isValid(dateObj)) {\n    return null;\n  }\n\n  return new Date(format(dateObj, 'yyyy-MM-dd'));\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const now = new Date();\n  now.setSeconds(0);\n  now.setMilliseconds(0);\n  return now;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (date: Date | string): string => {\n  return format(new Date(date), 'd MMM yyyy, HH:mm a');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediumDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (date: Date | string): string => {\n  return format(new Date(date), 'd MMM yyyy');\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/mobile.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getInternationalPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  phoneNumber: string,\n  countryCode: CountryCode = 'NG',\n): string => {\n  if (!validMobileNumber(phoneNumber, countryCode)) {\n    return '';\n  }\n\n  const parsedPhoneNumber = parsePhoneNumber(\n    phoneNumber.toString(),\n    countryCode,\n  );\n\n  return `${parsedPhoneNumber?.countryCallingCode}${parsedPhoneNumber?.nationalNumber}`;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validMobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  value: string,\n  countryCode: CountryCode = 'NG',\n) => {\n  return isValidPhoneNumber(value.toString(), countryCode);\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/uploads.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getReadableStream\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (buffer: Buffer): Readable => {\n  const stream = new Readable();\n\n  stream.push(buffer);\n  stream.push(null);\n\n  return stream;\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): IUser | null => {\n    const request = ctx.switchToHttp().getRequest();\n\n    return isNotEmptyObject(request?.user) ? (request.user as IUser) : null;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/http.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleAxiosError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error) => {\n  const errorMessage = error?.response?.data || error?.response || error;\n\n  return throwError(() => errorMessage);\n}\n                    \n                \n\n\n        \n    \n\n    src/loan/schemas/loan.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoanSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Loan)\n                    \n                \n\n\n        \n    \n\n    src/otp/schemas/otp.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OtpSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Otp)\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/pagination.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginatedModel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (model) => {\n  return applyDecorators(\n    ApiOkResponse({\n      schema: {\n        type: 'object',\n        properties: {\n          data: { type: 'array', items: { $ref: getSchemaPath(model) } },\n          meta: {\n            type: 'object',\n            properties: {\n              total: { type: 'integer', example: 100 },\n              page: { type: 'integer', example: 1 },\n              lastPage: { type: 'integer', example: 2 },\n              hasNextPage: { type: 'boolean', example: true },\n              hasPreviousPage: { type: 'boolean', example: false },\n              limit: { type: 'integer', example: 50 },\n            },\n          },\n        },\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/schemas/refresh-token.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RefreshTokenSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(RefreshToken)\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/auth.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveAuthType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  emailOrPhone: string,\n): OtpChannelEnum | null => {\n  if (isEmail(emailOrPhone)) {\n    return OtpChannelEnum.EMAIL;\n  }\n\n  if (isMobilePhone(emailOrPhone)) {\n    return OtpChannelEnum.SMS;\n  }\n\n  return null;\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/responder.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        responder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  success: (\n    message: string,\n    data: T = undefined,\n  ): ApiResponse => {\n    return {\n      message,\n      data,\n    };\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/role/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/_common/helpers/promises.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sleep\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n                    \n                \n\n\n        \n    \n\n    src/user/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
